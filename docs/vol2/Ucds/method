.NH
Methodology.
.LP
These are the conventional steps in a design.  Many are necessary simply to
maintain consistency between ``source'' and ``object'' files.
We will collect all of this into a
.CW mkfile
in a later section.
.nr P 0 1
.IP (\n+P)
The interactive program
.I jraw
is used to construct schematics, kept in files
whose names end with
.CW ".j" "."
The semantics of a circuit diagram (its
.CW ".w"
file) are derived from the
.CW ".j"
file by running
.I "jraw -w" "."
.IP (\n+P)
Any editor may be used to create files in
.CW lde
format for logic that is to be implemented with
.SM PAL "'s."
These filenames end with
.CW ".e" "."
Pin information resides in a corresponding
.CW ".p"
file, generated by
.I "lde -W" "."
.IP (\n+P)
A
.CW ".pins"
file, that matches pin names with numbers for each chip type, must
be constructed.  Most pin information comes from standard libraries,
but the user must generally supply some of it, usually for
.SM I/O
connectors (\c
.CW io.pins ")"
or non-standard chips (\c
.CW my.pins ")."
.I Mkpins
reads
.CW ".w"
files,
.CW ".p"
files, and pin libraries to produce the
.CW ".pins"
file.
.IP (\n+P)
.I "Cdmglob -f -v"
reads the
.CW ".w"
and
.CW ".pins"
files to produce a
.CW ".wx"
file, in which all macros are expanded, and nets are described in terms of
pin numbers.
.IP (\n+P)
At this point one may do static circuit checks with
.I smoke "."
.IP (\n+P)
Most files discussed so far have to do with the logical part of the design, and,
except for
.CW ".e"
files, are in
.SM CDL
(Circuit Design Language).  The remainder of the physical design files are in
.SM FIZZ
format.  So, at this point, one uses
.I "fizz cvt"
to turn the
.CW ".wx"
file into a
.CW ".fx"
file.
.IP (\n+P)
As with the
.CW ".pins"
file, one creates a
.CW ".pkg"
file with geometric descriptions of each package type.
.IP (\n+P)
A geometric description of the board (\c
.CW ".brd"
file) is made.
.IP (\n+P)
Chip positioning information (\c
.CW ".pos"
file) is generated.  This is usually done interactively with
.I "fizz place" "."
.IP (\n+P)
The wrap list (\c
.CW ".wr"
file) is now made, and one can physically wrap the board.
.IP (\n+P)
To make changes, one generates a new
.CW ".wr"
file;
.I rework
then compares the new and old wrap files and generates separate lists
for unwrapping and rewrapping.
