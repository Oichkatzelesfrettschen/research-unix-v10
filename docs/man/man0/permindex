.xx "" "" "=, ==, =p, ==p \- redo previous shell command" "" =(1)
.xx "11size, 11strip \- pdp11 support" "" "11as, 11cc, 11ld, 11nm, 11ranlib, 11reloc," "" 11(8)
.xx "alignment" "col," "2, 3, 4, 5, 6, mc, fold, expand \- column" "" column(1)
.xx "" "" "2500 \- BVH2500 videotape recorder" "" 2500(1)
.xx "" "flicks, fflicks, preflicks," "2mux \- movie graphics for 5620" "" flicks(9.1)
.xx "alignment" "col, 2," "3, 4, 5, 6, mc, fold, expand \- column" "" column(1)
.xx "300 and 300s terminals" "" "300, 300s \- handle special functions of DASI" "" 300(A)
.xx "" "" "32ld \- bootstrap loader for 5620" "" 32ld(9.1)
.xx "" "l3tol, ltol3 \(mi convert between" "3-byte integers and long integers" "" l3tol(3)
.xx "" "pi," "3pi \- process inspector" "" pi(9.1)
.xx "" "3cc, 3as, 3ar, 3ld, 3nm," "3size, 3strip, cprs \- MAC-32 C compiler" "" 3cc(9.1)
.xx "" "col, 2, 3," "4, 5, 6, mc, fold, expand \- column alignment" "" column(1)
.xx "" "tk \- paginator for the Tektronix" "4014" "" tk(A)
.xx "terminal" "" "450 \- handle special functions of the DASI 450" "" 450(A)
.xx "" "col, 2, 3, 4," "5, 6, mc, fold, expand \- column alignment" "" column(1)
.xx "" "32ld \- bootstrap loader for" "5620" "" 32ld(9.1)
.xx "" "mux, ismux, invert \- layer multiplexer for" "5620" "" mux(9.1)
.xx "" "proof \- troff output interpreter for" "5620" "" proof(9.1)
.xx "" "jx \-" "5620 execution and stdio interpreter" "" jx(9.1)
.xx "" "realtime, sendchar, sendnchars, kill, exit \-" "5620 input/output requests" "/kbdchar, rcvchar," request(9.2)
.xx "" "intro \- introduction to" "5620-related software" "" intro(9)
.xx "" "col, 2, 3, 4, 5," "6, mc, fold, expand \- column alignment" "" column(1)
.xx "" "" "abort \- generate a fault" "" abort(3)
.xx "arithmetic functions: absolute value, sign,/" "" "abs, sgn, gcd, lcm, min, max, labs \(mi integer" "" arith(3)
.xx "functions" "fabs, fmod, floor, ceil \(mi" "absolute value, remainder, floor, ceiling" "" floor(3)
.xx "" "" "ac \- login accounting" "" ac(8)
.xx "" "touch, chdate \- set modification or" "access date of a file" "" chdate(1)
.xx "" "" "access \(mi determine accessibility of file" "" access(2)
.xx "" "ac \- login" "accounting" "" ac(8)
.xx "" "" "acct \- execution accounting file" "" acct(5)
.xx "" "" "acct \(mi turn accounting on or off" "" acct(2)
.xx "" "sa," "accton \- system accounting" "" sa(8)
.xx "" "sin, cos, tan, asin," "acos, atan, atan2 \(mi trigonometric functions" "" sin(3)
.xx "" "dialout \(mi place call on" "ACU" "" dialout(3)
.xx "" "" "adb \- debugger" "" adb(1)
.xx "muldiv, ptinrect, raddp, rsubp, rectXrect,/" "" "add, sub, mul, div, eqpt, eqrect, inset," "" add(9.3)
.xx "segment, texture \- graphics functions" "Code," "addr, bitblt, point, rectf, screenswap," "" bitblt(9.3)
.xx "" "dkname \(mi map system name to Datakit" "address" "" dkname(7)
.xx "" "mail \- mail" "addresses" "" mail(6)
.xx "" "block \-" "adjustable arrays" "" block(3+)
.xx "" "backup \- backup client" "administration" "" backup(8)
.xx "dungeon-exploration games" "" "adventure, zork, rogue, wump \-" "" adventure(A)
.xx "" "atc \-" "air traffic controller" "" atc(A)
.xx "" "" "alarm, nap, pause \(mi schedule timing delays" "" alarm(2)
.xx "sendchar, sendnchars,/" "request, own, wait," "alarm, sleep, nap, kbdchar, rcvchar, realtime," "" request(9.2)
.xx "" "altran \- language for" "algebraic manipulation" "" altran(A)
.xx "" "maple \- interactive symbolic" "algebraic program" "" maple(A)
.xx "" "movie, stills \-" "algorithm animation" "" movie(9.1)
.xx "allocate memory" "" "alloc, free, balloc, bfree, gcalloc, gcfree \-" "" alloc(9.3)
.xx "" "brk, sbrk \(mi change core" "allocation" "" brk(2)
.xx "" "pool \- fast memory" "allocation" "" pool(3+)
.xx "" "galloc, gfree, garbage \(mi storage" "allocation with garbage collection" "" galloc(3)
.xx "" "malloc, free, realloc, calloc, cfree \- memory" "allocator" "" malloc(3)
.xx "" "" "altran \- language for algebraic manipulation" "" altran(A)
.xx "maple, ops5, pascal, ratfor, S, smp, sno,/" "" "altran, cospan, esterel, icon, lisp, macsyma," "" langs(1)
.xx "" "movie, stills \- algorithm" "animation" "" movie(9.1)
.xx "" "bcd, ppt, morse \- convert to" "antique media" "" bcd(A)
.xx "" "" "a.out \- object file format" "" a.out(5)
.xx "" "apnews," "ap.keys \- present AP wire stories" "" apnews(7)
.xx "select arguments" "" "apply, pick \- repeatedly apply a command;" "" apply(1)
.xx "" "" "apsend \- send troff output to phototypesetter" "" apsend(1)
.xx "" "" "ar \- archive (library) file format" "" ar(5)
.xx "" "" "ar, ranlib \- archive and library maintainer" "" ar(1)
.xx "functions" "circle, disc," "arc, ellipse, eldisc, elarc \- circle-drawing" "" circle(9.3)
.xx "" "cpio \- format of cpio" "archive" "" cpio(5)
.xx "" "ar, ranlib \-" "archive and library maintainer" "" ar(1)
.xx "" "ar \-" "archive (library) file format" "" ar(5)
.xx "" "tar \- tape" "archiver" "" tar(1)
.xx "" "cpio \- copy file" "archives in and out" "" cpio(1)
.xx "" "" "arff \- read RT11 files" "" arff(8)
.xx "" "varargs \(mi variable" "argument list" "" varargs(3)
.xx "" "xargs \- construct" "argument lists and execute command" "" xargs(A)
.xx "" "pick \- repeatedly apply a command; select" "arguments" "apply," apply(1)
.xx "" "echo, printf \- print" "arguments" "" echo(1)
.xx "" "expr \- evaluate" "arguments as an expression" "" expr(1)
.xx "" "getflags \(mi process flag" "arguments in argv" "" getflags(3)
.xx "" "getarg, iargc \(mi command" "arguments to Fortran" "" getarg(3)
.xx "" "rpow, mpow \(mi multiple precision integer" "arithmetic" "/min, mout, fmin, fmout, move, mcmp," mp(3)
.xx "" "" "arithmetic \- drill in number facts" "" arithmetic(A)
.xx "" "abs, sgn, gcd, lcm, min, max, labs \(mi integer" "arithmetic functions: absolute value, sign,/" "" arith(3)
.xx "" "bc \- arbitrary-precision" "arithmetic language" "" bc(1)
.xx "" "ptinrect, raddp, rsubp, rectXrect, rectclip \-" "arithmetic on points and rectangles" "/muldiv," add(9.3)
.xx "" "Map \- associative" "array classes" "" map(3+)
.xx "" "block \- adjustable" "arrays" "" block(3+)
.xx "" "strstreambuf \- streambuf specialized to" "arrays" "" ssbuf(A)
.xx "" "strstream \- iostream specialized to" "arrays" "" strstream(A)
.xx "" "" "as \- assembler" "" as(1)
.xx "" "" "asa \- interpret ASA control characters" "" asa(A)
.xx "" "asctime, timezone \(mi convert date and time to" "ASCII" "ctime, localtime, gmtime," ctime(3)
.xx "" "ecvt, fcvt, gcvt \- convert numbers to" "ascii" "" ecvt(3)
.xx "" "" "ascii \- interpret ASCII characters" "" ascii(1)
.xx "" "" "ascii \- map of ASCII character set" "" ascii(6)
.xx "" "xd, od \(mi hex, octal, decimal, or" "ASCII dump" "" xd(1)
.xx "" "atol, strtod, strtol, strtoul \(mi convert" "ASCII to numbers" "atof, atoi," atof(3)
.xx "" "timec, timegm, timelocal \- convert" "ASCII to time" "" timec(3)
.xx "ASCII" "ctime, localtime, gmtime," "asctime, timezone \(mi convert date and time to" "" ctime(3)
.xx "" "" "asd \- automatic software distribution" "" asd(8)
.xx "functions" "sin, cos, tan," "asin, acos, atan, atan2 \(mi trigonometric" "" sin(3)
.xx "" "as \-" "assembler" "" as(1)
.xx "" "" "assert \(mi assertion checking" "" assert(3)
.xx "" "Map \-" "associative array classes" "" map(3+)
.xx "" "sky \-" "astronomical ephemeris" "" sky(7)
.xx "" "" "at \(mi execute commands at a later time" "" at(1)
.xx "" "sin, cos, tan, asin, acos," "atan, atan2 \(mi trigonometric functions" "" sin(3)
.xx "" "cos, sin," "atan2, sqrt, norm \- integer math functions" "" cos(9.3)
.xx "" "" "atc \- air traffic controller" "" atc(A)
.xx "convert ASCII to numbers" "" "atof, atoi, atol, strtod, strtol, strtoul \(mi" "" atof(3)
.xx "" "makepaper \- consult database of locally" "authored papers" "findauthor, papers," papers(7)
.xx "" "asd \-" "automatic software distribution" "" asd(8)
.xx "" "inspkg, seal, unseal \- package files for" "automatic software distribution" "mkpkg," mkpkg(8)
.xx "" "ship, shipstat \(mi" "automatic software distribution" "" ship(8)
.xx "" "dist, dme, plan, path, cross \(mi" "aviation navigation" "" av(A)
.xx "" "w, fp, ft, fd, rad \(mi" "aviation weather" "" avw(A)
.xx "language" "" "awk \- pattern-directed scanning and processing" "" awk(1)
.xx "" "back \-" "backgammon" "" back(A)
.xx "" "" "backup \- backup and recover files" "" backup(1)
.xx "" "" "backup \- backup client administration" "" backup(8)
.xx "" "" "backup \- incremental backup files" "" backup(5)
.xx "" "rarepl, rarct \- replace" "bad blocks on MSCP disks" "" rarepl(8)
.xx "" "smash \- rewrite" "bad disk sectors" "" smash(8)
.xx "memory" "alloc, free," "balloc, bfree, gcalloc, gcfree \- allocate" "" alloc(9.3)
.xx "" "" "banner, rot, rnd, bigp \- print in large type" "" banner(A)
.xx "" "" "basename, dirname \- strip filename affixes" "" basename(1)
.xx "" "postbgi \- PostScript translator for BGI (" "Basic Graphical Instructions) files" "" postbgi(A)
.xx "" "" "bc \- arbitrary-precision arithmetic language" "" bc(1)
.xx "" "" "bcd, ppt, morse \- convert to antique media" "" bcd(A)
.xx "" "" "bcp \(mi reformat black-and-white picture files" "" bcp(1)
.xx "" "bclose, bseek, bfirst, bkey, breclen, bread," "bdelete, bwrite \(mi compressed B-tree/" "bopen," cbt(3)
.xx "" "cb \- C program" "beautifier" "" cb(1)
.xx "" "library," "bellcat \- bell labs library services" "" library(7)
.xx "bessel functions" "" "besj0, besj1, besjn, besy0, besy1, besyn \(mi" "" bessel(3)
.xx "\(mi compressed B-tree/" "bopen, bclose, bseek," "bfirst, bkey, breclen, bread, bdelete, bwrite" "" cbt(3)
.xx "" "alloc, free, balloc," "bfree, gcalloc, gcfree \- allocate memory" "" alloc(9.3)
.xx "" "postbgi \- PostScript translator for" "BGI (Basic Graphical Instructions) files" "" postbgi(A)
.xx "" "" "bianchi \- espresso, steamed milk, hot water" "" bianchi(A)
.xx "" "stime," "biasclock \(mi set time" "" stime(2)
.xx "" "penter, plook, pconvert \- maintain and use" "bibliographic references" "prefer, pinvert," prefer(1)
.xx "" "refer, lookbib, pubindex \- maintain and use" "bibliographic references" "" refer(1)
.xx "" "latex," "bibtex \- tex macro package and bibliographies" "" latex(6)
.xx "" "bigcore, coreid \- permit" "big core images, identify source of image" "" bigcore(1)
.xx "" "banner, rot, rnd," "bigp \- print in large type" "" banner(A)
.xx "" "fread, fwrite \(mi buffered" "binary input/output" "" fread(3)
.xx "" "iclc \- Esterel" "binder" "" iclc(A)
.xx "replacement)" "" "bison \- GNU Project parser generator (yacc" "" bison(A)
.xx "" "bits \- variable length" "bit strings" "" bits(3+)
.xx "texture \- graphics functions" "Code, addr," "bitblt, point, rectf, screenswap, segment," "" bitblt(9.3)
.xx "" "" "bitfile \- format of bitmap file" "" bitfile(9.5)
.xx "" "lens \-" "bitmap magnifier" "" lens(9.1)
.xx "Jrect \- graphics data/" "Word, Point, Rectangle," "Bitmap, Texture, Pt, Rect, Rpt, display, Drect," "" types(9.5)
.xx "" "chrtab \(mi simple character" "bitmaps" "" chrtab(3)
.xx "" "mbits \- macros to typeset" "bitmaps" "" mbits(6)
.xx "compressed/" "bopen, bclose, bseek, bfirst," "bkey, breclen, bread, bdelete, bwrite \(mi" "" cbt(3)
.xx "image" "" "blitblt, menudrop \- save or print a screen" "" blitblt(9.1)
.xx "" "" "block \- adjustable arrays" "" block(3+)
.xx "" "rc \-" "boot script" "" rc(8)
.xx "" "32ld \-" "bootstrap loader for 5620" "" 32ld(9.1)
.xx "" "reboot \-" "bootstrapping procedures" "" reboot(8)
.xx "" "getfields, getmfields, setfields \(mi" "break a string into fields" "" getfields(3)
.xx "B-tree/" "bopen, bclose, bseek, bfirst, bkey," "breclen, bread, bdelete, bwrite \(mi compressed" "" cbt(3)
.xx "" "" "bridge \- card game" "" bridge(A)
.xx "" "" "brk, sbrk \(mi change core allocation" "" brk(2)
.xx "" "samuel \(mi text editor and C" "browser" "" samuel(A)
.xx "" "" "brush \- painting program" "" brush(9.1)
.xx "bwrite \(mi compressed B-tree/" "bopen, bclose," "bseek, bfirst, bkey, breclen, bread, bdelete," "" cbt(3)
.xx "" "cbt \-" "btree utilities" "" cbt(1)
.xx "" "pipestream \- iostream specialized as circular" "buffer" "" pipestream(A)
.xx "" "filebuf \-" "buffer for file input/output" "" filebuf(A)
.xx "" "fread, fwrite \(mi" "buffered binary input/output" "" fread(3)
.xx "" "Fwrite, Fflush, Ftie, Fclose, Fexit \(mi fast" "buffered input/output" "/Fundo, Fputc, Fprint," fio(3)
.xx "" "stdio \(mi standard" "buffered input/output package" "" stdio(3)
.xx "" "streambuf \- public interface of character" "buffering class" "" sbuf(A)
.xx "" "iostream \-" "buffering, formatting and input/output" "" IOS(A)
.xx "" "buf_ld \-" "buffering line discipline" "" bufld(4)
.xx "" "setbuf \(mi assign" "buffering to a stream" "" setbuf(3)
.xx "" "sync \- force writing of system" "buffers" "" sync(2)
.xx "" "" "buf_ld \- buffering line discipline" "" bufld(4)
.xx "" "" "bundle \- collect files for distribution" "" bundle(1)
.xx "cursset, cursswitch, getrect123 \- mouse/" "" "button123, mouse, cursallow, cursinhibit," "" button(9.2)
.xx "" "2500 \-" "BVH2500 videotape recorder" "" 2500(1)
.xx "" "/bseek, bfirst, bkey, breclen, bread, bdelete," "bwrite \(mi compressed B-tree subroutines" "" cbt(3)
.xx "residency" "" "byteyears \- time-space product for file" "" byteyears(A)
.xx "" "f2c \(mi convert Fortran 77 to" "C" "" f2c(1)
.xx "" "samuel \(mi text editor and" "C browser" "" samuel(A)
.xx "" "3ar, 3ld, 3nm, 3size, 3strip, cprs \- MAC-32" "C compiler" "3cc, 3as," 3cc(9.1)
.xx "" "CC, cfront \-" "C++ compiler" "" c++(1)
.xx "" "gcc \- GNU project" "C Compiler" "" gcc(A)
.xx "" "mcc \- MC68000" "C compiler" "" mcc(A)
.xx "" "cc, lcc \-" "C compilers" "" cc(1)
.xx "" "cin \-" "C interpreter" "" cin(1)
.xx "" "cpp \-" "C language preprocessor" "" cpp(8)
.xx "" "cb \-" "C program beautifier" "" cb(1)
.xx "" "pp \-" "C program pretty printer" "" pp(A)
.xx "" "lint, cyntax, cem \-" "C program verifiers" "" lint(1)
.xx "" "hypot," "cabs \(mi euclidean distance" "" hypot(3)
.xx "" "" "cal \- print calendar" "" cal(7)
.xx "" "dc \- desk" "calculator" "" dc(1)
.xx "" "matlab \(mi interactive matrix desk" "calculator" "" matlab(1)
.xx "" "cal \- print" "calendar" "" cal(7)
.xx "" "" "calendar \- reminder service" "" calendar(1)
.xx "" "dialout \(mi place" "call on ACU" "" dialout(3)
.xx "" "cu, ct \-" "call out to a terminal or another system" "" cu(1)
.xx "" "malloc, free, realloc," "calloc, cfree \- memory allocator" "" malloc(3)
.xx "" "tcpmgr \- accept and place" "calls via the TCP protocol" "" tcpmgr(8)
.xx "" "" "canfield, fish \- card games" "" cards(A)
.xx "" "cscan \- scan documents on" "canon scanner" "" cscan(1)
.xx "" "bridge \-" "card game" "" bridge(A)
.xx "" "mille \-" "card game" "" mille(A)
.xx "" "canfield, fish \-" "card games" "" cards(A)
.xx "" "tolower, toupper \(mi force upper or lower" "case" "" tolower(3)
.xx "" "" "cat \- catenate and print" "" cat(1)
.xx "" "scat \- sky" "catalogue" "" scat(7)
.xx "" "" "cb \- C program beautifier" "" cb(1)
.xx "" "" "cbt \- btree utilities" "" cbt(1)
.xx "" "" "CC, cfront \- C++ compiler" "" c++(1)
.xx "" "" "cc, lcc \- C compilers" "" cc(1)
.xx "" "rc," "cd, wait, whatis \- command language" "" rc(1)
.xx "programming language" "sh," "cd, wait, whatis \- shell, the standard command" "" sh(1)
.xx "ceiling functions" "fabs, fmod, floor," "ceil \(mi absolute value, remainder, floor," "" floor(3)
.xx "" "lint, cyntax," "cem \- C program verifiers" "" lint(1)
.xx "" "malloc, free, realloc, calloc," "cfree \- memory allocator" "" malloc(3)
.xx "" "CC," "cfront \- C++ compiler" "" c++(1)
.xx "" "brk, sbrk \(mi" "change core allocation" "" brk(2)
.xx "" "chmod, fchmod, chown, fchown, utime \(mi" "change file mode, owner, group, or times" "" chmod(2)
.xx "" "passwd \(mi" "change login password" "" passwd(1)
.xx "" "chmod \-" "change mode" "" chmod(1)
.xx "" "chown \-" "change owner or group" "" chown(8)
.xx "" "renice \-" "change priority of running process" "" renice(8)
.xx "" "newgrp \(mi" "change to a new group" "" newgrp(1)
.xx "" "chdir, chroot \(mi" "change working or root directory" "" chdir(2)
.xx "" "pipe \(mi create an interprocess" "channel" "" pipe(2)
.xx "" "stream \- communication" "channels" "" stream(4)
.xx "" "ungetc \(mi push" "character back into input stream" "" ungetc(3)
.xx "" "chrtab \(mi simple" "character bitmaps" "" chrtab(3)
.xx "" "streambuf \- public interface of" "character buffering class" "" sbuf(A)
.xx "" "isprint, isgraph, iscntrl, isascii \(mi" "character classification" "/isspace, ispunct," ctype(3)
.xx "" "eqnchar \- special" "character definitions for eqn" "" eqnchar(6)
.xx "" "fgetc, getw, putc, putchar, fputc, putw \(mi" "character- or word-at-a-time stream/" "/getchar," getc(3)
.xx "" "ocr \- optical" "character recognition" "" ocr(1)
.xx "" "ascii \- map of ASCII" "character set" "" ascii(6)
.xx "" "asa \- interpret ASA control" "characters" "" asa(A)
.xx "" "ascii \- interpret ASCII" "characters" "" ascii(1)
.xx "" "tr \- translate" "characters" "" tr(1)
.xx "" "vis \- show invisible" "characters" "" vis(1)
.xx "file" "touch," "chdate \- set modification or access date of a" "" chdate(1)
.xx "directory" "" "chdir, chroot \(mi change working or root" "" chdir(2)
.xx "" "dcheck, ncheck \- file system consistency" "check" "icheck," icheck(8)
.xx "" "fsck \- file system consistency" "check and interactive repair" "" fsck(8)
.xx "" "eqn, neqn," "checkeq \- typeset mathematics" "" eqn(1)
.xx "" "chuck \- a file system" "checking program" "" chuck(8)
.xx "" "" "checknews, readnews \- read netnews articles" "" readnews(7)
.xx "" "wait wait3 \(mi terminate process, wait for" "child to terminate" "_exit," exit(2)
.xx "" "" "chmod \- change mode" "" chmod(1)
.xx "" "" "chown \- change owner or group" "" chown(8)
.xx "owner, group, or times" "chmod, fchmod," "chown, fchown, utime \(mi change file mode," "" chmod(2)
.xx "" "chdir," "chroot \(mi change working or root directory" "" chdir(2)
.xx "" "" "chrtab \(mi simple character bitmaps" "" chrtab(3)
.xx "" "" "chuck \- a file system checking program" "" chuck(8)
.xx "" "" "cin \- C interpreter" "" cin(1)
.xx "" "" "cip \- draw pictures for typesetting" "" cip(9.1)
.xx "circle-drawing functions" "" "circle, disc, arc, ellipse, eldisc, elarc \-" "" circle(9.3)
.xx "" "" "cite \- process citations in a document" "" cite(A)
.xx "" "uucleanup \- uucp spool directory" "clean-up" "" uucleanup(8)
.xx "" "" "clear \- clear terminal screen" "" clear(A)
.xx "" "feof, ferror," "clearerr, fileno \(mi stream status inquiries" "" ferror(3)
.xx "" "backup \- backup" "client administration" "" backup(8)
.xx "" "wwv \- print or set the date from accurate" "clock" "" wwv(1)
.xx "" "cron \-" "clock daemon" "" cron(8)
.xx "create file" "open, creat," "close \(mi open a file for reading or writing," "" open(2)
.xx "" "freopen, fdopen, fclose, fflush \(mi open," "close, or flush a stream" "fopen," fopen(3)
.xx "" "opendir, readdir, telldir, seekdir," "closedir \(mi directory operations" "" directory(3)
.xx "" "" "clri \- clear inode" "" clri(8)
.xx "" "dk, dkp_ld, unixp_ld," "cmc_ld \- Datakit interface and protocols" "" dk(4)
.xx "" "" "cmp \- compare two files" "" cmp(1)
.xx "segment, texture \- graphics functions" "" "Code, addr, bitblt, point, rectf, screenswap," "" bitblt(9.3)
.xx "" "huff \(mi huffman" "codebook/tree generator" "" huff(3)
.xx "alignment" "" "col, 2, 3, 4, 5, 6, mc, fold, expand \- column" "" column(1)
.xx "" "bundle \-" "collect files for distribution" "" bundle(1)
.xx "" "cut, paste \- rearrange" "columns of data" "" cut(1)
.xx "" "ldpcs \- load" "comet microcode" "" ldpcs(8)
.xx "sorted files" "" "comm \- select or reject lines common to two" "" comm(1)
.xx "" "=, ==, =p, ==p \- redo previous shell" "command" "" =(1)
.xx "" "system \(mi issue a shell" "command" "" system(3)
.xx "" "time \- time a" "command" "" time(1)
.xx "" "xargs \- construct argument lists and execute" "command" "" xargs(A)
.xx "" "getarg, iargc \(mi" "command arguments to Fortran" "" getarg(3)
.xx "" "uux \- unix to unix" "command execution" "" uux(1)
.xx "" "rc, cd, wait, whatis \-" "command language" "" rc(1)
.xx "" "getopt \- parse" "command options" "" getopt(A)
.xx "" "sh, cd, wait, whatis \- shell, the standard" "command programming language" "" sh(1)
.xx "" "apply, pick \- repeatedly apply a" "command; select arguments" "" apply(1)
.xx "" "intro \- introduction to" "commands" "" intro(1)
.xx "" "test, [, newer \- condition" "commands" "" test(1)
.xx "" "at \(mi execute" "commands at a later time" "" at(1)
.xx "" "nice, nohup \(mi run" "commands at low priority or immune to hangup" "" nice(1)
.xx "" "/functions: absolute value, sign, greatest" "common divisor, least common multiple, minimum,/" "" arith(3)
.xx "" "comm \- select or reject lines" "common to two sorted files" "" comm(1)
.xx "" "stream \-" "communication channels" "" stream(4)
.xx "" "cmp \-" "compare two files" "" cmp(1)
.xx "" "diff, diff3 \- differential file" "comparison" "" diff(1)
.xx "" "idiff \(mi interactive file" "comparison" "" idiff(1)
.xx "" "3ar, 3ld, 3nm, 3size, 3strip, cprs \- MAC-32 C" "compiler" "3cc, 3as," 3cc(9.1)
.xx "" "CC, cfront \- C++" "compiler" "" c++(1)
.xx "" "esterel \- Esterel" "compiler" "" esterel(A)
.xx "" "f77 \(mi Fortran 77" "compiler" "" f77(1)
.xx "" "gcc \- GNU project C" "Compiler" "" gcc(A)
.xx "" "icont, iconc \- Icon language translator and" "compiler" "" icont(A)
.xx "" "lcoc \- Esterel" "compiler" "" lcoc(A)
.xx "" "lisp, liszt, lxref \- lisp interpreter and" "compiler" "" lisp(A)
.xx "" "mcc \- MC68000 C" "compiler" "" mcc(A)
.xx "" "pc \- pascal language" "compiler" "" pc(A)
.xx "" "sml \(mi Standard ML" "compiler" "" sml(1)
.xx "" "spitbol \- Snobol language" "compiler" "" spitbol(A)
.xx "" "yacc, eyacc \- yet another" "compiler-compiler" "" yacc(1)
.xx "" "cc, lcc \- C" "compilers" "" cc(1)
.xx "expand files" "pack, unpack, pcat," "compress, uncompress, zcat \(mi compress and" "" pack(1)
.xx "" "whoami \-" "computer name" "" whoami(5)
.xx "" "" "con, rx \- remote login and execution" "" con(1)
.xx "" "test, [, newer \-" "condition commands" "" test(1)
.xx "" "" "config \- configure a Unix kernel" "" config(A)
.xx "" "/ipcpath , ipclogin, ipcrogin \(mi set up" "connections between processes or machines" "" ipc(3)
.xx "connection" "" "conn_ld \- line discipline for unique stream" "" connld(4)
.xx "" "icheck, dcheck, ncheck \- file system" "consistency check" "" icheck(8)
.xx "" "fsck \- file system" "consistency check and interactive repair" "" fsck(8)
.xx "" "" "console \- VAX console interface" "" console(4)
.xx "" "mkfs, mkbitfs, mklost+found \-" "construct a disk file system" "" mkfs(8)
.xx "" "mknod \-" "construct special file" "" mknod(8)
.xx "" "asa \- interpret ASA" "control characters" "" asa(A)
.xx "" "ioctl \(mi miscellaneous" "control operations" "" ioctl(2)
.xx "" "tcp, tcp_ld \- DARPA transmission" "control protocol" "" tcp(4)
.xx "" "units \-" "conversion program" "" units(7)
.xx "" "dd, dblbuf \-" "convert and copy a file" "" dd(1)
.xx "" "number \(mi" "convert Arabic numerals to English" "" number(A)
.xx "" "atof, atoi, atol, strtod, strtol, strtoul \(mi" "convert ASCII to numbers" "" atof(3)
.xx "" "timec, timegm, timelocal \-" "convert ASCII to time" "" timec(3)
.xx "integers" "l3tol, ltol3 \(mi" "convert between 3-byte integers and long" "" l3tol(3)
.xx "" "localtime, gmtime, asctime, timezone \(mi" "convert date and time to ASCII" "ctime," ctime(3)
.xx "" "f2c \(mi" "convert Fortran 77 to C" "" f2c(1)
.xx "" "ecvt, fcvt, gcvt \-" "convert numbers to ascii" "" ecvt(3)
.xx "" "bcd, ppt, morse \-" "convert to antique media" "" bcd(A)
.xx "" "graphpic \- edit (combinatoric) graphs," "convert to pic files" "graphdraw" graphdraw(9.1)
.xx "" "fortune \- sample lines from a file, return" "cookies" "random," random(1)
.xx "pretty-printer" "cospan, psr \-" "coordination-specification analyzer and" "" cospan(A)
.xx "" "push, pull, npush, npull \- datakit remote file" "copy" "" push(1)
.xx "" "rcp \- remote file" "copy" "" rcp(1)
.xx "" "track \- selective remote file" "copy" "" track(A)
.xx "" "uucp, uulog, uuname \- unix-to-unix remote file" "copy" "" uucp(1)
.xx "" "uupick \- simplified unix-to-unix remote file" "copy" "uuto," uuto(1)
.xx "" "dd, dblbuf \- convert and" "copy a file" "" dd(1)
.xx "" "cpio \-" "copy file archives in and out" "" cpio(1)
.xx "" "cp, mv, ln, reccp \-" "copy, move, or link files" "" cp(1)
.xx "" "" "core \- format of memory image file" "" core(5)
.xx "" "brk, sbrk \(mi change" "core allocation" "" brk(2)
.xx "" "savecore \- save a" "core image of the operating system" "" savecore(8)
.xx "" "bigcore, coreid \- permit big" "core images, identify source of image" "" bigcore(1)
.xx "functions" "" "cos, sin, atan2, sqrt, norm \- integer math" "" cos(9.3)
.xx "trigonometric functions" "sin," "cos, tan, asin, acos, atan, atan2 \(mi" "" sin(3)
.xx "" "sinh," "cosh, tanh \(mi hyperbolic functions" "" sinh(3)
.xx "ops5, pascal, ratfor, S, smp, sno,/" "altran," "cospan, esterel, icon, lisp, macsyma, maple," "" langs(1)
.xx "analyzer and pretty-printer" "" "cospan, psr \- coordination-specification" "" cospan(A)
.xx "" "wc \- word" "count" "" wc(1)
.xx "" "sum, treesum \- sum and" "count blocks in a file" "" sum(1)
.xx "" "sendcover \- send" "cover sheet to the library" "" sendcover(8)
.xx "" "mcs \- macros for formatting" "cover sheets" "" mcs(6)
.xx "" "" "cp, mv, ln, reccp \- copy, move, or link files" "" cp(1)
.xx "" "" "cpio \- copy file archives in and out" "" cpio(1)
.xx "" "" "cpio \- format of cpio archive" "" cpio(5)
.xx "" "" "cpp \- C language preprocessor" "" cpp(8)
.xx "" "3cc, 3as, 3ar, 3ld, 3nm, 3size, 3strip," "cprs \- MAC-32 C compiler" "" 3cc(9.1)
.xx "" "" "crabs \- graphical marine adventure game" "" crabs(A)
.xx "" "" "cray \- run job remotely on cray-xmp" "" cray(A)
.xx "writing, create file" "open," "creat, close \(mi open a file for reading or" "" open(2)
.xx "" "pipe \(mi" "create an interprocess channel" "" pipe(2)
.xx "" "windows, jps, reshape \-" "create and initialize windows" "" windows(9.1)
.xx "" "close \(mi open a file for reading or writing," "create file" "open, creat," open(2)
.xx "" "umask \(mi set file" "creation mode mask" "" umask(2)
.xx "" "" "cron \- clock daemon" "" cron(8)
.xx "" "dist, dme, plan, path," "cross \(mi aviation navigation" "" av(A)
.xx "" "pxp, pxref \- pascal printer, profiler, and" "cross-reference lister" "" pxp(A)
.xx "" "" "crypt, encrypt, decrypt \- encode/decode" "" crypt(1)
.xx "" "" "crypt, setkey, encrypt \(mi DES encryption" "" crypt(3)
.xx "" "" "cscan \- scan documents on canon scanner" "" cscan(1)
.xx "\(mi convert date and time to ASCII" "" "ctime, localtime, gmtime, asctime, timezone" "" ctime(3)
.xx "system" "" "cu, ct \- call out to a terminal or another" "" cu(1)
.xx "" "getwd, getcwd \(mi get" "current directory" "" getwd(3)
.xx "cursor motion" "" "curses \(mi screen functions with `optimal'" "" curses(3)
.xx "" "button123, mouse, cursallow, cursinhibit," "cursset, cursswitch, getrect123 \- mouse/" "" button(9.2)
.xx "" "spline \- fit a" "curve" "" spline(A)
.xx "" "" "cut, paste \- rearrange columns of data" "" cut(1)
.xx "" "lint," "cyntax, cem \- C program verifiers" "" lint(1)
.xx "" "" "d202, tc \- typesetter filters" "" d202(A)
.xx "" "cron \- clock" "daemon" "" cron(8)
.xx "" "" "dag \- preprocessor for drawing directed graphs" "" dag(1)
.xx "" "ip, ip_ld \-" "DARPA internet protocol" "" ip(4)
.xx "" "tcp, tcp_ld \-" "DARPA transmission control protocol" "" tcp(4)
.xx "" "300, 300s \- handle special functions of" "DASI 300 and 300s terminals" "" 300(A)
.xx "" "450 \- handle special functions of the" "DASI 450 terminal" "" 450(A)
.xx "" "cut, paste \- rearrange columns of" "data" "" cut(1)
.xx "" "null \-" "data sink" "" null(4)
.xx "" "types \- primitive system" "data types" "" types(5)
.xx "" "Rect, Rpt, display, Drect, Jrect \- graphics" "data types" "/Rectangle, Bitmap, Texture, Pt," types(9.5)
.xx "" "join \(mi relational" "database operator" "" join(1)
.xx "" "fetch, store, delete, firstkey, nextkey \(mi" "database subroutines" "dbminit," dbm(3)
.xx "" "dkname \(mi map system name to" "Datakit address" "" dkname(7)
.xx "" "dkhup, dkmgr, dkzap \- manage" "Datakit interface" "" dkmgr(8)
.xx "" "dk, dkp_ld, unixp_ld, cmc_ld \-" "Datakit interface and protocols" "" dk(4)
.xx "" "dkstat \- show network status for internet and" "datakit networks" "netstat," netstat(8)
.xx "" "push, pull, npush, npull \-" "datakit remote file copy" "" push(1)
.xx "" "" "date \- print or set the date" "" date(1)
.xx "" "time, ftime \(mi get" "date and time" "" time(2)
.xx "" "gmtime, asctime, timezone \(mi convert" "date and time to ASCII" "ctime, localtime," ctime(3)
.xx "" "wwv \- print or set the" "date from accurate clock" "" wwv(1)
.xx "" "touch, chdate \- set modification or access" "date of a file" "" chdate(1)
.xx "" "dd," "dblbuf \- convert and copy a file" "" dd(1)
.xx "nextkey \(mi database subroutines" "" "dbminit, fetch, store, delete, firstkey," "" dbm(3)
.xx "" "" "dc \- desk calculator" "" dc(1)
.xx "" "icheck," "dcheck, ncheck \- file system consistency check" "" icheck(8)
.xx "remote login and execution" "" "dcon, ndcon, rlogin, nrx, rsh, scriptcon \-" "" dcon(1)
.xx "" "" "dd, dblbuf \- convert and copy a file" "" dd(1)
.xx "" "uucico, uusched, uuxqt, kick," "debug \- uucp file transport and execution" "" uucico(8)
.xx "" "P, newproc, muxnewwind, newwindow, tolayer," "debug, getproc, getproctab, putname, getname \-/" "" newproc(9.2)
.xx "" "adb \-" "debugger" "" adb(1)
.xx "" "sdb \- symbolic" "debugger" "" sdb(A)
.xx "" "xd, od \(mi hex, octal," "decimal, or ASCII dump" "" xd(1)
.xx "" "crypt, encrypt," "decrypt \- encode/decode" "" crypt(1)
.xx "" "getfont \- replace terminal's" "default font" "" getfont(9.1)
.xx "text and font operations" "string," "defont, strwidth, infont, outfont, getfont \-" "" string(9.3)
.xx "" "deroff, demonk, detex," "delatex \- remove formatting requests" "" deroff(1)
.xx "" "alarm, nap, pause \(mi schedule timing" "delays" "" alarm(2)
.xx "subroutines" "dbminit, fetch, store," "delete, firstkey, nextkey \(mi database" "" dbm(3)
.xx "lsegment, ltexture, upfront \- layer/" "newlayer," "dellayer, downback, lbitblt, lpoint, lrectf," "" newlayer(9.2)
.xx "" "games," "demo \- some playthings" "" games(1)
.xx "requests" "deroff," "demonk, detex, delatex \- remove formatting" "" deroff(1)
.xx "" "crypt, setkey, encrypt \(mi" "DES encryption" "" crypt(3)
.xx "" "dup, dup2 \(mi duplicate an open file" "descriptor" "" dup(2)
.xx "" "fd, stdin, stdout, stderr, tty \- file" "descriptor files" "" fd(4)
.xx "" "dc \-" "desk calculator" "" dc(1)
.xx "" "matlab \(mi interactive matrix" "desk calculator" "" matlab(1)
.xx "" "deroff, demonk," "detex, delatex \- remove formatting requests" "" deroff(1)
.xx "" "drum \- paging" "device" "" drum(4)
.xx "" "swapon \- specify swapping" "device" "" swapon(8)
.xx "" "intro \- introduction to" "devices, line disciplines, and file systems" "" intro(4)
.xx "" "du," "df \- disk usage" "" du(1)
.xx "" "dmesg \- system" "diagnostic messages" "" dmesg(8)
.xx "" "" "dialout \(mi place call on ACU" "" dialout(3)
.xx "" "" "dict \- look up words in English dictionaries" "" dict(7)
.xx "" "wwb, style," "diction, punct \- writer's workbench" "" wwb(1)
.xx "" "patch \- a program for applying a" "diff file to an original" "" patch(A)
.xx "" "diff," "diff3 \- differential file comparison" "" diff(1)
.xx "" "qsnap \(mi high resolution" "digital film printer" "" qsnap(1)
.xx "" "map \-" "digitized map formats" "" map(5)
.xx "" "" "dir \- format of directories" "" dir(5)
.xx "" "dag \- preprocessor for drawing" "directed graphs" "" dag(1)
.xx "" "chdir, chroot \(mi change working or root" "directory" "" chdir(2)
.xx "" "getwd, getcwd \(mi get current" "directory" "" getwd(3)
.xx "" "ls, lc \(mi list contents of" "directory" "" ls(1)
.xx "" "mkdir \(mi make a" "directory" "" mkdir(1)
.xx "" "mkdir, rmdir \(mi make or remove a" "directory" "" mkdir(2)
.xx "" "pwd, where \(mi machine name and working" "directory" "" pwd(1)
.xx "" "uucleanup \- uucp spool" "directory clean-up" "" uucleanup(8)
.xx "" "dired \-" "directory editor" "" dired(1)
.xx "" "unlink \(mi remove" "directory entry" "" unlink(2)
.xx "" "dirread \(mi read from" "directory, hiding format" "" dirread(2)
.xx "" "readdir, telldir, seekdir, closedir \(mi" "directory operations" "opendir," directory(3)
.xx "" "mknod \(mi make a" "directory or a special file" "" mknod(2)
.xx "" "" "dired \- directory editor" "" dired(1)
.xx "" "basename," "dirname \- strip filename affixes" "" basename(1)
.xx "" "" "dirread \(mi read from directory, hiding format" "" dirread(2)
.xx "circle-drawing functions" "circle," "disc, arc, ellipse, eldisc, elarc \-" "" circle(9.3)
.xx "" "filsys, flblk, ino \- format of a" "disk file system" "" filsys(5)
.xx "" "mkfs, mkbitfs, mklost+found \- construct a" "disk file system" "" mkfs(8)
.xx "" "sync, update \- update" "disk file systems" "" sync(8)
.xx "" "smash \- rewrite bad" "disk sectors" "" smash(8)
.xx "" "du, df \-" "disk usage" "" du(1)
.xx "" "worm, jukebox \- optical" "disk utilities" "" worm(8)
.xx "" "rarepl, rarct \- replace bad blocks on MSCP" "disks" "" rarepl(8)
.xx "" "worm \- format of worm" "disks" "" worm(5)
.xx "" "ra \- DEC MSCP" "disks (RA60, RA80, RA81, RA90)" "" ra(4)
.xx "" "mount, umount \- mount and" "dismount file system" "" mount(8)
.xx "" "/Rectangle, Bitmap, Texture, Pt, Rect, Rpt," "display, Drect, Jrect \- graphics data types" "" types(9.5)
.xx "" "rscan, pix \- scan page on ricoh scanner and" "display on 5620" "" rscan(A)
.xx "navigation" "" "dist, dme, plan, path, cross \(mi aviation" "" av(A)
.xx "" "hypot, cabs \(mi euclidean" "distance" "" hypot(3)
.xx "" "asd \- automatic software" "distribution" "" asd(8)
.xx "" "bundle \- collect files for" "distribution" "" bundle(1)
.xx "" "unseal \- package files for automatic software" "distribution" "mkpkg, inspkg, seal," mkpkg(8)
.xx "" "ship, shipstat \(mi automatic software" "distribution" "" ship(8)
.xx "raddp, rsubp, rectXrect,/" "add, sub, mul," "div, eqpt, eqrect, inset, muldiv, ptinrect," "" add(9.3)
.xx "maximum" "/absolute value, sign, greatest common" "divisor, least common multiple, minimum," "" arith(3)
.xx "interface and protocols" "" "dk, dkp_ld, unixp_ld, cmc_ld \- Datakit" "" dk(4)
.xx "protocols" "ipconfig," "dkipconfig, udpconfig \- set up DARPA Internet" "" ipconfig(8)
.xx "" "dkhup," "dkmgr, dkzap \- manage Datakit interface" "" dkmgr(8)
.xx "" "" "dkname \(mi map system name to Datakit address" "" dkname(7)
.xx "and protocols" "dk," "dkp_ld, unixp_ld, cmc_ld \- Datakit interface" "" dk(4)
.xx "datakit networks" "netstat," "dkstat \- show network status for internet and" "" netstat(8)
.xx "" "dkhup, dkmgr," "dkzap \- manage Datakit interface" "" dkmgr(8)
.xx "" "dist," "dme, plan, path, cross \(mi aviation navigation" "" av(A)
.xx "" "" "dmesg \- system diagnostic messages" "" dmesg(8)
.xx "" "" "docgen \- generate a document from a script" "" docgen(1)
.xx "" "" "docsubmit \- send document to library" "" docsubmit(1)
.xx "" "" "doctor, tso \- psychiatric consultation" "" doctor(A)
.xx "document" "" "doctype \- guess command line for formatting a" "" doctype(1)
.xx "" "cite \- process citations in a" "document" "" cite(A)
.xx "" "docgen \- generate a" "document from a script" "" docgen(1)
.xx "" "docsubmit \- send" "document to library" "" docsubmit(1)
.xx "" "reader \- electronic retrieval of typeset" "documents" "" reader(9.7)
.xx "" "monk, monksample \- typeset" "documents and letters" "" monk(1)
.xx "" "cscan \- scan" "documents on canon scanner" "" cscan(1)
.xx "" "twid, pen \-" "doodle on the screen" "" twid(A)
.xx "ltexture, upfront \- layer/" "newlayer, dellayer," "downback, lbitblt, lpoint, lrectf, lsegment," "" newlayer(9.2)
.xx "to produce postscript" "" "dpost, postdaisy, postdmd, postprint \- filters" "" postscript(8)
.xx "" "tel, telno," "dq \- phone books" "" tel(7)
.xx "" "graph \-" "draw a graph" "" graph(1)
.xx "" "map \-" "draw maps on various projections" "" map(7)
.xx "" "cip \-" "draw pictures for typesetting" "" cip(9.1)
.xx "" "paint \-" "draw pictures in a layer" "" paint(9.1)
.xx "" "dag \- preprocessor for" "drawing directed graphs" "" dag(1)
.xx "" "disc, arc, ellipse, eldisc, elarc \- circle-" "drawing functions" "circle," circle(9.3)
.xx "" "grap \(mi pic preprocessor for" "drawing graphs" "" grap(1)
.xx "" "ideal \(mi troff preprocessor for" "drawing pictures" "" ideal(1)
.xx "" "pic, tpic \(mi troff and tex preprocessors for" "drawing pictures" "" pic(1)
.xx "" "Bitmap, Texture, Pt, Rect, Rpt, display," "Drect, Jrect \- graphics data types" "/Rectangle," types(9.5)
.xx "" "tty \- serial line interface" "drivers" "" tty(4)
.xx "" "" "drum \- paging device" "" drum(4)
.xx "" "" "du, df \- disk usage" "" du(1)
.xx "" "xd, od \(mi hex, octal, decimal, or ASCII" "dump" "" xd(1)
.xx "" "adventure, zork, rogue, wump \-" "dungeon-exploration games" "" adventure(A)
.xx "descriptor" "" "dup, dup2 \(mi duplicate an open file" "" dup(2)
.xx "" "tex, initex, virtex," "dvips, dvit \- text formatting and typesetting" "" tex(1)
.xx "" "strzero, setmuxbuf, getmuxbuf, movstring \-" "dynamic strings in mux" "/strinsert, strdelete," muxstring(9.3)
.xx "" "ed," "e \- text editor" "" ed(1)
.xx "" "" "echo, printf \- print arguments" "" echo(1)
.xx "" "" "ecvt, fcvt, gcvt \- convert numbers to ascii" "" ecvt(3)
.xx "" "" "ed, e \- text editor" "" ed(1)
.xx "" "end, etext," "edata \(mi last locations in program" "" end(3)
.xx "files" "graphdraw graphpic \-" "edit (combinatoric) graphs, convert to pic" "" graphdraw(9.1)
.xx "" "ex," "edit, vi \- text editor" "" vi(1)
.xx "" "dired \- directory" "editor" "" dired(1)
.xx "" "ed, e \- text" "editor" "" ed(1)
.xx "" "icon \- icon" "editor" "" icon(9.1)
.xx "" "jf \- font" "editor" "" jf(9.1)
.xx "" "jim, jim.recover \- text" "editor" "" jim(A)
.xx "" "ped, tped \- picture" "editor" "" ped(9.1)
.xx "" "pico \(mi graphics" "editor" "" pico(1)
.xx "" "rebecca \- graphics touch-up" "editor" "" rebecca(9.1)
.xx "" "sed \- stream" "editor" "" sed(1)
.xx "" "ex, edit, vi \- text" "editor" "" vi(1)
.xx "" "samuel \(mi text" "editor and C browser" "" samuel(A)
.xx "" "ld \(mi link" "editor or loader" "" ld(1)
.xx "" "sam \- screen" "editor with structural regular expressions" "" sam(9.1)
.xx "" "" "efl \- extended Fortran language preprocessor" "" efl(A)
.xx "" "gre, grep," "egrep, fgrep \(mi search a file for a pattern" "" gre(1)
.xx "" "soelim \-" "eliminate \&.so's from nroff input" "" soelim(A)
.xx "functions" "circle, disc, arc," "ellipse, eldisc, elarc \- circle-drawing" "" circle(9.3)
.xx "" "crypt," "encrypt, decrypt \- encode/decode" "" crypt(1)
.xx "" "crypt, setkey," "encrypt \(mi DES encryption" "" crypt(3)
.xx "" "makekey \- generate" "encryption key" "" makekey(8)
.xx "program" "" "end, etext, edata \(mi last locations in" "" end(3)
.xx "" "getfsent, getfsspec, getfsfile, setfsent," "endfsent \(mi get file system description file/" "" getfsent(3)
.xx "" "getgrent, getgrgid, getgrnam, setgrent," "endgrent \(mi get group file entry" "" getgrent(3)
.xx "" "getpwent, getpwuid, getpwnam, setpwent," "endpwent, pwdecode \(mi get password file entry" "" getpwent(3)
.xx "" "number \(mi convert Arabic numerals to" "English" "" number(A)
.xx "" "dict \- look up words in" "English dictionaries" "" dict(7)
.xx "" "unlink \(mi remove directory" "entry" "" unlink(2)
.xx "" "" "environ \- user environment" "" environ(5)
.xx "" "printenv \- print" "environment" "" printenv(1)
.xx "" "getenv \(mi value for" "environment name" "" getenv(3)
.xx "" "sky \- astronomical" "ephemeris" "" sky(7)
.xx "" "" "eqn, neqn, checkeq \- typeset mathematics" "" eqn(1)
.xx "eqn" "" "eqnchar \- special character definitions for" "" eqnchar(6)
.xx "rsubp, rectXrect, rectclip/" "add, sub, mul, div," "eqpt, eqrect, inset, muldiv, ptinrect, raddp," "" add(9.3)
.xx "" "" "erf, erfc \(mi error function" "" erf(3)
.xx "error numbers" "intro," "errno \(mi introduction to system calls and" "" intro(2)
.xx "" "perror, sys_errlist, sys_nerr \(mi system" "error messages" "" perror(3)
.xx "" "bianchi \-" "espresso, steamed milk, hot water" "" bianchi(A)
.xx "" "" "esterel \- Esterel compiler" "" esterel(A)
.xx "pascal, ratfor, S, smp, sno,/" "altran, cospan," "esterel, icon, lisp, macsyma, maple, ops5," "" langs(1)
.xx "" "end," "etext, edata \(mi last locations in program" "" end(3)
.xx "" "" "ethernet \(mi Ethernet interface" "" ethernet(4)
.xx "" "hypot, cabs \(mi" "euclidean distance" "" hypot(3)
.xx "" "expr \-" "evaluate arguments as an expression" "" expr(1)
.xx "" "" "ex, edit, vi \- text editor" "" vi(1)
.xx "exect \(mi execute a file" "" "execl, execv, execle, execve, execlp, execvp," "" exec(2)
.xx "" "xargs \- construct argument lists and" "execute command" "" xargs(A)
.xx "" "at \(mi" "execute commands at a later time" "" at(1)
.xx "\(mi execute a file" "execl," "execv, execle, execve, execlp, execvp, exect" "" exec(2)
.xx "" "rcvchar, realtime, sendchar, sendnchars, kill," "exit \- 5620 input/output requests" "/kbdchar," request(9.2)
.xx "" "" "exit, onexit \(mi terminate process" "" exit(3)
.xx "for child to terminate" "" "_exit, wait wait3 \(mi terminate process, wait" "" exit(2)
.xx "logarithm, power, square root" "" "exp, log, log10, pow, sqrt \(mi exponential," "" exp(3)
.xx "" "col, 2, 3, 4, 5, 6, mc, fold," "expand \- column alignment" "" column(1)
.xx "" "frexp, ldexp, modf \(mi split into mantissa and" "exponent" "" frexp(3)
.xx "" "exp, log, log10, pow, sqrt \(mi" "exponential, logarithm, power, square root" "" exp(3)
.xx "" "" "expr \- evaluate arguments as an expression" "" expr(1)
.xx "" "yacc," "eyacc \- yet another compiler-compiler" "" yacc(1)
.xx "" "" "f2c \(mi convert Fortran 77 to C" "" f2c(1)
.xx "" "" "f77 \(mi Fortran 77 compiler" "" f77(1)
.xx "remainder, floor, ceiling functions" "" "fabs, fmod, floor, ceil \(mi absolute value," "" floor(3)
.xx "pictures" "" "face, mugs \- show faces, make face icons from" "" face(9.7)
.xx "" "" "faced \- network face server" "" faced(9.5)
.xx "" "factor, qfactor, primes \(mi" "factor a number, generate large primes" "" factor(1)
.xx "" "true," "false \- provide truth values" "" true(1)
.xx "" "Fwrite, Fflush, Ftie, Fclose, Fexit \(mi" "fast buffered input/output" "/Fputc, Fprint," fio(3)
.xx "" "pool \-" "fast memory allocation" "" pool(3+)
.xx "" "abort \- generate a" "fault" "" abort(3)
.xx "mode, owner, group, or times" "chmod," "fchmod, chown, fchown, utime \(mi change file" "" chmod(2)
.xx "" "/Fundo, Fputc, Fprint, Fwrite, Fflush, Ftie," "Fclose, Fexit \(mi fast buffered input/output" "" fio(3)
.xx "stream" "fopen, freopen, fdopen," "fclose, fflush \(mi open, close, or flush a" "" fopen(3)
.xx "" "ecvt," "fcvt, gcvt \- convert numbers to ascii" "" ecvt(3)
.xx "" "w, fp, ft," "fd, rad \(mi aviation weather" "" avw(A)
.xx "descriptor files" "" "fd, stdin, stdout, stderr, tty \- file" "" fd(4)
.xx "flush a stream" "fopen, freopen," "fdopen, fclose, fflush \(mi open, close, or" "" fopen(3)
.xx "status inquiries" "" "feof, ferror, clearerr, fileno \(mi stream" "" ferror(3)
.xx "" "" "festoon \- memo writer" "" festoon(A)
.xx "database subroutines" "dbminit," "fetch, store, delete, firstkey, nextkey \(mi" "" dbm(3)
.xx "5620" "flicks," "fflicks, preflicks, 2mux \- movie graphics for" "" flicks(9.1)
.xx "" "fopen, freopen, fdopen, fclose," "fflush \(mi open, close, or flush a stream" "" fopen(3)
.xx "Fwrite, Fflush, Ftie, Fclose,/" "Finit, Frdline," "Fgetc, Fread, Fseek, Fundo, Fputc, Fprint," "" fio(3)
.xx "character- or word-at-a-time/" "getc, getchar," "fgetc, getw, putc, putchar, fputc, putw \(mi" "" getc(3)
.xx "on streams" "" "fgets, puts, fputs, gets \(mi string input/out" "" fgets(3)
.xx "" "gre, grep, egrep," "fgrep \(mi search a file for a pattern" "" gre(1)
.xx "" "getmfields, setfields \(mi break a string into" "fields" "getfields," getfields(3)
.xx "" "access \(mi determine accessibility of" "file" "" access(2)
.xx "" "bitfile \- format of bitmap" "file" "" bitfile(9.5)
.xx "" "chdate \- set modification or access date of a" "file" "touch," chdate(1)
.xx "" "dd, dblbuf \- convert and copy a" "file" "" dd(1)
.xx "" "execve, execlp, execvp, exect \(mi execute a" "file" "execl, execv, execle," exec(2)
.xx "" "link, symlink, readlink \(mi link to a" "file" "" link(2)
.xx "" "mknod \(mi make a directory or a special" "file" "" mknod(2)
.xx "" "mknod \- construct special" "file" "" mknod(8)
.xx "" "\(mi open a file for reading or writing, create" "file" "open, creat, close" open(2)
.xx "" "pr \(mi print" "file" "" pr(1)
.xx "" "read, write \(mi read or write" "file" "" read(2)
.xx "" "size \- size of an object" "file" "" size(1)
.xx "" "stdiobuf \- iostream specialized to stdio" "FILE" "" stdiobuf(A)
.xx "" "strings \- find printable strings in a" "file" "" strings(1)
.xx "" "sum, treesum \- sum and count blocks in a" "file" "" sum(1)
.xx "" "tail, readslow \- deliver the last part of a" "file" "" tail(1)
.xx "" "uniq \- report repeated lines in a" "file" "" uniq(1)
.xx "" "cpio \- copy" "file archives in and out" "" cpio(1)
.xx "" "diff, diff3 \- differential" "file comparison" "" diff(1)
.xx "" "idiff \(mi interactive" "file comparison" "" idiff(1)
.xx "" "push, pull, npush, npull \- datakit remote" "file copy" "" push(1)
.xx "" "rcp \- remote" "file copy" "" rcp(1)
.xx "" "track \- selective remote" "file copy" "" track(A)
.xx "" "uucp, uulog, uuname \- unix-to-unix remote" "file copy" "" uucp(1)
.xx "" "uuto, uupick \- simplified unix-to-unix remote" "file copy" "" uuto(1)
.xx "" "umask \(mi set" "file creation mode mask" "" umask(2)
.xx "" "dup, dup2 \(mi duplicate an open" "file descriptor" "" dup(2)
.xx "" "fd, stdin, stdout, stderr, tty \-" "file descriptor files" "" fd(4)
.xx "" "endfsent \(mi get file system description" "file entry" "/getfsspec, getfsfile, setfsent," getfsent(3)
.xx "" "gre, grep, egrep, fgrep \(mi search a" "file for a pattern" "" gre(1)
.xx "" "open, creat, close \(mi open a" "file for reading or writing, create file" "" open(2)
.xx "" "a.out \- object" "file format" "" a.out(5)
.xx "" "ar \- archive (library)" "file format" "" ar(5)
.xx "" "movies \- graphics movie" "file formats" "" flickfile(9.5)
.xx "" "filebuf \- buffer for" "file input/output" "" filebuf(A)
.xx "" "split, fsplit \- split a" "file into pieces" "" split(1)
.xx "" "picunpack, picpack, picerror \- picture" "file I/O" "/picclose, picputprop, picgetprop," picfile(3)
.xx "" "" "file \(mi determine file type" "" file(1)
.xx "" "chmod, fchmod, chown, fchown, utime \(mi change" "file mode, owner, group, or times" "" chmod(2)
.xx "" "mktemp, tmpnam \(mi make a unique" "file name" "" mktemp(3)
.xx "" "byteyears \- time-space product for" "file residency" "" byteyears(A)
.xx "" "random, fortune \- sample lines from a" "file, return cookies" "" random(1)
.xx "" "stat, lstat, fstat \(mi get" "file status" "" stat(2)
.xx "" "filsys, flblk, ino \- format of a disk" "file system" "" filsys(5)
.xx "" "fmount, funmount \- mount or remove" "file system" "" fmount(2)
.xx "" "mkfs, mkbitfs, mklost+found \- construct a disk" "file system" "" mkfs(8)
.xx "" "mount, umount \- mount and dismount" "file system" "" mount(8)
.xx "" "netfs \- network" "file system" "" netfs(8)
.xx "" "proc \- process" "file system" "" proc(4)
.xx "" "chuck \- a" "file system checking program" "" chuck(8)
.xx "" "icheck, dcheck, ncheck \-" "file system consistency check" "" icheck(8)
.xx "repair" "fsck \-" "file system consistency check and interactive" "" fsck(8)
.xx "" "getfsfile, setfsent, endfsent \(mi get" "file system description file entry" "/getfsspec," getfsent(3)
.xx "" "quot, findo \-" "file system usage and hogs" "" quot(8)
.xx "" "fstab, mtab \- information about" "file systems" "" fstab(5)
.xx "" "introduction to devices, line disciplines, and" "file systems" "intro \-" intro(4)
.xx "" "sync, update \- update disk" "file systems" "" sync(8)
.xx "" "uucico, uusched, uuxqt, kick, debug \- uucp" "file transport and execution" "" uucico(8)
.xx "" "ftw \-" "file tree walk" "" ftw(3)
.xx "" "file \(mi determine" "file type" "" file(1)
.xx "" "" "filebuf \- buffer for file input/output" "" filebuf(A)
.xx "" "basename, dirname \- strip" "filename affixes" "" basename(1)
.xx "" "feof, ferror, clearerr," "fileno \(mi stream status inquiries" "" ferror(3)
.xx "" "backup \- backup and recover" "files" "" backup(1)
.xx "" "backup \- incremental backup" "files" "" backup(5)
.xx "" "bcp \(mi reformat black-and-white picture" "files" "" bcp(1)
.xx "" "cmp \- compare two" "files" "" cmp(1)
.xx "" "\- select or reject lines common to two sorted" "files" "comm" comm(1)
.xx "" "cp, mv, ln, reccp \- copy, move, or link" "files" "" cp(1)
.xx "" "stdin, stdout, stderr, tty \- file descriptor" "files" "fd," fd(4)
.xx "" "find \- find" "files" "" find(1)
.xx "" "\- iostream and streambuf specialized to" "files" "fstream" fstream(A)
.xx "" "uncompress, zcat \(mi compress and expand" "files" "pack, unpack, pcat, compress," pack(1)
.xx "" "rm \- remove (unlink)" "files" "" rm(1)
.xx "" "sort \- sort and/or merge" "files" "" sort(1)
.xx "" "mkpkg, inspkg, seal, unseal \- package" "files for automatic software distribution" "" mkpkg(8)
.xx "" "bundle \- collect" "files for distribution" "" bundle(1)
.xx "" "font \- description" "files for troff" "" font(5)
.xx "" "qsnap \(mi high resolution digital" "film printer" "" qsnap(1)
.xx "system" "" "filsys, flblk, ino \- format of a disk file" "" filsys(5)
.xx "" "d202, tc \- typesetter" "filters" "" d202(A)
.xx "" "plot \(mi graphics" "filters" "" plot(1)
.xx "" "dpost, postdaisy, postdmd, postprint \-" "filters to produce postscript" "" postscript(8)
.xx "" "" "find \- find files" "" find(1)
.xx "" "look \(mi" "find lines in a sorted list" "" look(1)
.xx "" "ttyname, isatty, nametty \(mi" "find or set name of a terminal" "" ttyname(3)
.xx "" "strings \-" "find printable strings in a file" "" strings(1)
.xx "database of locally authored papers" "" "findauthor, papers, makepaper \- consult" "" papers(7)
.xx "" "quot," "findo \- file system usage and hogs" "" quot(8)
.xx "" "mem, kmem, kUmem, mtpr," "fineclock \- memory and VAX processor registers" "" mem(4)
.xx "Fputc, Fprint, Fwrite, Fflush, Ftie, Fclose,/" "" "Finit, Frdline, Fgetc, Fread, Fseek, Fundo," "" fio(3)
.xx "" "dbminit, fetch, store, delete," "firstkey, nextkey \(mi database subroutines" "" dbm(3)
.xx "" "canfield," "fish \- card games" "" cards(A)
.xx "" "spline \-" "fit a curve" "" spline(A)
.xx "" "getflags \(mi process" "flag arguments in argv" "" getflags(3)
.xx "" "filsys," "flblk, ino \- format of a disk file system" "" filsys(5)
.xx "graphics for 5620" "" "flicks, fflicks, preflicks, 2mux \- movie" "" flicks(9.1)
.xx "" "hoc \(mi interactive" "floating point language" "" hoc(1)
.xx "floor, ceiling functions" "fabs, fmod," "floor, ceil \(mi absolute value, remainder," "" floor(3)
.xx "" "fdopen, fclose, fflush \(mi open, close, or" "flush a stream" "fopen, freopen," fopen(3)
.xx "" "msub, mult, mdiv, sdiv, msqrt, mgcd, min, mout," "fmin, fmout, move, mcmp, rpow, mpow \(mi/" "/madd," mp(3)
.xx "remainder, floor, ceiling functions" "fabs," "fmod, floor, ceil \(mi absolute value," "" floor(3)
.xx "" "" "fmount, funmount \- mount or remove file system" "" fmount(2)
.xx "" "/mult, mdiv, sdiv, msqrt, mgcd, min, mout, fmin," "fmout, move, mcmp, rpow, mpow \(mi multiple/" "" mp(3)
.xx "" "" "fmt \(mi ultra-simple text formatter" "" fmt(1)
.xx "" "col, 2, 3, 4, 5, 6, mc," "fold, expand \- column alignment" "" column(1)
.xx "" "getfont \- replace terminal's default" "font" "" getfont(9.1)
.xx "" "" "font \- description files for troff" "" font(5)
.xx "" "" "font \- jerq font layouts" "" font(9.5)
.xx "" "" "font \- typesetter fonts" "" font(6)
.xx "" "jf \-" "font editor" "" jf(9.1)
.xx "" "strwidth, infont, outfont, getfont \- text and" "font operations" "string, defont," string(9.3)
.xx "open, close, or flush a stream" "" "fopen, freopen, fdopen, fclose, fflush \(mi" "" fopen(3)
.xx "" "write, mesg \- write to other users, allow or" "forbid messages" "" write(1)
.xx "" "sync \-" "force writing of system buffers" "" sync(2)
.xx "" "weather \- conditions and" "forecast by town" "" weather(7)
.xx "" "" "fork \(mi spawn new process" "" fork(2)
.xx "" "a.out \- object file" "format" "" a.out(5)
.xx "" "ar \- archive (library) file" "format" "" ar(5)
.xx "" "dirread \(mi read from directory, hiding" "format" "" dirread(2)
.xx "" "picfile \- raster graphic image" "format" "" picfile(5)
.xx "" "filsys, flblk, ino \-" "format of a disk file system" "" filsys(5)
.xx "" "bitfile \-" "format of bitmap file" "" bitfile(9.5)
.xx "" "cpio \-" "format of cpio archive" "" cpio(5)
.xx "" "dir \-" "format of directories" "" dir(5)
.xx "" "core \-" "format of memory image file" "" core(5)
.xx "" "worm \-" "format of worm disks" "" worm(5)
.xx "" "tbl \-" "format tables for nroff or troff" "" tbl(1)
.xx "" "movies \- graphics movie file" "formats" "" flickfile(9.5)
.xx "" "map \- digitized map" "formats" "" map(5)
.xx "" "istream \-" "formatted and unformatted input" "" istream(A)
.xx "" "ostream \-" "formatted and unformatted output" "" ostream(A)
.xx "" "scanf, fscanf, sscanf \(mi" "formatted input" "" scanf(3)
.xx "" "printf, fprintf, sprintf, snprintf \(mi print" "formatted output" "" printf(3)
.xx "" "fmt \(mi ultra-simple text" "formatter" "" fmt(1)
.xx "" "ios \- input/output" "formatting" "" ios(A)
.xx "" "doctype \- guess command line for" "formatting a document" "" doctype(1)
.xx "" "iostream \- buffering," "formatting and input/output" "" IOS(A)
.xx "" "tex, initex, virtex, dvips, dvit \- text" "formatting and typesetting" "" tex(1)
.xx "" "troff, nroff \- text" "formatting and typesetting" "" troff(1)
.xx "" "mcs \- macros for" "formatting cover sheets" "" mcs(6)
.xx "" "ms \- macros for" "formatting manuscripts" "" ms(6)
.xx "" "deroff, demonk, detex, delatex \- remove" "formatting requests" "" deroff(1)
.xx "" "getarg, iargc \(mi command arguments to" "Fortran" "" getarg(3)
.xx "" "port \(mi mathematical library for" "Fortran" "" port(3)
.xx "" "f77 \(mi" "Fortran 77 compiler" "" f77(1)
.xx "" "f2c \(mi convert" "Fortran 77 to C" "" f2c(1)
.xx "" "ratfor \- rational" "Fortran dialect" "" ratfor(A)
.xx "" "efl \- extended" "Fortran language preprocessor" "" efl(A)
.xx "" "struct \- structure" "Fortran programs" "" struct(A)
.xx "cookies" "random," "fortune \- sample lines from a file, return" "" random(1)
.xx "" "w," "fp, ft, fd, rad \(mi aviation weather" "" avw(A)
.xx "" "/Frdline, Fgetc, Fread, Fseek, Fundo, Fputc," "Fprint, Fwrite, Fflush, Ftie, Fclose, Fexit/" "" fio(3)
.xx "output" "print," "fprint, sprint, fmtinstall \(mi print formatted" "" print(3)
.xx "output" "printf," "fprintf, sprintf, snprintf \(mi print formatted" "" printf(3)
.xx "" "Finit, Frdline, Fgetc, Fread, Fseek, Fundo," "Fputc, Fprint, Fwrite, Fflush, Ftie, Fclose,/" "" fio(3)
.xx "" "getc, getchar, fgetc, getw, putc, putchar," "fputc, putw \(mi character- or word-at-a-time/" "" getc(3)
.xx "" "fgets, puts," "fputs, gets \(mi string input/out on streams" "" fgets(3)
.xx "generator" "rand, lrand," "frand, nrand, srand \(mi random number" "" rand(3)
.xx "Fprint, Fwrite, Fflush, Ftie, Fclose,/" "Finit," "Frdline, Fgetc, Fread, Fseek, Fundo, Fputc," "" fio(3)
.xx "" "" "fread, fwrite \(mi buffered binary input/output" "" fread(3)
.xx "allocate memory" "alloc," "free, balloc, bfree, gcalloc, gcfree \-" "" alloc(9.3)
.xx "allocator" "malloc," "free, realloc, calloc, cfree \- memory" "" malloc(3)
.xx "close, or flush a stream" "fopen," "freopen, fdopen, fclose, fflush \(mi open," "" fopen(3)
.xx "exponent" "" "frexp, ldexp, modf \(mi split into mantissa and" "" frexp(3)
.xx "" "scanf," "fscanf, sscanf \(mi formatted input" "" scanf(3)
.xx "interactive repair" "" "fsck \- file system consistency check and" "" fsck(8)
.xx "" "" "fseek, ftell, rewind \(mi reposition a stream" "" fseek(3)
.xx "Ftie, Fclose,/" "Finit, Frdline, Fgetc, Fread," "Fseek, Fundo, Fputc, Fprint, Fwrite, Fflush," "" fio(3)
.xx "" "split," "fsplit \- split a file into pieces" "" split(1)
.xx "" "" "fstab, mtab \- information about file systems" "" fstab(5)
.xx "" "stat, lstat," "fstat \(mi get file status" "" stat(2)
.xx "to files" "" "fstream \- iostream and streambuf specialized" "" fstream(A)
.xx "" "w, fp," "ft, fd, rad \(mi aviation weather" "" avw(A)
.xx "" "fseek," "ftell, rewind \(mi reposition a stream" "" fseek(3)
.xx "" "Fseek, Fundo, Fputc, Fprint, Fwrite, Fflush," "Ftie, Fclose, Fexit \(mi fast buffered/" "/Fread," fio(3)
.xx "" "time," "ftime \(mi get date and time" "" time(2)
.xx "" "" "ftw \- file tree walk" "" ftw(3)
.xx "" "fmount," "funmount \- mount or remove file system" "" fmount(2)
.xx "" "/Fgetc, Fread, Fseek, Fundo, Fputc, Fprint," "Fwrite, Fflush, Ftie, Fclose, Fexit \(mi fast/" "" fio(3)
.xx "" "fread," "fwrite \(mi buffered binary input/output" "" fread(3)
.xx "with garbage collection" "" "galloc, gfree, garbage \(mi storage allocation" "" galloc(3)
.xx "" "bridge \- card" "game" "" bridge(A)
.xx "" "crabs \- graphical marine adventure" "game" "" crabs(A)
.xx "" "mille \- card" "game" "" mille(A)
.xx "" "ogre \- war" "game" "" ogre(A)
.xx "" "redcode \- assembler for mars" "game" "" redcode(A)
.xx "" "zork, rogue, wump \- dungeon-exploration" "games" "adventure," adventure(A)
.xx "" "canfield, fish \- card" "games" "" cards(A)
.xx "" "hangman, word_clout \- word" "games" "" hangman(A)
.xx "" "snake, worm \- display chase" "games" "" snake(A)
.xx "" "warp \- war" "games" "" warp(A)
.xx "" "" "games, demo \- some playthings" "" games(1)
.xx "" "" "gamma \(mi log gamma function" "" gamma(3)
.xx "collection" "galloc, gfree," "garbage \(mi storage allocation with garbage" "" galloc(3)
.xx "" "route, routed \- IP" "gateway routing" "" route(8)
.xx "" "town \-" "gazetteer of US places" "" town(7)
.xx "" "alloc, free, balloc, bfree," "gcalloc, gcfree \- allocate memory" "" alloc(9.3)
.xx "" "" "gcc \- GNU project C Compiler" "" gcc(A)
.xx "arithmetic functions: absolute/" "abs, sgn," "gcd, lcm, min, max, labs \(mi integer" "" arith(3)
.xx "" "alloc, free, balloc, bfree, gcalloc," "gcfree \- allocate memory" "" alloc(9.3)
.xx "" "ecvt, fcvt," "gcvt \- convert numbers to ascii" "" ecvt(3)
.xx "" "" "gebaca, gebam \- get back at corporate america" "" gebaca(A)
.xx "" "" "getarg, iargc \(mi command arguments to Fortran" "" getarg(3)
.xx "fputc, putw \(mi character- or word-at-a-time/" "" "getc, getchar, fgetc, getw, putc, putchar," "" getc(3)
.xx "" "getwd," "getcwd \(mi get current directory" "" getwd(3)
.xx "" "" "getenv \(mi value for environment name" "" getenv(3)
.xx "getpgrp, setuid, setgid,/" "getuid, getgid," "geteuid, getegid, getlogname, getpid, getppid," "" getuid(2)
.xx "string into fields" "" "getfields, getmfields, setfields \(mi break a" "" getfields(3)
.xx "" "" "getflags \(mi process flag arguments in argv" "" getflags(3)
.xx "" "" "getfont \- replace terminal's default font" "" getfont(9.1)
.xx "" "string, defont, strwidth, infont, outfont," "getfont \- text and font operations" "" string(9.3)
.xx "endfsent \(mi get file system description file/" "" "getfsent, getfsspec, getfsfile, setfsent," "" getfsent(3)
.xx "getppid, getpgrp, setuid, setgid,/" "getuid," "getgid, geteuid, getegid, getlogname, getpid," "" getuid(2)
.xx "endgrent \(mi get group file entry" "" "getgrent, getgrgid, getgrnam, setgrent," "" getgrent(3)
.xx "avoided" "reboot, vadvise, vlimit, vswapon," "getgroups, setgroups \(mi system calls to be" "" deprecated(2)
.xx "" "" "getlogin \(mi get login name" "" getlogin(3)
.xx "setgid,/" "getuid, getgid, geteuid, getegid," "getlogname, getpid, getppid, getpgrp, setuid," "" getuid(2)
.xx "fields" "getfields," "getmfields, setfields \(mi break a string into" "" getfields(3)
.xx "" "/strinsert, strdelete, strzero, setmuxbuf," "getmuxbuf, movstring \- dynamic strings in mux" "" muxstring(9.3)
.xx "" "tolayer, debug, getproc, getproctab, putname," "getname \- jerq process control" "/newwindow," newproc(9.2)
.xx "" "" "getopt \- parse command options" "" getopt(A)
.xx "" "" "getopt \(mi get option letter from argv" "" getopt(3)
.xx "" "" "getpass \(mi read a password" "" getpass(3)
.xx "" "/geteuid, getegid, getlogname, getpid, getppid," "getpgrp, setuid, setgid, setruid, setlogname,/" "" getuid(2)
.xx "" "/newproc, muxnewwind, newwindow, tolayer, debug," "getproc, getproctab, putname, getname \- jerq/" "" newproc(9.2)
.xx "endpwent, pwdecode \(mi get password file/" "" "getpwent, getpwuid, getpwnam, setpwent," "" getpwent(3)
.xx "" "cursallow, cursinhibit, cursset, cursswitch," "getrect123 \- mouse control" "button123, mouse," button(9.2)
.xx "" "fgets, puts, fputs," "gets \(mi string input/out on streams" "" fgets(3)
.xx "" "" "getty \- set terminal mode" "" getty(8)
.xx "getpid, getppid, getpgrp, setuid, setgid,/" "" "getuid, getgid, geteuid, getegid, getlogname," "" getuid(2)
.xx "" "" "getuid, id \(mi get user identity" "" getuid(1)
.xx "character- or/" "getc, getchar, fgetc," "getw, putc, putchar, fputc, putw \(mi" "" getc(3)
.xx "" "" "getwd, getcwd \(mi get current directory" "" getwd(3)
.xx "garbage collection" "galloc," "gfree, garbage \(mi storage allocation with" "" galloc(3)
.xx "time to ASCII" "ctime, localtime," "gmtime, asctime, timezone \(mi convert date and" "" ctime(3)
.xx "" "gcc \-" "GNU project C Compiler" "" gcc(A)
.xx "" "bison \-" "GNU Project parser generator (yacc replacement)" "" bison(A)
.xx "" "setjmp, longjmp \(mi non-local" "goto" "" setjmp(3)
.xx "" "" "grap \(mi pic preprocessor for drawing graphs" "" grap(1)
.xx "" "" "graph \- draw a graph" "" graph(1)
.xx "graphs, convert to pic files" "" "graphdraw graphpic \- edit (combinatoric)" "" graphdraw(9.1)
.xx "" "picfile \- raster" "graphic image format" "" picfile(5)
.xx "" "postbgi \- PostScript translator for BGI (Basic" "Graphical Instructions) files" "" postbgi(A)
.xx "" "ltexture, upfront \- layer control and" "graphics" "/lbitblt, lpoint, lrectf, lsegment," newlayer(9.2)
.xx "" "Pt, Rect, Rpt, display, Drect, Jrect \-" "graphics data types" "/Bitmap, Texture," types(9.5)
.xx "" "pico \(mi" "graphics editor" "" pico(1)
.xx "" "plot \(mi" "graphics filters" "" plot(1)
.xx "" "flicks, fflicks, preflicks, 2mux \- movie" "graphics for 5620" "" flicks(9.1)
.xx "" "point, rectf, screenswap, segment, texture \-" "graphics functions" "Code, addr, bitblt," bitblt(9.3)
.xx "" "vec, move, etc. \(mi plot" "graphics interface" "" plot(3)
.xx "" "plot \-" "graphics interface" "" plot(5)
.xx "" "movies \-" "graphics movie file formats" "" flickfile(9.5)
.xx "" "rebecca \-" "graphics touch-up editor" "" rebecca(9.1)
.xx "to pic files" "graphdraw" "graphpic \- edit (combinatoric) graphs, convert" "" graphdraw(9.1)
.xx "" "dag \- preprocessor for drawing directed" "graphs" "" dag(1)
.xx "" "grap \(mi pic preprocessor for drawing" "graphs" "" grap(1)
.xx "" "graphdraw graphpic \- edit (combinatoric)" "graphs, convert to pic files" "" graphdraw(9.1)
.xx "" "/arithmetic functions: absolute value, sign," "greatest common divisor, least common multiple,/" "" arith(3)
.xx "pattern" "gre," "grep, egrep, fgrep \(mi search a file for a" "" gre(1)
.xx "" "imscan \(mi scan" "greyscale images" "" imscan(1)
.xx "" "chown \- change owner or" "group" "" chown(8)
.xx "" "passwd," "group \- password and group files" "" passwd(5)
.xx "" "getgrgid, getgrnam, setgrent, endgrent \(mi get" "group file entry" "getgrent," getgrent(3)
.xx "" "setlogname, setpgrp \(mi get or set user," "group, or process identity" "/setgid, setruid," getuid(2)
.xx "" "fchown, utime \(mi change file mode, owner," "group, or times" "chmod, fchmod, chown," chmod(2)
.xx "" "" "hang \(mi start a process in stopped state" "" hang(1)
.xx "" "" "hangman, word_clout \- word games" "" hangman(A)
.xx "" "\(mi run commands at low priority or immune to" "hangup" "nice, nohup" nice(1)
.xx "" "xd, od \(mi" "hex, octal, decimal, or ASCII dump" "" xd(1)
.xx "selection" "menuhit," "hmenuhit \- present user with menu and get" "" menuhit(9.3)
.xx "" "" "hoc \(mi interactive floating point language" "" hoc(1)
.xx "" "quot, findo \- file system usage and" "hogs" "" quot(8)
.xx "" "bianchi \- espresso, steamed milk," "hot water" "" bianchi(A)
.xx "" "paper \- list input on" "HP2621P printer" "" paper(A)
.xx "" "" "huff \(mi huffman codebook/tree generator" "" huff(3)
.xx "" "sinh, cosh, tanh \(mi" "hyperbolic functions" "" sinh(3)
.xx "" "" "hypot, cabs \(mi euclidean distance" "" hypot(3)
.xx "" "getarg," "iargc \(mi command arguments to Fortran" "" getarg(3)
.xx "laser-printer spooler" "ican," "ibcan, idcan, itcan \- interface to Imagen" "" ican(A)
.xx "consistency check" "" "icheck, dcheck, ncheck \- file system" "" icheck(8)
.xx "" "" "iclc \- Esterel binder" "" iclc(A)
.xx "" "" "icon \- icon editor" "" icon(9.1)
.xx "ratfor, S, smp, sno,/" "altran, cospan, esterel," "icon, lisp, macsyma, maple, ops5, pascal," "" langs(1)
.xx "" "face, mugs \- show faces, make face" "icons from pictures" "" face(9.7)
.xx "compiler" "" "icont, iconc \- Icon language translator and" "" icont(A)
.xx "" "getuid," "id \(mi get user identity" "" getuid(1)
.xx "laser-printer spooler" "ican, ibcan," "idcan, itcan \- interface to Imagen" "" ican(A)
.xx "pictures" "" "ideal \(mi troff preprocessor for drawing" "" ideal(1)
.xx "" "tape, mt \-" "identify and manipulate magnetic tape" "" tape(1)
.xx "" "uname \-" "identify machine and kernel" "" uname(3)
.xx "" "getuid, id \(mi get user" "identity" "" getuid(1)
.xx "" "setpgrp \(mi get or set user, group, or process" "identity" "/setuid, setgid, setruid, setlogname," getuid(2)
.xx "" "" "idiff \(mi interactive file comparison" "" idiff(1)
.xx "" "\- permit big core images, identify source of" "image" "bigcore, coreid" bigcore(1)
.xx "" "blitblt, menudrop \- save or print a screen" "image" "" blitblt(9.1)
.xx "" "picfile \- raster graphic" "image format" "" picfile(5)
.xx "" "ican, ibcan, idcan, itcan \- interface to" "Imagen laser-printer spooler" "" ican(A)
.xx "" "" "imp \- interactive mail program" "" imp(A)
.xx "" "" "imscan \(mi scan greyscale images" "" imscan(1)
.xx "functions" "in_host, in_ntoa," "in_address, in_service \- internet networking" "" internet(3)
.xx "" "backup \-" "incremental backup files" "" backup(5)
.xx "" "ptx \- permuted" "index" "" ptx(1)
.xx "operations" "string, defont, strwidth," "infont, outfont, getfont \- text and font" "" string(9.3)
.xx "internet networking functions" "" "in_host, in_ntoa, in_address, in_service \-" "" internet(3)
.xx "" "" "init \- process control initialization" "" init(8)
.xx "and typesetting" "tex," "initex, virtex, dvips, dvit \- text formatting" "" tex(1)
.xx "networking functions" "in_host," "in_ntoa, in_address, in_service \- internet" "" internet(3)
.xx "" "filsys, flblk," "ino \- format of a disk file system" "" filsys(5)
.xx "" "clri \- clear" "inode" "" clri(8)
.xx "" "istream \- formatted and unformatted" "input" "" istream(A)
.xx "" "scanf, fscanf, sscanf \(mi formatted" "input" "" scanf(3)
.xx "" "ungetc \(mi push character back into" "input stream" "" ungetc(3)
.xx "" "fgets, puts, fputs, gets \(mi string" "input/out on streams" "" fgets(3)
.xx "" "filebuf \- buffer for file" "input/output" "" filebuf(A)
.xx "" "Fflush, Ftie, Fclose, Fexit \(mi fast buffered" "input/output" "/Fundo, Fputc, Fprint, Fwrite," fio(3)
.xx "" "fread, fwrite \(mi buffered binary" "input/output" "" fread(3)
.xx "" "putw \(mi character- or word-at-a-time stream" "input/output" "/getw, putc, putchar, fputc," getc(3)
.xx "" "iostream \- buffering, formatting and" "input/output" "" IOS(A)
.xx "" "ios \-" "input/output formatting" "" ios(A)
.xx "" "select \(mi synchronous" "input/output multiplexing" "" select(2)
.xx "" "stdio \(mi standard buffered" "input/output package" "" stdio(3)
.xx "" "kmc, kdiload, kmcdump \- control KMC11" "input/output processors" "" kmc(8)
.xx "" "sendchar, sendnchars, kill, exit \- 5620" "input/output requests" "/rcvchar, realtime," request(9.2)
.xx "" "showq \- status of stream" "input/output system" "" showq(8)
.xx "" "in_host, in_ntoa, in_address," "in_service \- internet networking functions" "" internet(3)
.xx "rectXrect,/" "add, sub, mul, div, eqpt, eqrect," "inset, muldiv, ptinrect, raddp, rsubp," "" add(9.3)
.xx "automatic software distribution" "mkpkg," "inspkg, seal, unseal \- package files for" "" mkpkg(8)
.xx "" "netstat, dkstat \- show network status for" "internet and datakit networks" "" netstat(8)
.xx "" "in_host, in_ntoa, in_address, in_service \-" "internet networking functions" "" internet(3)
.xx "" "ip, ip_ld \- DARPA" "internet protocol" "" ip(4)
.xx "" "ipconfig, dkipconfig, udpconfig \- set up DARPA" "Internet protocols" "" ipconfig(8)
.xx "" "ascii \-" "interpret ASCII characters" "" ascii(1)
.xx "" "pipe \(mi create an" "interprocess channel" "" pipe(2)
.xx "" "intro \-" "introduction to 5620-related software" "" intro(9)
.xx "" "intro \-" "introduction to commands" "" intro(1)
.xx "file systems" "intro \-" "introduction to devices, line disciplines, and" "" intro(4)
.xx "" "intro \(mi" "introduction to library functions" "" intro(3)
.xx "" "intro, errno \(mi" "introduction to system calls and error numbers" "" intro(2)
.xx "" "mux, ismux," "invert \- layer multiplexer for 5620" "" mux(9.1)
.xx "" "vis \- show" "invisible characters" "" vis(1)
.xx "" "picunpack, picpack, picerror \- picture file" "I/O" "/picclose, picputprop, picgetprop," picfile(3)
.xx "" "" "ioctl \(mi miscellaneous control operations" "" ioctl(2)
.xx "" "" "ios \- input/output formatting" "" ios(A)
.xx "input/output" "" "iostream \- buffering, formatting and" "" IOS(A)
.xx "" "fstream \-" "iostream and streambuf specialized to files" "" fstream(A)
.xx "" "manipulators \-" "iostream out of band manipulations" "" manip(A)
.xx "" "pipestream \-" "iostream specialized as circular buffer" "" pipestream(A)
.xx "" "strstream \-" "iostream specialized to arrays" "" strstream(A)
.xx "" "stdiobuf \-" "iostream specialized to stdio FILE" "" stdiobuf(A)
.xx "" "route, routed \-" "IP gateway routing" "" route(8)
.xx "" "" "ip, ip_ld \- DARPA internet protocol" "" ip(4)
.xx "ipclogin,/" "ipccreat, ipcopen, ipclisten," "ipcaccept, ipcreject, ipcexec, ipcpath ," "" ipc(3)
.xx "Internet protocols" "" "ipconfig, dkipconfig, udpconfig \- set up DARPA" "" ipconfig(8)
.xx "ipcexec, ipcpath , ipclogin,/" "ipccreat," "ipcopen, ipclisten, ipcaccept, ipcreject," "" ipc(3)
.xx "" "/ipcreject, ipcexec, ipcpath , ipclogin," "ipcrogin \(mi set up connections between/" "" ipc(3)
.xx "" "ip," "ip_ld \- DARPA internet protocol" "" ip(4)
.xx "" "isspace, ispunct, isprint, isgraph, iscntrl," "isascii \(mi character classification" "/isalnum," ctype(3)
.xx "terminal" "ttyname," "isatty, nametty \(mi find or set name of a" "" ttyname(3)
.xx "isprint, isgraph,/" "isalpha, isupper, islower," "isdigit, isxdigit, isalnum, isspace, ispunct," "" ctype(3)
.xx "" "mux," "ismux, invert \- layer multiplexer for 5620" "" mux(9.1)
.xx "" "" "istream \- formatted and unformatted input" "" istream(A)
.xx "isspace, ispunct, isprint, isgraph,/" "isalpha," "isupper, islower, isdigit, isxdigit, isalnum," "" ctype(3)
.xx "spooler" "ican, ibcan, idcan," "itcan \- interface to Imagen laser-printer" "" ican(A)
.xx "msqrt, mgcd, min, mout, fmin, fmout, move,/" "" "itom, mfree, madd, msub, mult, mdiv, sdiv," "" mp(3)
.xx "" "font \-" "jerq font layouts" "" font(9.5)
.xx "" "mouse \-" "jerq mouse user interface" "" mouse(9.4)
.xx "" "debug, getproc, getproctab, putname, getname \-" "jerq process control" "/newwindow, tolayer," newproc(9.2)
.xx "" "" "jf \- font editor" "" jf(9.1)
.xx "" "" "jim, jim.recover \- text editor" "" jim(A)
.xx "" "" "jioctl \- mux ioctl requests" "" jioctl(9.4)
.xx "" "uustat \- uucp status inquiry and" "job control" "" uustat(1)
.xx "" "" "join \(mi relational database operator" "" join(1)
.xx "" "windows," "jps, reshape \- create and initialize windows" "" windows(9.1)
.xx "" "Bitmap, Texture, Pt, Rect, Rpt, display, Drect," "Jrect \- graphics data types" "/Point, Rectangle," types(9.5)
.xx "" "worm," "jukebox \- optical disk utilities" "" worm(8)
.xx "" "" "jx \- 5620 execution and stdio interpreter" "" jx(9.1)
.xx "" "request, own, wait, alarm, sleep, nap," "kbdchar, rcvchar, realtime, sendchar,/" "" request(9.2)
.xx "processors" "kmc," "kdiload, kmcdump \- control KMC11 input/output" "" kmc(8)
.xx "" "uname \- identify machine and" "kernel" "" uname(3)
.xx "" "makekey \- generate encryption" "key" "" makekey(8)
.xx "execution" "uucico, uusched, uuxqt," "kick, debug \- uucp file transport and" "" uucico(8)
.xx "" "/rcvchar, realtime, sendchar, sendnchars," "kill, exit \- 5620 input/output requests" "" request(9.2)
.xx "" "signal," "kill \(mi receive and send signals" "" signal(2)
.xx "prejudice" "" "kill \(mi terminate a process with extreme" "" kill(1)
.xx "input/output processors" "" "kmc, kdiload, kmcdump \- control KMC11" "" kmc(8)
.xx "processor registers" "mem," "kmem, kUmem, mtpr, fineclock \- memory and VAX" "" mem(4)
.xx "integers and long integers" "" "l3tol, ltol3 \(mi convert between 3-byte" "" l3tol(3)
.xx "" "" "lab \(mi label maker" "" lab(1)
.xx "absolute value,/" "abs, sgn, gcd, lcm, min, max," "labs \(mi integer arithmetic functions:" "" arith(3)
.xx "" "awk \- pattern-directed scanning and processing" "language" "" awk(1)
.xx "" "bc \- arbitrary-precision arithmetic" "language" "" bc(1)
.xx "" "hoc \(mi interactive floating point" "language" "" hoc(1)
.xx "" "rc, cd, wait, whatis \- command" "language" "" rc(1)
.xx "" "\- shell, the standard command programming" "language" "sh, cd, wait, whatis" sh(1)
.xx "" "twig \- tree-manipulation" "language" "" twig(A)
.xx "" "pc \- pascal" "language compiler" "" pc(A)
.xx "" "spitbol \- Snobol" "language compiler" "" spitbol(A)
.xx "" "altran \-" "language for algebraic manipulation" "" altran(A)
.xx "" "pascal \(mi" "language interpreter" "" pascal(A)
.xx "" "sno \- Snobol" "language interpreter" "" sno(A)
.xx "" "cpp \- C" "language preprocessor" "" cpp(8)
.xx "" "efl \- extended Fortran" "language preprocessor" "" efl(A)
.xx "" "icont, iconc \- Icon" "language translator and compiler" "" icont(A)
.xx "" "ratfor, S, smp, sno, spitbol, struct, twig \-" "languages" "/lisp, macsyma, maple, ops5, pascal," langs(1)
.xx "bibliographies" "" "latex, bibtex \- tex macro package and" "" latex(6)
.xx "" "mux, ismux, invert \-" "layer multiplexer for 5620" "" mux(9.1)
.xx "upfront \- layer/" "newlayer, dellayer, downback," "lbitblt, lpoint, lrectf, lsegment, ltexture," "" newlayer(9.2)
.xx "" "ls," "lc \(mi list contents of directory" "" ls(1)
.xx "" "cc," "lcc \- C compilers" "" cc(1)
.xx "functions: absolute value,/" "abs, sgn, gcd," "lcm, min, max, labs \(mi integer arithmetic" "" arith(3)
.xx "" "" "lcoc \- Esterel compiler" "" lcoc(A)
.xx "" "" "lcomp, lprint \(mi line-by-line profiler" "" lcomp(1)
.xx "" "" "ld \(mi link editor or loader" "" ld(1)
.xx "exponent" "frexp," "ldexp, modf \(mi split into mantissa and" "" frexp(3)
.xx "" "" "ldpcs \- load comet microcode" "" ldpcs(8)
.xx "" "/absolute value, sign, greatest common divisor," "least common multiple, minimum, maximum" "" arith(3)
.xx "" "" "lens \- bitmap magnifier" "" lens(9.1)
.xx "" "monk, monksample \- typeset documents and" "letters" "" monk(1)
.xx "" "" "lex \(mi generator of lexical analysis programs" "" lex(1)
.xx "" "" "libc \- standard library functions" "" libc(9.3)
.xx "" "docsubmit \- send document to" "library" "" docsubmit(1)
.xx "" "\(mi find ordering relation for an object" "library" "lorder" lorder(1)
.xx "" "sendcover \- send cover sheet to the" "library" "" sendcover(8)
.xx "" "" "library, bellcat \- bell labs library services" "" library(7)
.xx "" "ar \- archive (" "library) file format" "" ar(5)
.xx "" "port \(mi mathematical" "library for Fortran" "" port(3)
.xx "" "intro \(mi introduction to" "library functions" "" intro(3)
.xx "" "libc \- standard" "library functions" "" libc(9.3)
.xx "" "ar, ranlib \- archive and" "library maintainer" "" ar(1)
.xx "" "buf_ld \- buffering" "line discipline" "" bufld(4)
.xx "" "tty_ld \- terminal processing" "line discipline" "" ttyld(4)
.xx "" "conn_ld \-" "line discipline for unique stream connection" "" connld(4)
.xx "" "mesg_ld, rmesg_ld \- message" "line discipline modules" "" mesgld(4)
.xx "" "intro \- introduction to devices," "line disciplines, and file systems" "" intro(4)
.xx "" "tty \- serial" "line interface drivers" "" tty(4)
.xx "" "rev, revpag \- reverse" "lines or pages" "" rev(1)
.xx "" "ld \(mi" "link editor or loader" "" ld(1)
.xx "" "cp, mv, ln, reccp \- copy, move, or" "link files" "" cp(1)
.xx "" "" "link, symlink, readlink \(mi link to a file" "" link(2)
.xx "" "" "lint, cyntax, cem \- C program verifiers" "" lint(1)
.xx "compiler" "" "lisp, liszt, lxref \- lisp interpreter and" "" lisp(A)
.xx "smp, sno,/" "altran, cospan, esterel, icon," "lisp, macsyma, maple, ops5, pascal, ratfor, S," "" langs(1)
.xx "" "ls, lc \(mi" "list contents of directory" "" ls(1)
.xx "" "smstat \-" "list smtp queues" "" smstat(8)
.xx "" "nm \(mi name" "list (symbol table)" "" nm(1)
.xx "" "lisp," "liszt, lxref \- lisp interpreter and compiler" "" lisp(A)
.xx "" "cp, mv," "ln, reccp \- copy, move, or link files" "" cp(1)
.xx "" "ldpcs \-" "load comet microcode" "" ldpcs(8)
.xx "" "" "load \(mi load statistics" "" load(1)
.xx "" "ld \(mi link editor or" "loader" "" ld(1)
.xx "" "32ld \- bootstrap" "loader for 5620" "" 32ld(9.1)
.xx "convert date and time to ASCII" "ctime," "localtime, gmtime, asctime, timezone \(mi" "" ctime(3)
.xx "logarithm, power, square root" "exp," "log, log10, pow, sqrt \(mi exponential," "" exp(3)
.xx "" "" "login \- sign on" "" login(8)
.xx "" "ac \-" "login accounting" "" ac(8)
.xx "" "con, rx \- remote" "login and execution" "" con(1)
.xx "" "ndcon, rlogin, nrx, rsh, scriptcon \- remote" "login and execution" "dcon," dcon(1)
.xx "" "getlogin \(mi get" "login name" "" getlogin(3)
.xx "" "utmp, wtmp \-" "login records" "" utmp(5)
.xx "" "tty," "logtty \- get terminal name" "" tty(1)
.xx "" "setjmp," "longjmp \(mi non-local goto" "" setjmp(3)
.xx "" "" "look \(mi find lines in a sorted list" "" look(1)
.xx "" "dict \-" "look up words in English dictionaries" "" dict(7)
.xx "bibliographic references" "refer," "lookbib, pubindex \- maintain and use" "" refer(1)
.xx "object library" "" "lorder \(mi find ordering relation for an" "" lorder(1)
.xx "" "tolower, toupper \(mi force upper or" "lower case" "" tolower(3)
.xx "" "" "lp \- printer output" "" lp(1)
.xx "layer/" "newlayer, dellayer, downback, lbitblt," "lpoint, lrectf, lsegment, ltexture, upfront \-" "" newlayer(9.2)
.xx "" "lcomp," "lprint \(mi line-by-line profiler" "" lcomp(1)
.xx "generator" "rand," "lrand, frand, nrand, srand \(mi random number" "" rand(3)
.xx "" "newlayer, dellayer, downback, lbitblt, lpoint," "lrectf, lsegment, ltexture, upfront \- layer/" "" newlayer(9.2)
.xx "" "" "ls, lc \(mi list contents of directory" "" ls(1)
.xx "" "" "lseek \(mi seek, move read/write pointer" "" lseek(2)
.xx "" "stat," "lstat, fstat \(mi get file status" "" stat(2)
.xx "" "/downback, lbitblt, lpoint, lrectf, lsegment," "ltexture, upfront \- layer control and graphics" "" newlayer(9.2)
.xx "long integers" "l3tol," "ltol3 \(mi convert between 3-byte integers and" "" l3tol(3)
.xx "" "occ \- Esterel and" "Lustre C code producer" "" occ(A)
.xx "" "ocdebug \- Esterel and" "Lustre Debug code producer" "" ocdebug(A)
.xx "" "lisp, liszt," "lxref \- lisp interpreter and compiler" "" lisp(A)
.xx "" "" "m4 \(mi macro processor" "" m4(1)
.xx "" "3cc, 3as, 3ar, 3ld, 3nm, 3size, 3strip, cprs \-" "MAC-32 C compiler" "" 3cc(9.1)
.xx "" "uname \- identify" "machine and kernel" "" uname(3)
.xx "" "pwd, where \(mi" "machine name and working directory" "" pwd(1)
.xx "" "latex, bibtex \- tex" "macro package and bibliographies" "" latex(6)
.xx "" "m4 \(mi" "macro processor" "" m4(1)
.xx "" "mpictures \- picture inclusion" "macros" "" mpictures(6)
.xx "" "mcs \-" "macros for formatting cover sheets" "" mcs(6)
.xx "" "ms \-" "macros for formatting manuscripts" "" ms(6)
.xx "" "mpm \-" "macros for page makeup" "" mpm(6)
.xx "" "mbits \-" "macros to typeset bitmaps" "" mbits(6)
.xx "" "man \(mi" "macros to typeset manual" "" man(6)
.xx "sno,/" "altran, cospan, esterel, icon, lisp," "macsyma, maple, ops5, pascal, ratfor, S, smp," "" langs(1)
.xx "mout, fmin, fmout, move, mcmp,/" "itom, mfree," "madd, msub, mult, mdiv, sdiv, msqrt, mgcd, min," "" mp(3)
.xx "" "tape, mt \- identify and manipulate" "magnetic tape" "" tape(1)
.xx "" "lens \- bitmap" "magnifier" "" lens(9.1)
.xx "" "mt \-" "magtape interface" "" mt(4)
.xx "" "" "mail \- mail addresses" "" mail(6)
.xx "" "" "Mail \- send and receive mail" "" Mail(A)
.xx "" "upas, rmail, translate \-" "mail delivery system" "" upas(8)
.xx "" "" "mail \(mi send or receive mail" "" mail(1)
.xx "" "vismon, sysmon, vwhois \- system statistics and" "mail notification" "" vismon(9.1)
.xx "" "imp \- interactive" "mail program" "" imp(A)
.xx "" "smtpqer, smtpd, smtpsched \- handle simple" "mail transfer protocol" "smtp," smtp(8)
.xx "" "prefer, pinvert, penter, plook, pconvert \-" "maintain and use bibliographic references" "" prefer(1)
.xx "" "refer, lookbib, pubindex \-" "maintain and use bibliographic references" "" refer(1)
.xx "" "make \(mi" "maintain collections of programs" "" make(1)
.xx "" "mk, mkconv, membername \-" "maintain (make) related files" "" mk(1)
.xx "programs" "usgmake \-" "maintain, update, and regenerate groups of" "" usgmake(A)
.xx "" "ar, ranlib \- archive and library" "maintainer" "" ar(1)
.xx "" "mkdir \(mi" "make a directory" "" mkdir(1)
.xx "" "mknod \(mi" "make a directory or a special file" "" mknod(2)
.xx "" "face, mugs \- show faces," "make face icons from pictures" "" face(9.7)
.xx "" "" "make \(mi maintain collections of programs" "" make(1)
.xx "" "mkdir, rmdir \(mi" "make or remove a directory" "" mkdir(2)
.xx "" "mk, mkconv, membername \- maintain (" "make) related files" "" mk(1)
.xx "" "" "makekey \- generate encryption key" "" makekey(8)
.xx "authored papers" "findauthor, papers," "makepaper \- consult database of locally" "" papers(7)
.xx "" "mpm \- macros for page" "makeup" "" mpm(6)
.xx "allocator" "" "malloc, free, realloc, calloc, cfree \- memory" "" malloc(3)
.xx "" "" "man \(mi macros to typeset manual" "" man(6)
.xx "" "" "man \(mi print pages of this manual" "" man(1)
.xx "manipulations" "" "manipulators \- iostream out of band" "" manip(A)
.xx "" "frexp, ldexp, modf \(mi split into" "mantissa and exponent" "" frexp(3)
.xx "" "man \(mi print pages of this" "manual" "" man(1)
.xx "" "man \(mi macros to typeset" "manual" "" man(6)
.xx "" "ms \- macros for formatting" "manuscripts" "" ms(6)
.xx "" "" "Map \- associative array classes" "" map(3+)
.xx "" "" "map \- digitized map formats" "" map(5)
.xx "" "" "map \- draw maps on various projections" "" map(7)
.xx "" "ascii \-" "map of ASCII character set" "" ascii(6)
.xx "" "orient, normalize \-" "map projections" "" proj(3)
.xx "" "" "maple \- interactive symbolic algebraic program" "" maple(A)
.xx "" "altran, cospan, esterel, icon, lisp, macsyma," "maple, ops5, pascal, ratfor, S, smp, sno,/" "" langs(1)
.xx "" "mint \- produce usage report from a" "maple program" "" mint(A)
.xx "" "map \- draw" "maps on various projections" "" map(7)
.xx "" "" "mars \- memory array redcode simulator" "" mars(A)
.xx "" "redcode \- assembler for" "mars game" "" redcode(A)
.xx "" "umask \(mi set file creation mode" "mask" "" umask(2)
.xx "" "cos, sin, atan2, sqrt, norm \- integer" "math functions" "" cos(9.3)
.xx "" "port \(mi" "mathematical library for Fortran" "" port(3)
.xx "" "visi \-" "mathematical spreadsheet" "" visi(A)
.xx "" "" "matlab \(mi interactive matrix desk calculator" "" matlab(1)
.xx "absolute value, sign,/" "abs, sgn, gcd, lcm, min," "max, labs \(mi integer arithmetic functions:" "" arith(3)
.xx "" "" "mbits \- macros to typeset bitmaps" "" mbits(6)
.xx "" "col, 2, 3, 4, 5, 6," "mc, fold, expand \- column alignment" "" column(1)
.xx "" "" "mcc \- MC68000 C compiler" "" mcc(A)
.xx "" "msqrt, mgcd, min, mout, fmin, fmout, move," "mcmp, rpow, mpow \(mi multiple precision/" "/sdiv," mp(3)
.xx "" "" "mcs \- macros for formatting cover sheets" "" mcs(6)
.xx "fmout, move,/" "itom, mfree, madd, msub, mult," "mdiv, sdiv, msqrt, mgcd, min, mout, fmin," "" mp(3)
.xx "" "ruler \-" "measure things on the screen" "" ruler(9.1)
.xx "VAX processor registers" "" "mem, kmem, kUmem, mtpr, fineclock \- memory and" "" mem(4)
.xx "" "mk, mkconv," "membername \- maintain (make) related files" "" mk(1)
.xx "memset \(mi memory operations" "" "memccpy, memchr, memcmp, memcpy, memmove," "" memory(3)
.xx "" "festoon \-" "memo writer" "" festoon(A)
.xx "" "balloc, bfree, gcalloc, gcfree \- allocate" "memory" "alloc, free," alloc(9.3)
.xx "" "pool \- fast" "memory allocation" "" pool(3+)
.xx "" "malloc, free, realloc, calloc, cfree \-" "memory allocator" "" malloc(3)
.xx "" "mem, kmem, kUmem, mtpr, fineclock \-" "memory and VAX processor registers" "" mem(4)
.xx "" "core \- format of" "memory image file" "" core(5)
.xx "" "memccpy, memchr, memcmp, memcpy, memmove," "memset \(mi memory operations" "" memory(3)
.xx "" "blitblt," "menudrop \- save or print a screen image" "" blitblt(9.1)
.xx "get selection" "" "menuhit, hmenuhit \- present user with menu and" "" menuhit(9.3)
.xx "" "sort \- sort and/or" "merge files" "" sort(1)
.xx "messages" "write," "mesg \- write to other users, allow or forbid" "" write(1)
.xx "modules" "" "mesg_ld, rmesg_ld \- message line discipline" "" mesgld(4)
.xx "mgcd, min, mout, fmin, fmout, move,/" "itom," "mfree, madd, msub, mult, mdiv, sdiv, msqrt," "" mp(3)
.xx "" "ldpcs \- load comet" "microcode" "" ldpcs(8)
.xx "" "bianchi \- espresso, steamed" "milk, hot water" "" bianchi(A)
.xx "" "" "mille \- card game" "" mille(A)
.xx "" "/madd, msub, mult, mdiv, sdiv, msqrt, mgcd," "min, mout, fmin, fmout, move, mcmp, rpow, mpow/" "" mp(3)
.xx "" "greatest common divisor, least common multiple," "minimum, maximum" "/absolute value, sign," arith(3)
.xx "program" "" "mint \- produce usage report from a maple" "" mint(A)
.xx "system" "mkfs," "mkbitfs, mklost+found \- construct a disk file" "" mkfs(8)
.xx "files" "mk," "mkconv, membername \- maintain (make) related" "" mk(1)
.xx "" "" "mkdir \(mi make a directory" "" mkdir(1)
.xx "" "" "mkdir, rmdir \(mi make or remove a directory" "" mkdir(2)
.xx "file system" "" "mkfs, mkbitfs, mklost+found \- construct a disk" "" mkfs(8)
.xx "" "" "mknod \- construct special file" "" mknod(8)
.xx "" "" "mknod \(mi make a directory or a special file" "" mknod(2)
.xx "for automatic software distribution" "" "mkpkg, inspkg, seal, unseal \- package files" "" mkpkg(8)
.xx "" "" "mktemp, tmpnam \(mi make a unique file name" "" mktemp(3)
.xx "" "sml \(mi Standard" "ML compiler" "" sml(1)
.xx "" "chmod \- change" "mode" "" chmod(1)
.xx "" "getty \- set terminal" "mode" "" getty(8)
.xx "" "umask \(mi set file creation" "mode mask" "" umask(2)
.xx "" "fchmod, chown, fchown, utime \(mi change file" "mode, owner, group, or times" "chmod," chmod(2)
.xx "" "tset \- set terminal" "modes" "" tset(A)
.xx "" "frexp, ldexp," "modf \(mi split into mantissa and exponent" "" frexp(3)
.xx "" "touch, chdate \- set" "modification or access date of a file" "" chdate(1)
.xx "" "" "monitor \(mi prepare execution profile" "" monitor(3)
.xx "letters" "" "monk, monksample \- typeset documents and" "" monk(1)
.xx "" "p, pg," "more \(mi paginate" "" p(1)
.xx "" "bcd, ppt," "morse \- convert to antique media" "" bcd(A)
.xx "" "fmount, funmount \-" "mount or remove file system" "" fmount(2)
.xx "" "" "mount, umount \- mount and dismount file system" "" mount(8)
.xx "" "" "mouse \- jerq mouse user interface" "" mouse(9.4)
.xx "cursswitch, getrect123 \- mouse/" "button123," "mouse, cursallow, cursinhibit, cursset," "" button(9.2)
.xx "" "vec," "move, etc. \(mi plot graphics interface" "" plot(3)
.xx "" "/sdiv, msqrt, mgcd, min, mout, fmin, fmout," "move, mcmp, rpow, mpow \(mi multiple precision/" "" mp(3)
.xx "" "cp, mv, ln, reccp \- copy," "move, or link files" "" cp(1)
.xx "" "lseek \(mi seek," "move read/write pointer" "" lseek(2)
.xx "" "movies \- graphics" "movie file formats" "" flickfile(9.5)
.xx "" "flicks, fflicks, preflicks, 2mux \-" "movie graphics for 5620" "" flicks(9.1)
.xx "" "view2d, regrid, vdata \-" "movie of a function f(x, y, t)" "" view2d(1)
.xx "" "view2d \-" "movie of a function f(x, y, t)" "" view2d(5)
.xx "" "" "movie, stills \- algorithm animation" "" movie(9.1)
.xx "" "view2d," "moviefil \(mi movie of a function f(x, y, t)" "" view2d(3)
.xx "" "" "movies \- graphics movie file formats" "" flickfile(9.5)
.xx "" "strdelete, strzero, setmuxbuf, getmuxbuf," "movstring \- dynamic strings in mux" "/strinsert," muxstring(9.3)
.xx "" "" "mpictures \- picture inclusion macros" "" mpictures(6)
.xx "" "" "mpm \- macros for page makeup" "" mpm(6)
.xx "" "/mgcd, min, mout, fmin, fmout, move, mcmp, rpow," "mpow \(mi multiple precision integer arithmetic" "" mp(3)
.xx "" "" "ms \- macros for formatting manuscripts" "" ms(6)
.xx "" "rarepl, rarct \- replace bad blocks on" "MSCP disks" "" rarepl(8)
.xx "" "ra \- DEC" "MSCP disks (RA60, RA80, RA81, RA90)" "" ra(4)
.xx "" "itom, mfree, madd, msub, mult, mdiv, sdiv," "msqrt, mgcd, min, mout, fmin, fmout, move,/" "" mp(3)
.xx "" "tape," "mt \- identify and manipulate magnetic tape" "" tape(1)
.xx "" "" "mt \- magtape interface" "" mt(4)
.xx "" "fstab," "mtab \- information about file systems" "" fstab(5)
.xx "registers" "mem, kmem, kUmem," "mtpr, fineclock \- memory and VAX processor" "" mem(4)
.xx "pictures" "face," "mugs \- show faces, make face icons from" "" face(9.7)
.xx "ptinrect, raddp, rsubp, rectXrect,/" "add, sub," "mul, div, eqpt, eqrect, inset, muldiv," "" add(9.3)
.xx "fmout, move, mcmp,/" "itom, mfree, madd, msub," "mult, mdiv, sdiv, msqrt, mgcd, min, mout, fmin," "" mp(3)
.xx "" "mux, ismux, invert \- layer" "multiplexer for 5620" "" mux(9.1)
.xx "" "select \(mi synchronous input/output" "multiplexing" "" select(2)
.xx "" "jioctl \-" "mux ioctl requests" "" jioctl(9.4)
.xx "5620" "" "mux, ismux, invert \- layer multiplexer for" "" mux(9.1)
.xx "" "term \- nonstandard" "mux terminals" "" term(9.1)
.xx "getproctab, putname, getname \-/" "P, newproc," "muxnewwind, newwindow, tolayer, debug, getproc," "" newproc(9.2)
.xx "" "cp," "mv, ln, reccp \- copy, move, or link files" "" cp(1)
.xx "" "getlogin \(mi get login" "name" "" getlogin(3)
.xx "" "nlist \(mi get entries from" "name list" "" nlist(3)
.xx "" "nm \(mi" "name list (symbol table)" "" nm(1)
.xx "" "qns \- query" "name server" "" qns(7)
.xx "" "ns \-" "name server database" "" ns(8)
.xx "" "ttyname, isatty," "nametty \(mi find or set name of a terminal" "" ttyname(3)
.xx "sendnchars,/" "request, own, wait, alarm, sleep," "nap, kbdchar, rcvchar, realtime, sendchar," "" request(9.2)
.xx "" "alarm," "nap, pause \(mi schedule timing delays" "" alarm(2)
.xx "" "dist, dme, plan, path, cross \(mi aviation" "navigation" "" av(A)
.xx "" "icheck, dcheck," "ncheck \- file system consistency check" "" icheck(8)
.xx "login and execution" "dcon," "ndcon, rlogin, nrx, rsh, scriptcon \- remote" "" dcon(1)
.xx "" "eqn," "neqn, checkeq \- typeset mathematics" "" eqn(1)
.xx "" "" "netfs \- network file system" "" netfs(8)
.xx "" "" "netnews \- usenet news articles, utility files" "" netnews(5)
.xx "" "postnews \(mi submit" "netnews articles" "" postnews(7)
.xx "" "checknews, readnews \- read" "netnews articles" "" readnews(7)
.xx "" "" "netnews \(mi send or receive news articles" "" netnews(A)
.xx "internet and datakit networks" "" "netstat, dkstat \- show network status for" "" netstat(8)
.xx "" "faced \-" "network face server" "" faced(9.5)
.xx "" "netfs \-" "network file system" "" netfs(8)
.xx "networks" "netstat, dkstat \- show" "network status for internet and datakit" "" netstat(8)
.xx "" "in_ntoa, in_address, in_service \- internet" "networking functions" "in_host," internet(3)
.xx "" "tcp_listen, tcp_accept, tcp_rcmd \(mi tcp" "networking functions" "tcp_sock, tcp_connect," tcp(3)
.xx "" "udp_connect, udp_listen, udp_datagram \(mi udp" "networking functions" "" udp(3)
.xx "" "newgrp \(mi change to a" "new group" "" newgrp(1)
.xx "" "fork \(mi spawn" "new process" "" fork(2)
.xx "" "test, [," "newer \- condition commands" "" test(1)
.xx "" "" "newgrp \(mi change to a new group" "" newgrp(1)
.xx "lrectf, lsegment, ltexture, upfront \- layer/" "" "newlayer, dellayer, downback, lbitblt, lpoint," "" newlayer(9.2)
.xx "getproc, getproctab, putname, getname \-/" "P," "newproc, muxnewwind, newwindow, tolayer, debug," "" newproc(9.2)
.xx "" "netnews \(mi send or receive" "news articles" "" netnews(A)
.xx "" "netnews \- usenet" "news articles, utility files" "" netnews(5)
.xx "" "" "news \(mi print news items" "" news(7)
.xx "putname, getname \-/" "P, newproc, muxnewwind," "newwindow, tolayer, debug, getproc, getproctab," "" newproc(9.2)
.xx "" "dbminit, fetch, store, delete, firstkey," "nextkey \(mi database subroutines" "" dbm(3)
.xx "" "" "nice \(mi set program priority" "" nice(2)
.xx "or immune to hangup" "" "nice, nohup \(mi run commands at low priority" "" nice(1)
.xx "" "" "nlist \(mi get entries from name list" "" nlist(3)
.xx "" "" "nm \(mi name list (symbol table)" "" nm(1)
.xx "immune to hangup" "nice," "nohup \(mi run commands at low priority or" "" nice(1)
.xx "" "setjmp, longjmp \(mi" "non-local goto" "" setjmp(3)
.xx "" "cos, sin, atan2, sqrt," "norm \- integer math functions" "" cos(9.3)
.xx "" "orient," "normalize \- map projections" "" proj(3)
.xx "" "push, pull, npush," "npull \- datakit remote file copy" "" push(1)
.xx "" "rand, lrand, frand," "nrand, srand \(mi random number generator" "" rand(3)
.xx "" "troff," "nroff \- text formatting and typesetting" "" troff(1)
.xx "" "soelim \- eliminate \&.so's from" "nroff input" "" soelim(A)
.xx "" "tbl \- format tables for" "nroff or troff" "" tbl(1)
.xx "execution" "dcon, ndcon, rlogin," "nrx, rsh, scriptcon \- remote login and" "" dcon(1)
.xx "" "" "ns \- name server database" "" ns(8)
.xx "" "" "null \- data sink" "" null(4)
.xx "" "arithmetic \- drill in" "number facts" "" arithmetic(A)
.xx "" "" "number \(mi convert Arabic numerals to English" "" number(A)
.xx "" "size \- size of an" "object file" "" size(1)
.xx "" "a.out \-" "object file format" "" a.out(5)
.xx "" "lorder \(mi find ordering relation for an" "object library" "" lorder(1)
.xx "" "" "occ \- Esterel and Lustre C code producer" "" occ(A)
.xx "producer" "" "ocdebug \- Esterel and Lustre Debug code" "" ocdebug(A)
.xx "" "" "ocr \- optical character recognition" "" ocr(1)
.xx "" "xd, od \(mi hex," "octal, decimal, or ASCII dump" "" xd(1)
.xx "" "" "ogre \- war game" "" ogre(A)
.xx "" "exit," "onexit \(mi terminate process" "" exit(3)
.xx "" "popen, ppopen, vepopen, pclose \(mi" "open a pipe to/from a process" "" popen(3)
.xx "" "fopen, freopen, fdopen, fclose, fflush \(mi" "open, close, or flush a stream" "" fopen(3)
.xx "or writing, create file" "" "open, creat, close \(mi open a file for reading" "" open(2)
.xx "" "dup, dup2 \(mi duplicate an" "open file descriptor" "" dup(2)
.xx "\(mi directory operations" "" "opendir, readdir, telldir, seekdir, closedir" "" directory(3)
.xx "environment" "" "ops5 \- a rule-based production-system" "" ops5(A)
.xx "" "/cospan, esterel, icon, lisp, macsyma, maple," "ops5, pascal, ratfor, S, smp, sno, spitbol,/" "" langs(1)
.xx "" "ocr \-" "optical character recognition" "" ocr(1)
.xx "" "worm, jukebox \-" "optical disk utilities" "" worm(8)
.xx "" "getopt \(mi get" "option letter from argv" "" getopt(3)
.xx "" "getopt \- parse command" "options" "" getopt(A)
.xx "" "lorder \(mi find" "ordering relation for an object library" "" lorder(1)
.xx "" "" "orient, normalize \- map projections" "" proj(3)
.xx "" "" "ostream \- formatted and unformatted output" "" ostream(A)
.xx "" "string, defont, strwidth, infont," "outfont, getfont \- text and font operations" "" string(9.3)
.xx "" "lp \- printer" "output" "" lp(1)
.xx "" "ostream \- formatted and unformatted" "output" "" ostream(A)
.xx "" "fprint, sprint, fmtinstall \(mi print formatted" "output" "print," print(3)
.xx "" "fprintf, sprintf, snprintf \(mi print formatted" "output" "printf," printf(3)
.xx "realtime, sendchar, sendnchars, kill,/" "request," "own, wait, alarm, sleep, nap, kbdchar, rcvchar," "" request(9.2)
.xx "" "chown, fchown, utime \(mi change file mode," "owner, group, or times" "chmod, fchmod," chmod(2)
.xx "" "chown \- change" "owner or group" "" chown(8)
.xx "debug, getproc, getproctab, putname, getname/" "" "P, newproc, muxnewwind, newwindow, tolayer," "" newproc(9.2)
.xx "" "" "p, pg, more \(mi paginate" "" p(1)
.xx "\(mi compress and expand files" "" "pack, unpack, pcat, compress, uncompress, zcat" "" pack(1)
.xx "distribution" "mkpkg, inspkg, seal, unseal \-" "package files for automatic software" "" mkpkg(8)
.xx "" "" "pads \- user interface package" "" pads(9.5)
.xx "" "mpm \- macros for" "page makeup" "" mpm(6)
.xx "" "rscan, pix \- scan" "page on ricoh scanner and display on 5620" "" rscan(A)
.xx "" "postreverse \- reverse the" "page order in a postscript file" "" postreverse(A)
.xx "" "rev, revpag \- reverse lines or" "pages" "" rev(1)
.xx "" "p, pg, more \(mi" "paginate" "" p(1)
.xx "" "tk \-" "paginator for the Tektronix 4014" "" tk(A)
.xx "" "drum \-" "paging device" "" drum(4)
.xx "" "vtimes \- get usage of time, space, and" "paging resources" "" vtimes(2)
.xx "" "" "paint \- draw pictures in a layer" "" paint(9.1)
.xx "" "brush \-" "painting program" "" brush(9.1)
.xx "" "" "paper \- list input on HP2621P printer" "" paper(A)
.xx "locally authored papers" "findauthor," "papers, makepaper \- consult database of" "" papers(7)
.xx "" "bison \- GNU Project" "parser generator (yacc replacement)" "" bison(A)
.xx "" "pc \-" "pascal language compiler" "" pc(A)
.xx "" "" "pascal \(mi language interpreter" "" pascal(A)
.xx "lister" "pxp, pxref \-" "pascal printer, profiler, and cross-reference" "" pxp(A)
.xx "" "/esterel, icon, lisp, macsyma, maple, ops5," "pascal, ratfor, S, smp, sno, spitbol, struct,/" "" langs(1)
.xx "" "" "passwd, group \- password and group files" "" passwd(5)
.xx "" "" "passwd \(mi change login password" "" passwd(1)
.xx "" "getpass \(mi read a" "password" "" getpass(3)
.xx "" "passwd, group \-" "password and group files" "" passwd(5)
.xx "" "getpwnam, setpwent, endpwent, pwdecode \(mi get" "password file entry" "getpwent, getpwuid," getpwent(3)
.xx "" "cut," "paste \- rearrange columns of data" "" cut(1)
.xx "an original" "" "patch \- a program for applying a diff file to" "" patch(A)
.xx "" "dist, dme, plan," "path, cross \(mi aviation navigation" "" av(A)
.xx "" "grep, egrep, fgrep \(mi search a file for a" "pattern" "gre," gre(1)
.xx "" "re_bm, re_cw, re_re \(mi string and" "pattern matching" "" re(3)
.xx "language" "awk \-" "pattern-directed scanning and processing" "" awk(1)
.xx "" "alarm, nap," "pause \(mi schedule timing delays" "" alarm(2)
.xx "" "" "pc \- pascal language compiler" "" pc(A)
.xx "and expand files" "pack, unpack," "pcat, compress, uncompress, zcat \(mi compress" "" pack(1)
.xx "" "popen, ppopen, vepopen," "pclose \(mi open a pipe to/from a process" "" popen(3)
.xx "references" "prefer, pinvert, penter, plook," "pconvert \- maintain and use bibliographic" "" prefer(1)
.xx "" "11nm, 11ranlib, 11reloc, 11size, 11strip \-" "pdp11 support" "11as, 11cc, 11ld," 11(8)
.xx "" "" "ped, tped \- picture editor" "" ped(9.1)
.xx "" "twid," "pen \- doodle on the screen" "" twid(A)
.xx "" "" "pengo \- squash the sno-bees" "" pengo(A)
.xx "bibliographic references" "prefer, pinvert," "penter, plook, pconvert \- maintain and use" "" prefer(1)
.xx "" "ptx \-" "permuted index" "" ptx(1)
.xx "messages" "" "perror, sys_errlist, sys_nerr \(mi system error" "" perror(3)
.xx "" "p," "pg, more \(mi paginate" "" p(1)
.xx "" "tel, telno, dq \-" "phone books" "" tel(7)
.xx "" "apsend \- send troff output to" "phototypesetter" "" apsend(1)
.xx "" "" "pi, 3pi \- process inspector" "" pi(9.1)
.xx "" "\- edit (combinatoric) graphs, convert to" "pic files" "graphdraw graphpic" graphdraw(9.1)
.xx "" "grap \(mi" "pic preprocessor for drawing graphs" "" grap(1)
.xx "drawing pictures" "" "pic, tpic \(mi troff and tex preprocessors for" "" pic(1)
.xx "" "picputprop, picgetprop, picunpack, picpack," "picerror \- picture file I/O" "/picclose," picfile(3)
.xx "" "" "picfile \- raster graphic image format" "" picfile(5)
.xx "arguments" "apply," "pick \- repeatedly apply a command; select" "" apply(1)
.xx "" "" "pico \(mi graphics editor" "" pico(1)
.xx "" "/picclose, picputprop, picgetprop, picunpack," "picpack, picerror \- picture file I/O" "" picfile(3)
.xx "picgetprop, picunpack,/" "picopen_r, picopen_w," "picread, picwrite, picclose, picputprop," "" picfile(3)
.xx "" "ped, tped \-" "picture editor" "" ped(9.1)
.xx "" "bcp \(mi reformat black-and-white" "picture files" "" bcp(1)
.xx "" "mpictures \-" "picture inclusion macros" "" mpictures(6)
.xx "" "face, mugs \- show faces, make face icons from" "pictures" "" face(9.7)
.xx "" "ideal \(mi troff preprocessor for drawing" "pictures" "" ideal(1)
.xx "" "\(mi troff and tex preprocessors for drawing" "pictures" "pic, tpic" pic(1)
.xx "" "cip \- draw" "pictures for typesetting" "" cip(9.1)
.xx "" "paint \- draw" "pictures in a layer" "" paint(9.1)
.xx "" "/picwrite, picclose, picputprop, picgetprop," "picunpack, picpack, picerror \- picture file/" "" picfile(3)
.xx "and use bibliographic references" "prefer," "pinvert, penter, plook, pconvert \- maintain" "" prefer(1)
.xx "" "tee \-" "pipe fitting" "" tee(1)
.xx "" "" "pipe \(mi create an interprocess channel" "" pipe(2)
.xx "" "popen, ppopen, vepopen, pclose \(mi open a" "pipe to/from a process" "" popen(3)
.xx "queue" "" "pipebuf \- streambuf specialized as circular" "" pipebuf(A)
.xx "buffer" "" "pipestream \- iostream specialized as circular" "" pipestream(A)
.xx "on 5620" "rscan," "pix \- scan page on ricoh scanner and display" "" rscan(A)
.xx "" "dist, dme," "plan, path, cross \(mi aviation navigation" "" av(A)
.xx "" "games, demo \- some" "playthings" "" games(1)
.xx "bibliographic/" "prefer, pinvert, penter," "plook, pconvert \- maintain and use" "" prefer(1)
.xx "" "" "plot \- graphics interface" "" plot(5)
.xx "" "vec, move, etc. \(mi" "plot graphics interface" "" plot(3)
.xx "" "" "plot \(mi graphics filters" "" plot(1)
.xx "Rpt, display, Drect, Jrect \- graphics/" "Word," "Point, Rectangle, Bitmap, Texture, Pt, Rect," "" types(9.5)
.xx "graphics functions" "Code, addr, bitblt," "point, rectf, screenswap, segment, texture \-" "" bitblt(9.3)
.xx "" "rsubp, rectXrect, rectclip \- arithmetic on" "points and rectangles" "/muldiv, ptinrect, raddp," add(9.3)
.xx "" "" "poly \- polyhedron database" "" poly(5)
.xx "" "" "polypic, polypr \- database of polyhedra" "" poly(7)
.xx "" "poly_lk," "poly_read \(mi polyhedron database routines" "" poly(3)
.xx "" "" "pool \- fast memory allocation" "" pool(3+)
.xx "to/from a process" "" "popen, ppopen, vepopen, pclose \(mi open a pipe" "" popen(3)
.xx "" "" "port \(mi mathematical library for Fortran" "" port(3)
.xx "Graphical Instructions) files" "" "postbgi \- PostScript translator for BGI (Basic" "" postbgi(A)
.xx "produce postscript" "dpost," "postdaisy, postdmd, postprint \- filters to" "" postscript(8)
.xx "printers" "" "postio \- serial interface for postscript" "" postio(8)
.xx "" "" "postnews \(mi submit netnews articles" "" postnews(7)
.xx "" "dpost, postdaisy, postdmd," "postprint \- filters to produce postscript" "" postscript(8)
.xx "postscript file" "" "postreverse \- reverse the page order in a" "" postreverse(A)
.xx "" "psi \-" "postscript interpreter" "" psi(9.1)
.xx "" "postio \- serial interface for" "postscript printers" "" postio(8)
.xx "Instructions) files" "postbgi \-" "PostScript translator for BGI (Basic Graphical" "" postbgi(A)
.xx "square root" "exp, log, log10," "pow, sqrt \(mi exponential, logarithm, power," "" exp(3)
.xx "" "" "pp \- C program pretty printer" "" pp(A)
.xx "to/from a process" "popen," "ppopen, vepopen, pclose \(mi open a pipe" "" popen(3)
.xx "" "bcd," "ppt, morse \- convert to antique media" "" bcd(A)
.xx "" "" "pr \(mi print file" "" pr(1)
.xx "maintain and use bibliographic references" "" "prefer, pinvert, penter, plook, pconvert \-" "" prefer(1)
.xx "" "flicks, fflicks," "preflicks, 2mux \- movie graphics for 5620" "" flicks(9.1)
.xx "" "cpp \- C language" "preprocessor" "" cpp(8)
.xx "" "efl \- extended Fortran language" "preprocessor" "" efl(A)
.xx "" "dag \-" "preprocessor for drawing directed graphs" "" dag(1)
.xx "" "grap \(mi pic" "preprocessor for drawing graphs" "" grap(1)
.xx "" "ideal \(mi troff" "preprocessor for drawing pictures" "" ideal(1)
.xx "" "xstr \-" "preprocessor for sharing strings in C programs" "" xstr(A)
.xx "" "pic, tpic \(mi troff and tex" "preprocessors for drawing pictures" "" pic(1)
.xx "" "pp \- C program" "pretty printer" "" pp(A)
.xx "primes" "factor, qfactor," "primes \(mi factor a number, generate large" "" factor(1)
.xx "" "cat \- catenate and" "print" "" cat(1)
.xx "" "blitblt, menudrop \- save or" "print a screen image" "" blitblt(9.1)
.xx "" "echo, printf \-" "print arguments" "" echo(1)
.xx "" "pr \(mi" "print file" "" pr(1)
.xx "" "printf, fprintf, sprintf, snprintf \(mi" "print formatted output" "" printf(3)
.xx "" "banner, rot, rnd, bigp \-" "print in large type" "" banner(A)
.xx "" "thinkblt, think \-" "print on thinkjet" "" thinkblt(9.1)
.xx "" "strings \- find" "printable strings in a file" "" strings(1)
.xx "" "" "printenv \- print environment" "" printenv(1)
.xx "" "paper \- list input on HP2621P" "printer" "" paper(A)
.xx "" "pp \- C program pretty" "printer" "" pp(A)
.xx "" "qsnap \(mi high resolution digital film" "printer" "" qsnap(1)
.xx "" "lp \-" "printer output" "" lp(1)
.xx "" "pxp, pxref \- pascal" "printer, profiler, and cross-reference lister" "" pxp(A)
.xx "" "idcan, itcan \- interface to Imagen laser-" "printer spooler" "ican, ibcan," ican(A)
.xx "" "postio \- serial interface for postscript" "printers" "" postio(8)
.xx "" "echo," "printf \- print arguments" "" echo(1)
.xx "formatted output" "" "printf, fprintf, sprintf, snprintf \(mi print" "" printf(3)
.xx "" "nice \(mi set program" "priority" "" nice(2)
.xx "" "renice \- change" "priority of running process" "" renice(8)
.xx "" "nice, nohup \(mi run commands at low" "priority or immune to hangup" "" nice(1)
.xx "" "" "proc \- process file system" "" proc(4)
.xx "" "exit, onexit \(mi terminate" "process" "" exit(3)
.xx "" "fork \(mi spawn new" "process" "" fork(2)
.xx "" "getproc, getproctab, putname, getname \- jerq" "process control" "/newwindow, tolayer, debug," newproc(9.2)
.xx "" "proc \-" "process file system" "" proc(4)
.xx "" "setpgrp \(mi get or set user, group, or" "process identity" "/setgid, setruid, setlogname," getuid(2)
.xx "" "pi, 3pi \-" "process inspector" "" pi(9.1)
.xx "" "ps \(mi" "process status" "" ps(1)
.xx "" "times \(mi get" "process times" "" times(2)
.xx "" "_exit, wait wait3 \(mi terminate" "process, wait for child to terminate" "" exit(2)
.xx "" "kill \(mi terminate a" "process with extreme prejudice" "" kill(1)
.xx "" "kmem, kUmem, mtpr, fineclock \- memory and VAX" "processor registers" "mem," mem(4)
.xx "" "kdiload, kmcdump \- control KMC11 input/output" "processors" "kmc," kmc(8)
.xx "" "ops5 \- a rule-based" "production-system environment" "" ops5(A)
.xx "" "" "prof \(mi display profile data" "" prof(1)
.xx "" "" "profil \(mi execution time profile" "" profil(2)
.xx "" "monitor \(mi prepare execution" "profile" "" monitor(3)
.xx "" "prof \(mi display" "profile data" "" prof(1)
.xx "" "lcomp, lprint \(mi line-by-line" "profiler" "" lcomp(1)
.xx "" "pxp, pxref \- pascal printer," "profiler, and cross-reference lister" "" pxp(A)
.xx "" "cb \- C" "program beautifier" "" cb(1)
.xx "" "pp \- C" "program pretty printer" "" pp(A)
.xx "" "lint, cyntax, cem \- C" "program verifiers" "" lint(1)
.xx "" "map \- draw maps on various" "projections" "" map(7)
.xx "" "orient, normalize \- map" "projections" "" proj(3)
.xx "" "" "proof \- troff output interpreter for 5620" "" proof(9.1)
.xx "" "ip, ip_ld \- DARPA internet" "protocol" "" ip(4)
.xx "" "smtpd, smtpsched \- handle simple mail transfer" "protocol" "smtp, smtpqer," smtp(8)
.xx "" "tcp, tcp_ld \- DARPA transmission control" "protocol" "" tcp(4)
.xx "" "tcpmgr \- accept and place calls via the TCP" "protocol" "" tcpmgr(8)
.xx "" "telnet \- user interface to the telnet" "protocol" "" telnet(A)
.xx "" "spin \(mi" "protocol analysis software" "" spin(1)
.xx "" "unixp_ld, cmc_ld \- Datakit interface and" "protocols" "dk, dkp_ld," dk(4)
.xx "" "dkipconfig, udpconfig \- set up DARPA Internet" "protocols" "ipconfig," ipconfig(8)
.xx "" "say \-" "proverbs" "" fortune(A)
.xx "" "" "ps \(mi process status" "" ps(1)
.xx "" "" "psi \- postscript interpreter" "" psi(9.1)
.xx "pretty-printer" "cospan," "psr \- coordination-specification analyzer and" "" cospan(A)
.xx "" "" "pstat \- print system facts" "" pstat(8)
.xx "" "doctor, tso \-" "psychiatric consultation" "" doctor(A)
.xx "" "Word, Point, Rectangle, Bitmap, Texture," "Pt, Rect, Rpt, display, Drect, Jrect \-/" "" types(9.5)
.xx "" "/sub, mul, div, eqpt, eqrect, inset, muldiv," "ptinrect, raddp, rsubp, rectXrect, rectclip \-/" "" add(9.3)
.xx "" "" "ptx \- permuted index" "" ptx(1)
.xx "references" "refer, lookbib," "pubindex \- maintain and use bibliographic" "" refer(1)
.xx "" "push," "pull, npush, npull \- datakit remote file copy" "" push(1)
.xx "" "wwb, style, diction," "punct \- writer's workbench" "" wwb(1)
.xx "" "ungetc \(mi" "push character back into input stream" "" ungetc(3)
.xx "copy" "" "push, pull, npush, npull \- datakit remote file" "" push(1)
.xx "word-at-a-time/" "getc, getchar, fgetc, getw," "putc, putchar, fputc, putw \(mi character- or" "" getc(3)
.xx "" "/newwindow, tolayer, debug, getproc, getproctab," "putname, getname \- jerq process control" "" newproc(9.2)
.xx "streams" "fgets," "puts, fputs, gets \(mi string input/out on" "" fgets(3)
.xx "" "/getchar, fgetc, getw, putc, putchar, fputc," "putw \(mi character- or word-at-a-time stream/" "" getc(3)
.xx "directory" "" "pwd, where \(mi machine name and working" "" pwd(1)
.xx "" "/getpwuid, getpwnam, setpwent, endpwent," "pwdecode \(mi get password file entry" "" getpwent(3)
.xx "cross-reference lister" "" "pxp, pxref \- pascal printer, profiler, and" "" pxp(A)
.xx "large primes" "factor," "qfactor, primes \(mi factor a number, generate" "" factor(1)
.xx "" "" "qns \- query name server" "" qns(7)
.xx "" "" "qsnap \(mi high resolution digital film printer" "" qsnap(1)
.xx "" "" "qsort \(mi quicker sort" "" qsort(3)
.xx "" "pipebuf \- streambuf specialized as circular" "queue" "" pipebuf(A)
.xx "" "smstat \- list smtp" "queues" "" smstat(8)
.xx "" "" "quiz \- test your knowledge" "" quiz(A)
.xx "" "" "quot, findo \- file system usage and hogs" "" quot(8)
.xx "" "" "ra \- DEC MSCP disks (RA60, RA80, RA81, RA90)" "" ra(4)
.xx "" "w, fp, ft, fd," "rad \(mi aviation weather" "" avw(A)
.xx "on/" "/div, eqpt, eqrect, inset, muldiv, ptinrect," "raddp, rsubp, rectXrect, rectclip \- arithmetic" "" add(9.3)
.xx "number generator" "" "rand, lrand, frand, nrand, srand \(mi random" "" rand(3)
.xx "return cookies" "" "random, fortune \- sample lines from a file," "" random(1)
.xx "" "ar," "ranlib \- archive and library maintainer" "" ar(1)
.xx "" "rarepl," "rarct \- replace bad blocks on MSCP disks" "" rarepl(8)
.xx "" "picfile \-" "raster graphic image format" "" picfile(5)
.xx "" "" "ratfor \- rational Fortran dialect" "" ratfor(A)
.xx "" "/icon, lisp, macsyma, maple, ops5, pascal," "ratfor, S, smp, sno, spitbol, struct, twig \-/" "" langs(1)
.xx "" "" "rc \- boot script" "" rc(8)
.xx "" "" "rc, cd, wait, whatis \- command language" "" rc(1)
.xx "" "" "rcp \- remote file copy" "" rcp(1)
.xx "" "request, own, wait, alarm, sleep, nap, kbdchar," "rcvchar, realtime, sendchar, sendnchars, kill,/" "" request(9.2)
.xx "" "dirread \(mi" "read from directory, hiding format" "" dirread(2)
.xx "" "" "read, write \(mi read or write file" "" read(2)
.xx "directory operations" "opendir," "readdir, telldir, seekdir, closedir \(mi" "" directory(3)
.xx "documents" "" "reader \- electronic retrieval of typeset" "" reader(9.7)
.xx "" "link, symlink," "readlink \(mi link to a file" "" link(2)
.xx "" "checknews," "readnews \- read netnews articles" "" readnews(7)
.xx "" "tail," "readslow \- deliver the last part of a file" "" tail(1)
.xx "" "malloc, free," "realloc, calloc, cfree \- memory allocator" "" malloc(3)
.xx "" "/own, wait, alarm, sleep, nap, kbdchar, rcvchar," "realtime, sendchar, sendnchars, kill, exit \-/" "" request(9.2)
.xx "" "cut, paste \-" "rearrange columns of data" "" cut(1)
.xx "" "" "rebecca \- graphics touch-up editor" "" rebecca(9.1)
.xx "matching" "" "re_bm, re_cw, re_re \(mi string and pattern" "" re(3)
.xx "" "" "reboot \- bootstrapping procedures" "" reboot(8)
.xx "setgroups \(mi system calls to be avoided" "" "reboot, vadvise, vlimit, vswapon, getgroups," "" deprecated(2)
.xx "" "cp, mv, ln," "reccp \- copy, move, or link files" "" cp(1)
.xx "handler" "" "re_comp, re_exec \(mi regular expression" "" regex(A)
.xx "" "2500 \- BVH2500 videotape" "recorder" "" 2500(1)
.xx "" "backup \- backup and" "recover files" "" backup(1)
.xx "" "Word, Point, Rectangle, Bitmap, Texture, Pt," "Rect, Rpt, display, Drect, Jrect \- graphics/" "" types(9.5)
.xx "functions" "Code, addr, bitblt, point," "rectf, screenswap, segment, texture \- graphics" "" bitblt(9.3)
.xx "" "/eqrect, inset, muldiv, ptinrect, raddp, rsubp," "rectXrect, rectclip \- arithmetic on points and/" "" add(9.3)
.xx "" "re_bm," "re_cw, re_re \(mi string and pattern matching" "" re(3)
.xx "" "" "redcode \- assembler for mars game" "" redcode(A)
.xx "" "mars \- memory array" "redcode simulator" "" mars(A)
.xx "" "=, ==, =p, ==p \-" "redo previous shell command" "" =(1)
.xx "" "re_comp," "re_exec \(mi regular expression handler" "" regex(A)
.xx "bibliographic references" "" "refer, lookbib, pubindex \- maintain and use" "" refer(1)
.xx "" "pxref \- pascal printer, profiler, and cross-" "reference lister" "pxp," pxp(A)
.xx "" "pconvert \- maintain and use bibliographic" "references" "prefer, pinvert, penter, plook," prefer(1)
.xx "" "pubindex \- maintain and use bibliographic" "references" "refer, lookbib," refer(1)
.xx "expression" "" "regcomp, regexec, regsub, regerror \(mi regular" "" regexp(3)
.xx "" "mtpr, fineclock \- memory and VAX processor" "registers" "mem, kmem, kUmem," mem(4)
.xx "" "view2d," "regrid, vdata \- movie of a function f(x, y, t)" "" view2d(1)
.xx "" "regcomp, regexec," "regsub, regerror \(mi regular expression" "" regexp(3)
.xx "" "re_comp, re_exec \(mi" "regular expression handler" "" regex(A)
.xx "" "sam \- screen editor with structural" "regular expressions" "" sam(9.1)
.xx "" "comm \- select or" "reject lines common to two sorted files" "" comm(1)
.xx "" "join \(mi" "relational database operator" "" join(1)
.xx "" "strip \- remove symbols and" "relocation bits" "" strip(1)
.xx "" "fabs, fmod, floor, ceil \(mi absolute value," "remainder, floor, ceiling functions" "" floor(3)
.xx "" "svcmgr \- service" "remote computing requests" "" svcmgr(8)
.xx "" "push, pull, npush, npull \- datakit" "remote file copy" "" push(1)
.xx "" "rcp \-" "remote file copy" "" rcp(1)
.xx "" "track \- selective" "remote file copy" "" track(A)
.xx "" "uucp, uulog, uuname \- unix-to-unix" "remote file copy" "" uucp(1)
.xx "" "uuto, uupick \- simplified unix-to-unix" "remote file copy" "" uuto(1)
.xx "" "con, rx \-" "remote login and execution" "" con(1)
.xx "" "dcon, ndcon, rlogin, nrx, rsh, scriptcon \-" "remote login and execution" "" dcon(1)
.xx "" "cray \- run job" "remotely on cray-xmp" "" cray(A)
.xx "" "mkdir, rmdir \(mi make or" "remove a directory" "" mkdir(2)
.xx "" "unlink \(mi" "remove directory entry" "" unlink(2)
.xx "" "fmount, funmount \- mount or" "remove file system" "" fmount(2)
.xx "" "rm \-" "remove (unlink) files" "" rm(1)
.xx "" "" "renice \- change priority of running process" "" renice(8)
.xx "" "uniq \- report" "repeated lines in a file" "" uniq(1)
.xx "rcvchar, realtime, sendchar, sendnchars, kill,/" "" "request, own, wait, alarm, sleep, nap, kbdchar," "" request(9.2)
.xx "" "re_bm, re_cw," "re_re \(mi string and pattern matching" "" re(3)
.xx "" "windows, jps," "reshape \- create and initialize windows" "" windows(9.1)
.xx "" "vtimes \- get usage of time, space, and paging" "resources" "" vtimes(2)
.xx "" "reader \- electronic" "retrieval of typeset documents" "" reader(9.7)
.xx "" "postreverse \-" "reverse the page order in a postscript file" "" postreverse(A)
.xx "" "rev," "revpag \- reverse lines or pages" "" rev(1)
.xx "" "fseek, ftell," "rewind \(mi reposition a stream" "" fseek(3)
.xx "" "rscan, pix \- scan page on" "ricoh scanner and display on 5620" "" rscan(A)
.xx "execution" "dcon, ndcon," "rlogin, nrx, rsh, scriptcon \- remote login and" "" dcon(1)
.xx "" "" "rm \- remove (unlink) files" "" rm(1)
.xx "" "upas," "rmail, translate \- mail delivery system" "" upas(8)
.xx "" "mkdir," "rmdir \(mi make or remove a directory" "" mkdir(2)
.xx "" "mesg_ld," "rmesg_ld \- message line discipline modules" "" mesgld(4)
.xx "" "banner, rot," "rnd, bigp \- print in large type" "" banner(A)
.xx "" "adventure, zork," "rogue, wump \- dungeon-exploration games" "" adventure(A)
.xx "" "chdir, chroot \(mi change working or" "root directory" "" chdir(2)
.xx "" "banner," "rot, rnd, bigp \- print in large type" "" banner(A)
.xx "" "" "route, routed \- IP gateway routing" "" route(8)
.xx "" "/mgcd, min, mout, fmin, fmout, move, mcmp," "rpow, mpow \(mi multiple precision integer/" "" mp(3)
.xx "" "/Point, Rectangle, Bitmap, Texture, Pt, Rect," "Rpt, display, Drect, Jrect \- graphics data/" "" types(9.5)
.xx "display on 5620" "" "rscan, pix \- scan page on ricoh scanner and" "" rscan(A)
.xx "" "dcon, ndcon, rlogin, nrx," "rsh, scriptcon \- remote login and execution" "" dcon(1)
.xx "" "/eqpt, eqrect, inset, muldiv, ptinrect, raddp," "rsubp, rectXrect, rectclip \- arithmetic on/" "" add(9.3)
.xx "" "arff \- read" "RT11 files" "" arff(8)
.xx "" "" "ruler \- measure things on the screen" "" ruler(9.1)
.xx "hangup" "nice, nohup \(mi" "run commands at low priority or immune to" "" nice(1)
.xx "" "con," "rx \- remote login and execution" "" con(1)
.xx "" "/lisp, macsyma, maple, ops5, pascal, ratfor," "S, smp, sno, spitbol, struct, twig \- languages" "" langs(1)
.xx "" "" "sa, accton \- system accounting" "" sa(8)
.xx "expressions" "" "sam \- screen editor with structural regular" "" sam(9.1)
.xx "" "random, fortune \-" "sample lines from a file, return cookies" "" random(1)
.xx "" "" "samuel \(mi text editor and C browser" "" samuel(A)
.xx "" "blitblt, menudrop \-" "save or print a screen image" "" blitblt(9.1)
.xx "system" "" "savecore \- save a core image of the operating" "" savecore(8)
.xx "" "" "say \- proverbs" "" fortune(A)
.xx "" "brk," "sbrk \(mi change core allocation" "" brk(2)
.xx "" "cscan \-" "scan documents on canon scanner" "" cscan(1)
.xx "" "imscan \(mi" "scan greyscale images" "" imscan(1)
.xx "" "rscan, pix \-" "scan page on ricoh scanner and display on 5620" "" rscan(A)
.xx "" "" "scanf, fscanf, sscanf \(mi formatted input" "" scanf(3)
.xx "" "" "scat \- sky catalogue" "" scat(7)
.xx "" "clear \- clear terminal" "screen" "" clear(A)
.xx "" "ruler \- measure things on the" "screen" "" ruler(9.1)
.xx "" "twid, pen \- doodle on the" "screen" "" twid(A)
.xx "" "tgoto, tputs \(mi device-independent terminal" "screen control" "/tgetnum, tgetflag, tgetstr," termcap(3)
.xx "expressions" "sam \-" "screen editor with structural regular" "" sam(9.1)
.xx "" "curses \(mi" "screen functions with `optimal' cursor motion" "" curses(3)
.xx "" "blitblt, menudrop \- save or print a" "screen image" "" blitblt(9.1)
.xx "functions" "Code, addr, bitblt, point, rectf," "screenswap, segment, texture \- graphics" "" bitblt(9.3)
.xx "" "dcon, ndcon, rlogin, nrx, rsh," "scriptcon \- remote login and execution" "" dcon(1)
.xx "" "" "scsi \- SCSI interface" "" scsi(4)
.xx "" "" "scsish \- SCSI shell" "" scsish(8)
.xx "" "" "sdb \- symbolic debugger" "" sdb(A)
.xx "move,/" "itom, mfree, madd, msub, mult, mdiv," "sdiv, msqrt, mgcd, min, mout, fmin, fmout," "" mp(3)
.xx "software distribution" "mkpkg, inspkg," "seal, unseal \- package files for automatic" "" mkpkg(8)
.xx "" "gre, grep, egrep, fgrep \(mi" "search a file for a pattern" "" gre(1)
.xx "" "" "sed \- stream editor" "" sed(1)
.xx "" "lseek \(mi" "seek, move read/write pointer" "" lseek(2)
.xx "" "opendir, readdir, telldir," "seekdir, closedir \(mi directory operations" "" directory(3)
.xx "" "Code, addr, bitblt, point, rectf, screenswap," "segment, texture \- graphics functions" "" bitblt(9.3)
.xx "" "apply, pick \- repeatedly apply a command;" "select arguments" "" apply(1)
.xx "multiplexing" "" "select \(mi synchronous input/output" "" select(2)
.xx "files" "comm \-" "select or reject lines common to two sorted" "" comm(1)
.xx "" "Mail \-" "send and receive mail" "" Mail(A)
.xx "" "sendcover \-" "send cover sheet to the library" "" sendcover(8)
.xx "" "docsubmit \-" "send document to library" "" docsubmit(1)
.xx "" "mail \(mi" "send or receive mail" "" mail(1)
.xx "" "netnews \(mi" "send or receive news articles" "" netnews(A)
.xx "" "signal, kill \(mi receive and" "send signals" "" signal(2)
.xx "" "apsend \-" "send troff output to phototypesetter" "" apsend(1)
.xx "" "" "sendcover \- send cover sheet to the library" "" sendcover(8)
.xx "" "/nap, kbdchar, rcvchar, realtime, sendchar," "sendnchars, kill, exit \- 5620 input/output/" "" request(9.2)
.xx "" "" "seq \- print sequences of numbers" "" seq(1)
.xx "" "tty \-" "serial line interface drivers" "" tty(4)
.xx "" "svcmgr \-" "service remote computing requests" "" svcmgr(8)
.xx "" "" "setbuf \(mi assign buffering to a stream" "" setbuf(3)
.xx "" "getfields, getmfields," "setfields \(mi break a string into fields" "" getfields(3)
.xx "description/" "getfsent, getfsspec, getfsfile," "setfsent, endfsent \(mi get file system" "" getfsent(3)
.xx "" "/getlogname, getpid, getppid, getpgrp, setuid," "setgid, setruid, setlogname, setpgrp \(mi get/" "" getuid(2)
.xx "" "getgrent, getgrgid, getgrnam," "setgrent, endgrent \(mi get group file entry" "" getgrent(3)
.xx "" "reboot, vadvise, vlimit, vswapon, getgroups," "setgroups \(mi system calls to be avoided" "" deprecated(2)
.xx "" "" "setjmp, longjmp \(mi non-local goto" "" setjmp(3)
.xx "" "crypt," "setkey, encrypt \(mi DES encryption" "" crypt(3)
.xx "super-user" "su," "setlog \- substitute userid temporarily, become" "" su(8)
.xx "" "strinsure, strinsert, strdelete, strzero," "setmuxbuf, getmuxbuf, movstring \- dynamic/" "" muxstring(9.3)
.xx "file entry" "getpwent, getpwuid, getpwnam," "setpwent, endpwent, pwdecode \(mi get password" "" getpwent(3)
.xx "" "/getpid, getppid, getpgrp, setuid, setgid," "setruid, setlogname, setpgrp \(mi get or set/" "" getuid(2)
.xx "arithmetic functions: absolute value,/" "abs," "sgn, gcd, lcm, min, max, labs \(mi integer" "" arith(3)
.xx "command programming language" "" "sh, cd, wait, whatis \- shell, the standard" "" sh(1)
.xx "" "=, ==, =p, ==p \- redo previous" "shell command" "" =(1)
.xx "" "system \(mi issue a" "shell command" "" system(3)
.xx "language" "sh, cd, wait, whatis \-" "shell, the standard command programming" "" sh(1)
.xx "distribution" "" "ship, shipstat \(mi automatic software" "" ship(8)
.xx "" "vis \-" "show invisible characters" "" vis(1)
.xx "" "" "showq \- status of stream input/output system" "" showq(8)
.xx "" "/integer arithmetic functions: absolute value," "sign, greatest common divisor, least common/" "" arith(3)
.xx "" "" "signal, kill \(mi receive and send signals" "" signal(2)
.xx "functions" "cos," "sin, atan2, sqrt, norm \- integer math" "" cos(9.3)
.xx "trigonometric functions" "" "sin, cos, tan, asin, acos, atan, atan2 \(mi" "" sin(3)
.xx "" "" "sinh, cosh, tanh \(mi hyperbolic functions" "" sinh(3)
.xx "" "null \- data" "sink" "" null(4)
.xx "" "" "size \- size of an object file" "" size(1)
.xx "" "" "sky \- astronomical ephemeris" "" sky(7)
.xx "" "scat \-" "sky catalogue" "" scat(7)
.xx "" "" "sleep \- suspend execution for an interval" "" sleep(1)
.xx "" "" "sleep \(mi suspend execution for an interval" "" sleep(3)
.xx "sendchar,/" "request, own, wait, alarm," "sleep, nap, kbdchar, rcvchar, realtime," "" request(9.2)
.xx "" "" "smash \- rewrite bad disk sectors" "" smash(8)
.xx "" "" "sml \(mi Standard ML compiler" "" sml(1)
.xx "" "/lisp, macsyma, maple, ops5, pascal, ratfor, S," "smp, sno, spitbol, struct, twig \- languages" "" langs(1)
.xx "" "" "smstat \- list smtp queues" "" smstat(8)
.xx "simple mail transfer protocol" "" "smtp, smtpqer, smtpd, smtpsched \- handle" "" smtp(8)
.xx "" "" "snake, worm \- display chase games" "" snake(A)
.xx "" "" "sno \- Snobol language interpreter" "" sno(A)
.xx "" "macsyma, maple, ops5, pascal, ratfor, S, smp," "sno, spitbol, struct, twig \- languages" "/lisp," langs(1)
.xx "" "spitbol \-" "Snobol language compiler" "" spitbol(A)
.xx "" "sno \-" "Snobol language interpreter" "" sno(A)
.xx "" "" "snocone \- snobol with syntactic sugar" "" snocone(1)
.xx "" "printf, fprintf, sprintf," "snprintf \(mi print formatted output" "" printf(3)
.xx "" "" "soelim \- eliminate \&.so's from nroff input" "" soelim(A)
.xx "" "asd \- automatic" "software distribution" "" asd(8)
.xx "" "seal, unseal \- package files for automatic" "software distribution" "mkpkg, inspkg," mkpkg(8)
.xx "" "ship, shipstat \(mi automatic" "software distribution" "" ship(8)
.xx "" "qsort \(mi quicker" "sort" "" qsort(3)
.xx "" "tsort \- topological" "sort" "" tsort(1)
.xx "" "" "sort \- sort and/or merge files" "" sort(1)
.xx "" "comm \- select or reject lines common to two" "sorted files" "" comm(1)
.xx "" "look \(mi find lines in a" "sorted list" "" look(1)
.xx "" "vtimes \- get usage of time," "space, and paging resources" "" vtimes(2)
.xx "" "fork \(mi" "spawn new process" "" fork(2)
.xx "" "eqnchar \-" "special character definitions for eqn" "" eqnchar(6)
.xx "" "mknod \(mi make a directory or a" "special file" "" mknod(2)
.xx "" "mknod \- construct" "special file" "" mknod(8)
.xx "" "" "spell \- find spelling errors" "" spell(1)
.xx "" "" "spin \(mi protocol analysis software" "" spin(1)
.xx "" "" "spitbol \- Snobol language compiler" "" spitbol(A)
.xx "" "maple, ops5, pascal, ratfor, S, smp, sno," "spitbol, struct, twig \- languages" "/macsyma," langs(1)
.xx "" "" "spline \- fit a curve" "" spline(A)
.xx "" "" "split, fsplit \- split a file into pieces" "" split(1)
.xx "" "frexp, ldexp, modf \(mi" "split into mantissa and exponent" "" frexp(3)
.xx "" "itcan \- interface to Imagen laser-printer" "spooler" "ican, ibcan, idcan," ican(A)
.xx "" "printf, fprintf," "sprintf, snprintf \(mi print formatted output" "" printf(3)
.xx "root" "exp, log, log10, pow," "sqrt \(mi exponential, logarithm, power, square" "" exp(3)
.xx "" "cos, sin, atan2," "sqrt, norm \- integer math functions" "" cos(9.3)
.xx "" "rand, lrand, frand, nrand," "srand \(mi random number generator" "" rand(3)
.xx "" "scanf, fscanf," "sscanf \(mi formatted input" "" scanf(3)
.xx "" "" "stab \- symbol table types" "" stab(5)
.xx "" "stdio \(mi" "standard buffered input/output package" "" stdio(3)
.xx "" "libc \-" "standard library functions" "" libc(9.3)
.xx "" "sml \(mi" "Standard ML compiler" "" sml(1)
.xx "" "hang \(mi" "start a process in stopped state" "" hang(1)
.xx "" "" "stat, lstat, fstat \(mi get file status" "" stat(2)
.xx "" "load \(mi load" "statistics" "" load(1)
.xx "" "vmstat \- report virtual memory" "statistics" "" vmstat(8)
.xx "" "vismon, sysmon, vwhois \- system" "statistics and mail notification" "" vismon(9.1)
.xx "" "ps \(mi process" "status" "" ps(1)
.xx "" "stat, lstat, fstat \(mi get file" "status" "" stat(2)
.xx "" "netstat, dkstat \- show network" "status for internet and datakit networks" "" netstat(8)
.xx "" "uustat \- uucp" "status inquiry and job control" "" uustat(1)
.xx "" "showq \-" "status of stream input/output system" "" showq(8)
.xx "" "fd, stdin, stdout," "stderr, tty \- file descriptor files" "" fd(4)
.xx "" "stdiobuf \- iostream specialized to" "stdio FILE" "" stdiobuf(A)
.xx "" "jx \- 5620 execution and" "stdio interpreter" "" jx(9.1)
.xx "package" "" "stdio \(mi standard buffered input/output" "" stdio(3)
.xx "" "" "stdiobuf \- iostream specialized to stdio FILE" "" stdiobuf(A)
.xx "" "fd, stdin," "stdout, stderr, tty \- file descriptor files" "" fd(4)
.xx "" "movie," "stills \- algorithm animation" "" movie(9.1)
.xx "" "" "stime, biasclock \(mi set time" "" stime(2)
.xx "" "hang \(mi start a process in" "stopped state" "" hang(1)
.xx "" "galloc, gfree, garbage \(mi" "storage allocation with garbage collection" "" galloc(3)
.xx "subroutines" "dbminit, fetch," "store, delete, firstkey, nextkey \(mi database" "" dbm(3)
.xx "strncpy, strlen, strchr, strrchr, strpbrk,/" "" "strcat, strncat, strcmp, strncmp, strcpy," "" string(3)
.xx "" "/strlen, strchr, strrchr, strpbrk, strspn," "strcspn, strtok, strdup \(mi string operations" "" string(3)
.xx "movstring \- dynamic/" "strinsure, strinsert," "strdelete, strzero, setmuxbuf, getmuxbuf," "" muxstring(9.3)
.xx "" "strrchr, strpbrk, strspn, strcspn, strtok," "strdup \(mi string operations" "/strlen, strchr," string(3)
.xx "" "fclose, fflush \(mi open, close, or flush a" "stream" "fopen, freopen, fdopen," fopen(3)
.xx "" "fseek, ftell, rewind \(mi reposition a" "stream" "" fseek(3)
.xx "" "setbuf \(mi assign buffering to a" "stream" "" setbuf(3)
.xx "" "ungetc \(mi push character back into input" "stream" "" ungetc(3)
.xx "" "" "stream \- communication channels" "" stream(4)
.xx "" "conn_ld \- line discipline for unique" "stream connection" "" connld(4)
.xx "" "sed \-" "stream editor" "" sed(1)
.xx "" "fputc, putw \(mi character- or word-at-a-time" "stream input/output" "/getw, putc, putchar," getc(3)
.xx "" "showq \- status of" "stream input/output system" "" showq(8)
.xx "" "feof, ferror, clearerr, fileno \(mi" "stream status inquiries" "" ferror(3)
.xx "" "" "streambuf \- interface for derived classes" "" sbuf(A)
.xx "" "pipebuf \-" "streambuf specialized as circular queue" "" pipebuf(A)
.xx "" "strstreambuf \-" "streambuf specialized to arrays" "" ssbuf(A)
.xx "" "fstream \- iostream and" "streambuf specialized to files" "" fstream(A)
.xx "" "puts, fputs, gets \(mi string input/out on" "streams" "fgets," fgets(3)
.xx "" "re_bm, re_cw, re_re \(mi" "string and pattern matching" "" re(3)
.xx "getfont \- text and font operations" "" "string, defont, strwidth, infont, outfont," "" string(9.3)
.xx "" "fgets, puts, fputs, gets \(mi" "string input/out on streams" "" fgets(3)
.xx "" "getfields, getmfields, setfields \(mi break a" "string into fields" "" getfields(3)
.xx "" "strpbrk, strspn, strcspn, strtok, strdup \(mi" "string operations" "/strlen, strchr, strrchr," string(3)
.xx "" "bits \- variable length bit" "strings" "" bits(3+)
.xx "" "" "strings \- find printable strings in a file" "" strings(1)
.xx "" "xstr \- preprocessor for sharing" "strings in C programs" "" xstr(A)
.xx "getmuxbuf, movstring \- dynamic/" "strinsure," "strinsert, strdelete, strzero, setmuxbuf," "" muxstring(9.3)
.xx "" "" "strip \- remove symbols and relocation bits" "" strip(1)
.xx "" "basename, dirname \-" "strip filename affixes" "" basename(1)
.xx "" "" "strlic \- Esterel parser" "" strlic(A)
.xx "strlen, strchr, strrchr, strpbrk,/" "strcat," "strncat, strcmp, strncmp, strcpy, strncpy," "" string(3)
.xx "" "/strncpy, strlen, strchr, strrchr, strpbrk," "strspn, strcspn, strtok, strdup \(mi string/" "" string(3)
.xx "" "" "strstream \- iostream specialized to arrays" "" strstream(A)
.xx "" "" "strstreambuf \- streambuf specialized to arrays" "" ssbuf(A)
.xx "" "strchr, strrchr, strpbrk, strspn, strcspn," "strtok, strdup \(mi string operations" "/strlen," string(3)
.xx "" "atof, atoi, atol, strtod," "strtol, strtoul \(mi convert ASCII to numbers" "" atof(3)
.xx "" "" "struct \- structure Fortran programs" "" struct(A)
.xx "" "ops5, pascal, ratfor, S, smp, sno, spitbol," "struct, twig \- languages" "/macsyma, maple," langs(1)
.xx "font operations" "string, defont," "strwidth, infont, outfont, getfont \- text and" "" string(9.3)
.xx "dynamic/" "strinsure, strinsert, strdelete," "strzero, setmuxbuf, getmuxbuf, movstring \-" "" muxstring(9.3)
.xx "" "" "stty \- set terminal options" "" stty(1)
.xx "" "wwb," "style, diction, punct \- writer's workbench" "" wwb(1)
.xx "become super-user" "" "su, setlog \- substitute userid temporarily," "" su(8)
.xx "ptinrect, raddp, rsubp, rectXrect,/" "add," "sub, mul, div, eqpt, eqrect, inset, muldiv," "" add(9.3)
.xx "" "postnews \(mi" "submit netnews articles" "" postnews(7)
.xx "" "" "sum, treesum \- sum and count blocks in a file" "" sum(1)
.xx "" "setlog \- substitute userid temporarily, become" "super-user" "su," su(8)
.xx "" "sleep \-" "suspend execution for an interval" "" sleep(1)
.xx "" "sleep \(mi" "suspend execution for an interval" "" sleep(3)
.xx "" "" "svcmgr \- service remote computing requests" "" svcmgr(8)
.xx "" "" "swab \(mi swap bytes" "" swab(3)
.xx "" "" "swapon \- specify swapping device" "" swapon(8)
.xx "" "nm \(mi name list (" "symbol table)" "" nm(1)
.xx "" "stab \-" "symbol table types" "" stab(5)
.xx "" "maple \- interactive" "symbolic algebraic program" "" maple(A)
.xx "" "sdb \-" "symbolic debugger" "" sdb(A)
.xx "" "strip \- remove" "symbols and relocation bits" "" strip(1)
.xx "" "link," "symlink, readlink \(mi link to a file" "" link(2)
.xx "" "" "sync \- force writing of system buffers" "" sync(2)
.xx "" "" "sync, update \- update disk file systems" "" sync(8)
.xx "" "select \(mi" "synchronous input/output multiplexing" "" select(2)
.xx "" "" "syscall \(mi indirect system call" "" syscall(2)
.xx "notification" "vismon," "sysmon, vwhois \- system statistics and mail" "" vismon(9.1)
.xx "" "perror, sys_errlist," "sys_nerr \(mi system error messages" "" perror(3)
.xx "" "cu, ct \- call out to a terminal or another" "system" "" cu(1)
.xx "" "savecore \- save a core image of the operating" "system" "" savecore(8)
.xx "" "showq \- status of stream input/output" "system" "" showq(8)
.xx "" "who, whois, last \- who is or was on the" "system" "" who(1)
.xx "" "sa, accton \-" "system accounting" "" sa(8)
.xx "" "sync \- force writing of" "system buffers" "" sync(2)
.xx "" "syscall \(mi indirect" "system call" "" syscall(2)
.xx "" "intro, errno \(mi introduction to" "system calls and error numbers" "" intro(2)
.xx "" "vlimit, vswapon, getgroups, setgroups \(mi" "system calls to be avoided" "reboot, vadvise," deprecated(2)
.xx "" "config \-" "system configuration files" "" config(A)
.xx "" "types \- primitive" "system data types" "" types(5)
.xx "" "dmesg \-" "system diagnostic messages" "" dmesg(8)
.xx "" "perror, sys_errlist, sys_nerr \(mi" "system error messages" "" perror(3)
.xx "" "pstat \- print" "system facts" "" pstat(8)
.xx "" "" "system \(mi issue a shell command" "" system(3)
.xx "" "dkname \(mi map" "system name to Datakit address" "" dkname(7)
.xx "" "vismon, sysmon, vwhois \-" "system statistics and mail notification" "" vismon(9.1)
.xx "" "tbl \- format" "tables for nroff or troff" "" tbl(1)
.xx "" "" "tabs \- set terminal tabs" "" tabs(1)
.xx "file" "" "tail, readslow \- deliver the last part of a" "" tail(1)
.xx "functions" "sin, cos," "tan, asin, acos, atan, atan2 \(mi trigonometric" "" sin(3)
.xx "" "sinh, cosh," "tanh \(mi hyperbolic functions" "" sinh(3)
.xx "tape" "" "tape, mt \- identify and manipulate magnetic" "" tape(1)
.xx "" "" "tar \- tape archiver" "" tar(1)
.xx "" "" "tbl \- format tables for nroff or troff" "" tbl(1)
.xx "" "d202," "tc \- typesetter filters" "" d202(A)
.xx "" "tcp_listen, tcp_accept, tcp_rcmd \(mi" "tcp networking functions" "/tcp_connect," tcp(3)
.xx "" "tcpmgr \- accept and place calls via the" "TCP protocol" "" tcpmgr(8)
.xx "" "tcp," "tcp_ld \- DARPA transmission control protocol" "" tcp(4)
.xx "networking functions" "tcp_sock, tcp_connect," "tcp_listen, tcp_accept, tcp_rcmd \(mi tcp" "" tcp(3)
.xx "protocol" "" "tcpmgr \- accept and place calls via the TCP" "" tcpmgr(8)
.xx "" "" "tee \- pipe fitting" "" tee(1)
.xx "" "tk \- paginator for the" "Tektronix 4014" "" tk(A)
.xx "" "" "tel, telno, dq \- phone books" "" tel(7)
.xx "operations" "opendir, readdir," "telldir, seekdir, closedir \(mi directory" "" directory(3)
.xx "" "" "telnet \- user interface to the telnet protocol" "" telnet(A)
.xx "" "tel," "telno, dq \- phone books" "" tel(7)
.xx "" "" "term \- nonstandard mux terminals" "" term(9.1)
.xx "" "" "termcap \- terminal capability file" "" termcap(5)
.xx "" "450 \- handle special functions of the DASI 450" "terminal" "" 450(A)
.xx "" "isatty, nametty \(mi find or set name of a" "terminal" "ttyname," ttyname(3)
.xx "" "termcap \-" "terminal capability file" "" termcap(5)
.xx "" "ttys \-" "terminal initialization data" "" ttys(5)
.xx "" "getty \- set" "terminal mode" "" getty(8)
.xx "" "tset \- set" "terminal modes" "" tset(A)
.xx "" "tty, logtty \- get" "terminal name" "" tty(1)
.xx "" "stty \- set" "terminal options" "" stty(1)
.xx "" "cu, ct \- call out to a" "terminal or another system" "" cu(1)
.xx "" "tty_ld \-" "terminal processing line discipline" "" ttyld(4)
.xx "" "tgetstr, tgoto, tputs \(mi device-independent" "terminal screen control" "/tgetnum, tgetflag," termcap(3)
.xx "" "tabs \- set" "terminal tabs" "" tabs(1)
.xx "" "handle special functions of DASI 300 and 300s" "terminals" "300, 300s \-" 300(A)
.xx "" "ul \- print underlines on screen" "terminals" "" ul(1)
.xx "" "" "terminals \- conventional names" "" term(6)
.xx "" "kill \(mi" "terminate a process with extreme prejudice" "" kill(1)
.xx "" "exit, onexit \(mi" "terminate process" "" exit(3)
.xx "" "_exit, wait wait3 \(mi" "terminate process, wait for child to terminate" "" exit(2)
.xx "" "" "test, [, newer \- condition commands" "" test(1)
.xx "" "quiz \-" "test your knowledge" "" quiz(A)
.xx "formatting and typesetting" "" "tex, initex, virtex, dvips, dvit \- text" "" tex(1)
.xx "" "latex, bibtex \-" "tex macro package and bibliographies" "" latex(6)
.xx "" "pic, tpic \(mi troff and" "tex preprocessors for drawing pictures" "" pic(1)
.xx "" "defont, strwidth, infont, outfont, getfont \-" "text and font operations" "string," string(9.3)
.xx "" "ed, e \-" "text editor" "" ed(1)
.xx "" "jim, jim.recover \-" "text editor" "" jim(A)
.xx "" "ex, edit, vi \-" "text editor" "" vi(1)
.xx "" "samuel \(mi" "text editor and C browser" "" samuel(A)
.xx "" "fmt \(mi ultra-simple" "text formatter" "" fmt(1)
.xx "" "tex, initex, virtex, dvips, dvit \-" "text formatting and typesetting" "" tex(1)
.xx "" "troff, nroff \-" "text formatting and typesetting" "" troff(1)
.xx "" "bitblt, point, rectf, screenswap, segment," "texture \- graphics functions" "Code, addr," bitblt(9.3)
.xx "\- graphics/" "Word, Point, Rectangle, Bitmap," "Texture, Pt, Rect, Rpt, display, Drect, Jrect" "" types(9.5)
.xx "tputs \(mi device-independent terminal screen/" "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto," "" termcap(3)
.xx "" "" "thinkblt, think \- print on thinkjet" "" thinkblt(9.1)
.xx "thinkabort \- ThinkJet routines" "" "thinkchar, thinknchars, thinkflush, thinkmap," "" thinkclient(9.3)
.xx "" "at \(mi execute commands at a later" "time" "" at(1)
.xx "" "stime, biasclock \(mi set" "time" "" stime(2)
.xx "" "timec, timegm, timelocal \- convert ASCII to" "time" "" timec(3)
.xx "" "" "time \- time a command" "" time(1)
.xx "" "" "time, ftime \(mi get date and time" "" time(2)
.xx "" "profil \(mi execution" "time profile" "" profil(2)
.xx "" "vtimes \- get usage of" "time, space, and paging resources" "" vtimes(2)
.xx "" "fputc, putw \(mi character- or word-at-a-" "time stream input/output" "/getw, putc, putchar," getc(3)
.xx "" "gmtime, asctime, timezone \(mi convert date and" "time to ASCII" "ctime, localtime," ctime(3)
.xx "time" "" "timec, timegm, timelocal \- convert ASCII to" "" timec(3)
.xx "" "utime \(mi change file mode, owner, group, or" "times" "chmod, fchmod, chown, fchown," chmod(2)
.xx "" "" "times \(mi get process times" "" times(2)
.xx "" "byteyears \-" "time-space product for file residency" "" byteyears(A)
.xx "" "ctime, localtime, gmtime, asctime," "timezone \(mi convert date and time to ASCII" "" ctime(3)
.xx "" "alarm, nap, pause \(mi schedule" "timing delays" "" alarm(2)
.xx "" "" "tk \- paginator for the Tektronix 4014" "" tk(A)
.xx "" "mktemp," "tmpnam \(mi make a unique file name" "" mktemp(3)
.xx "getname \-/" "P, newproc, muxnewwind, newwindow," "tolayer, debug, getproc, getproctab, putname," "" newproc(9.2)
.xx "" "" "tolower, toupper \(mi force upper or lower case" "" tolower(3)
.xx "" "tsort \-" "topological sort" "" tsort(1)
.xx "date of a file" "" "touch, chdate \- set modification or access" "" chdate(1)
.xx "" "rebecca \- graphics" "touch-up editor" "" rebecca(9.1)
.xx "" "tolower," "toupper \(mi force upper or lower case" "" tolower(3)
.xx "" "weather \- conditions and forecast by" "town" "" weather(7)
.xx "" "" "town \- gazetteer of US places" "" town(7)
.xx "" "ped," "tped \- picture editor" "" ped(9.1)
.xx "drawing pictures" "pic," "tpic \(mi troff and tex preprocessors for" "" pic(1)
.xx "" "tgetent, tgetnum, tgetflag, tgetstr, tgoto," "tputs \(mi device-independent terminal screen/" "" termcap(3)
.xx "" "" "tr \- translate characters" "" tr(1)
.xx "" "" "track \- selective remote file copy" "" track(A)
.xx "" "smtpqer, smtpd, smtpsched \- handle simple mail" "transfer protocol" "smtp," smtp(8)
.xx "" "upas, rmail," "translate \- mail delivery system" "" upas(8)
.xx "" "tr \-" "translate characters" "" tr(1)
.xx "" "tcp, tcp_ld \- DARPA" "transmission control protocol" "" tcp(4)
.xx "" "ftw \- file" "tree walk" "" ftw(3)
.xx "" "twig \-" "tree-manipulation language" "" twig(A)
.xx "" "sum," "treesum \- sum and count blocks in a file" "" sum(1)
.xx "" "sin, cos, tan, asin, acos, atan, atan2 \(mi" "trigonometric functions" "" sin(3)
.xx "" "font \- description files for" "troff" "" font(5)
.xx "" "tbl \- format tables for nroff or" "troff" "" tbl(1)
.xx "pictures" "pic, tpic \(mi" "troff and tex preprocessors for drawing" "" pic(1)
.xx "" "" "troff, nroff \- text formatting and typesetting" "" troff(1)
.xx "" "proof \-" "troff output interpreter for 5620" "" proof(9.1)
.xx "" "apsend \- send" "troff output to phototypesetter" "" apsend(1)
.xx "" "ideal \(mi" "troff preprocessor for drawing pictures" "" ideal(1)
.xx "" "" "true, false \- provide truth values" "" true(1)
.xx "" "" "tset \- set terminal modes" "" tset(A)
.xx "" "doctor," "tso \- psychiatric consultation" "" doctor(A)
.xx "" "" "tsort \- topological sort" "" tsort(1)
.xx "" "fd, stdin, stdout, stderr," "tty \- file descriptor files" "" fd(4)
.xx "" "" "tty \- serial line interface drivers" "" tty(4)
.xx "" "" "tty, logtty \- get terminal name" "" tty(1)
.xx "" "" "tty_ld \- terminal processing line discipline" "" ttyld(4)
.xx "of a terminal" "" "ttyname, isatty, nametty \(mi find or set name" "" ttyname(3)
.xx "" "" "ttys \- terminal initialization data" "" ttys(5)
.xx "" "" "twid, pen \- doodle on the screen" "" twid(A)
.xx "" "pascal, ratfor, S, smp, sno, spitbol, struct," "twig \- languages" "/lisp, macsyma, maple, ops5," langs(1)
.xx "" "" "twig \- tree-manipulation language" "" twig(A)
.xx "" "Rpt, display, Drect, Jrect \- graphics data" "types" "/Rectangle, Bitmap, Texture, Pt, Rect," types(9.5)
.xx "" "" "types \- primitive system data types" "" types(5)
.xx "" "monk, monksample \-" "typeset documents and letters" "" monk(1)
.xx "" "eqn, neqn, checkeq \-" "typeset mathematics" "" eqn(1)
.xx "" "d202, tc \-" "typesetter filters" "" d202(A)
.xx "" "font \-" "typesetter fonts" "" font(6)
.xx "" "cip \- draw pictures for" "typesetting" "" cip(9.1)
.xx "" "virtex, dvips, dvit \- text formatting and" "typesetting" "tex, initex," tex(1)
.xx "" "troff, nroff \- text formatting and" "typesetting" "" troff(1)
.xx "" "ipconfig, dkipconfig," "udpconfig \- set up DARPA Internet protocols" "" ipconfig(8)
.xx "networking functions" "" "udp_connect, udp_listen, udp_datagram \(mi udp" "" udp(3)
.xx "" "" "ul \- print underlines on screen terminals" "" ul(1)
.xx "" "" "umask \(mi set file creation mode mask" "" umask(2)
.xx "" "mount," "umount \- mount and dismount file system" "" mount(8)
.xx "" "" "uname \- identify machine and kernel" "" uname(3)
.xx "" "pack, unpack, pcat, compress," "uncompress, zcat \(mi compress and expand files" "" pack(1)
.xx "" "ul \- print" "underlines on screen terminals" "" ul(1)
.xx "" "istream \- formatted and" "unformatted input" "" istream(A)
.xx "" "ostream \- formatted and" "unformatted output" "" ostream(A)
.xx "stream" "" "ungetc \(mi push character back into input" "" ungetc(3)
.xx "" "" "uniq \- report repeated lines in a file" "" uniq(1)
.xx "" "mktemp, tmpnam \(mi make a" "unique file name" "" mktemp(3)
.xx "" "" "units \- conversion program" "" units(7)
.xx "" "config \- configure a" "Unix kernel" "" config(A)
.xx "protocols" "dk, dkp_ld," "unixp_ld, cmc_ld \- Datakit interface and" "" dk(4)
.xx "" "rm \- remove (" "unlink) files" "" rm(1)
.xx "" "" "unlink \(mi remove directory entry" "" unlink(2)
.xx "compress and expand files" "pack," "unpack, pcat, compress, uncompress, zcat \(mi" "" pack(1)
.xx "distribution" "mkpkg, inspkg, seal," "unseal \- package files for automatic software" "" mkpkg(8)
.xx "" "" "upas, rmail, translate \- mail delivery system" "" upas(8)
.xx "" "sync," "update \- update disk file systems" "" sync(8)
.xx "" "/lbitblt, lpoint, lrectf, lsegment, ltexture," "upfront \- layer control and graphics" "" newlayer(9.2)
.xx "" "tolower, toupper \(mi force" "upper or lower case" "" tolower(3)
.xx "" "town \- gazetteer of" "US places" "" town(7)
.xx "" "quot, findo \- file system" "usage and hogs" "" quot(8)
.xx "" "vtimes \- get" "usage of time, space, and paging resources" "" vtimes(2)
.xx "" "netnews \-" "usenet news articles, utility files" "" netnews(5)
.xx "" "setruid, setlogname, setpgrp \(mi get or set" "user, group, or process identity" "/setgid," getuid(2)
.xx "" "getuid, id \(mi get" "user identity" "" getuid(1)
.xx "" "su, setlog \- substitute" "userid temporarily, become super-user" "" su(8)
.xx "" "wall \- write to all" "users" "" wall(8)
.xx "" "write, mesg \- write to other" "users, allow or forbid messages" "" write(1)
.xx "groups of programs" "" "usgmake \- maintain, update, and regenerate" "" usgmake(A)
.xx "times" "chmod, fchmod, chown, fchown," "utime \(mi change file mode, owner, group, or" "" chmod(2)
.xx "" "" "utmp, wtmp \- login records" "" utmp(5)
.xx "file transport and execution" "" "uucico, uusched, uuxqt, kick, debug \- uucp" "" uucico(8)
.xx "" "uucleanup \-" "uucp spool directory clean-up" "" uucleanup(8)
.xx "" "uustat \-" "uucp status inquiry and job control" "" uustat(1)
.xx "copy" "" "uucp, uulog, uuname \- unix-to-unix remote file" "" uucp(1)
.xx "copy" "uuto," "uupick \- simplified unix-to-unix remote file" "" uuto(1)
.xx "transport and execution" "uucico," "uusched, uuxqt, kick, debug \- uucp file" "" uucico(8)
.xx "" "" "uustat \- uucp status inquiry and job control" "" uustat(1)
.xx "file copy" "" "uuto, uupick \- simplified unix-to-unix remote" "" uuto(1)
.xx "" "" "uux \- unix to unix command execution" "" uux(1)
.xx "execution" "uucico, uusched," "uuxqt, kick, debug \- uucp file transport and" "" uucico(8)
.xx "\(mi system calls to be avoided" "reboot," "vadvise, vlimit, vswapon, getgroups, setgroups" "" deprecated(2)
.xx "" "" "varargs \(mi variable argument list" "" varargs(3)
.xx "" "console \-" "VAX console interface" "" console(4)
.xx "" "mem, kmem, kUmem, mtpr, fineclock \- memory and" "VAX processor registers" "" mem(4)
.xx "" "view2d, regrid," "vdata \- movie of a function f(x, y, t)" "" view2d(1)
.xx "" "" "vec, move, etc. \(mi plot graphics interface" "" plot(3)
.xx "process" "popen, ppopen," "vepopen, pclose \(mi open a pipe to/from a" "" popen(3)
.xx "" "lint, cyntax, cem \- C program" "verifiers" "" lint(1)
.xx "" "ex, edit," "vi \- text editor" "" vi(1)
.xx "" "2500 \- BVH2500" "videotape recorder" "" 2500(1)
.xx "" "" "view2d \- movie of a function f(x, y, t)" "" view2d(5)
.xx "y, t)" "" "view2d, moviefil \(mi movie of a function f(x," "" view2d(3)
.xx "f(x, y, t)" "" "view2d, regrid, vdata \- movie of a function" "" view2d(1)
.xx "typesetting" "tex, initex," "virtex, dvips, dvit \- text formatting and" "" tex(1)
.xx "" "vmstat \- report" "virtual memory statistics" "" vmstat(8)
.xx "" "" "vis \- show invisible characters" "" vis(1)
.xx "" "" "visi \- mathematical spreadsheet" "" visi(A)
.xx "mail notification" "" "vismon, sysmon, vwhois \- system statistics and" "" vismon(9.1)
.xx "" "" "vmstat \- report virtual memory statistics" "" vmstat(8)
.xx "to be avoided" "reboot, vadvise, vlimit," "vswapon, getgroups, setgroups \(mi system calls" "" deprecated(2)
.xx "resources" "" "vtimes \- get usage of time, space, and paging" "" vtimes(2)
.xx "notification" "vismon, sysmon," "vwhois \- system statistics and mail" "" vismon(9.1)
.xx "" "" "w, fp, ft, fd, rad \(mi aviation weather" "" avw(A)
.xx "realtime, sendchar, sendnchars,/" "request, own," "wait, alarm, sleep, nap, kbdchar, rcvchar," "" request(9.2)
.xx "child to terminate" "_exit," "wait wait3 \(mi terminate process, wait for" "" exit(2)
.xx "" "rc, cd," "wait, whatis \- command language" "" rc(1)
.xx "programming language" "sh, cd," "wait, whatis \- shell, the standard command" "" sh(1)
.xx "terminate" "_exit, wait" "wait3 \(mi terminate process, wait for child to" "" exit(2)
.xx "" "" "wall \- write to all users" "" wall(8)
.xx "" "ogre \-" "war game" "" ogre(A)
.xx "" "" "warp \- war games" "" warp(A)
.xx "" "bianchi \- espresso, steamed milk, hot" "water" "" bianchi(A)
.xx "" "" "wc \- word count" "" wc(1)
.xx "" "w, fp, ft, fd, rad \(mi aviation" "weather" "" avw(A)
.xx "" "" "weather \- conditions and forecast by town" "" weather(7)
.xx "" "wx - get" "weather information" "" wx(A)
.xx "" "rc, cd, wait," "whatis \- command language" "" rc(1)
.xx "programming language" "sh, cd, wait," "whatis \- shell, the standard command" "" sh(1)
.xx "" "pwd," "where \(mi machine name and working directory" "" pwd(1)
.xx "" "" "whoami \- computer name" "" whoami(5)
.xx "" "who," "whois, last \- who is or was on the system" "" who(1)
.xx "windows" "" "windows, jps, reshape \- create and initialize" "" windows(9.1)
.xx "" "wc \-" "word count" "" wc(1)
.xx "" "hangman, word_clout \-" "word games" "" hangman(A)
.xx "Rect, Rpt, display, Drect, Jrect \- graphics/" "" "Word, Point, Rectangle, Bitmap, Texture, Pt," "" types(9.5)
.xx "" "putc, putchar, fputc, putw \(mi character- or" "word-at-a-time stream input/output" "/getw," getc(3)
.xx "" "hangman," "word_clout \- word games" "" hangman(A)
.xx "" "dict \- look up" "words in English dictionaries" "" dict(7)
.xx "" "wwb, style, diction, punct \- writer's" "workbench" "" wwb(1)
.xx "" "pwd, where \(mi machine name and" "working directory" "" pwd(1)
.xx "" "chdir, chroot \(mi change" "working or root directory" "" chdir(2)
.xx "" "snake," "worm \- display chase games" "" snake(A)
.xx "" "" "worm \- format of worm disks" "" worm(5)
.xx "" "" "worm, jukebox \- optical disk utilities" "" worm(8)
.xx "forbid messages" "" "write, mesg \- write to other users, allow or" "" write(1)
.xx "" "read," "write \(mi read or write file" "" read(2)
.xx "" "lseek \(mi seek, move read/" "write pointer" "" lseek(2)
.xx "" "wall \-" "write to all users" "" wall(8)
.xx "" "write, mesg \-" "write to other users, allow or forbid messages" "" write(1)
.xx "" "festoon \- memo" "writer" "" festoon(A)
.xx "" "wwb, style, diction, punct \-" "writer's workbench" "" wwb(1)
.xx "" "sync \- force" "writing of system buffers" "" sync(2)
.xx "" "utmp," "wtmp \- login records" "" utmp(5)
.xx "" "adventure, zork, rogue," "wump \- dungeon-exploration games" "" adventure(A)
.xx "workbench" "" "wwb, style, diction, punct \- writer's" "" wwb(1)
.xx "clock" "" "wwv \- print or set the date from accurate" "" wwv(1)
.xx "" "" "wx - get weather information" "" wx(A)
.xx "command" "" "xargs \- construct argument lists and execute" "" xargs(A)
.xx "" "" "xd, od \(mi hex, octal, decimal, or ASCII dump" "" xd(1)
.xx "" "cray \- run job remotely on cray-" "xmp" "" cray(A)
.xx "programs" "" "xstr \- preprocessor for sharing strings in C" "" xstr(A)
.xx "" "" "yacc, eyacc \- yet another compiler-compiler" "" yacc(1)
.xx "" "bison \- GNU Project parser generator (" "yacc replacement)" "" bison(A)
.xx "" "pack, unpack, pcat, compress, uncompress," "zcat \(mi compress and expand files" "" pack(1)
.xx "" "adventure," "zork, rogue, wump \- dungeon-exploration games" "" adventure(A)
