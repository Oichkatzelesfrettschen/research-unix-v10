.TH FREXP 3
.CT 2 math data_man
.SH NAME
frexp, ldexp, modf \(mi split into mantissa and exponent
.SH SYNOPSIS
.B #include <math.h>
.PP
.nf
.B double frexp(value, eptr)
.B double value;
.B int *eptr;
.PP
.B double ldexp(value, exp)
.B double value;
.PP
.B double modf(value, iptr)
.B double value, *iptr;
.SH DESCRIPTION
.I Frexp
returns the mantissa of
.I value
and stores the exponent indirectly through
.I eptr,
so that
.I value
=
.if t .IR frexp ( value )\(mu2\u\s-2 \(**eptr \s0\d.
.if n .IR frexp ( value )*2** (*eptr).
.PP
.I Ldexp
returns the quantity
.if t .IR value \(mu2\u\s-2 exp \s0\d.
.if n .IR value *2** exp.
.PP
.I Modf
returns the positive fractional part of
.I value
and stores the integer part indirectly
through
.I iptr.
.SH DIAGNOSTICS
On underflow
.I ldexp
returns 0; on
overflow it returns a properly signed largest value.
In both cases it sets
.I errno
to
.BR ERANGE .
