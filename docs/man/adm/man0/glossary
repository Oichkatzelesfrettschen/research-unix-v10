.de H
.LP
.in 1n
.ti 0
.HI \\$1 \\$2 \\$3 \\$4 \\$5 \\$6
..
.de HI
.B
\\$1 \\$2 \\$3 \\$4 \\$5 \\$6
.R
..
.de C
.I
.if \\n(.$=1 \\$1
.if \\n(.$=2 \\$1 \\$2
.if \\n(.$=3 \\$1 \\$2 \\$3
.if \\n(.$=4 \\$1 \\$2 \\$3 \\$4
.if \\n(.$=5 \\$1 \\$2 \\$3 \\$4 \\$5
.if \\n(.$=6 \\$1 \\$2 \\$3 \\$4 \\$5 \\$6
.R
..
.rs
.SP .5i
.TL
GLOSSARY
.SP 2
.LP
This glossary covers major terms that have special meaning for the
UNIX system.
It excludes ordinary terms of art such as
`ASCII', `compiler', `address space', or `byte'.
It also excludes most terms peculiar to a single part of UNIX, e.g.
`diversion' (\fItroff\fR), `enumeration' (C),
or `pattern space' (\fIsed\fR).
.SP 1.3v
.nr PS 9
.nr VS 10
.2C
.H absolute pathname\ 
same as
.C full pathname.
.nr PD 1u
.H access time\ 
the most recent
.C time
at which the contents of a 
.C file
[2] were read or
.C executed
[2]; cf.\&
.C modification time.
.H alarm\ 
a
.C signal
scheduled by the clock.
.H a.out\ 
the default name of a freshly compiled
.C object file,
pronounced `A-dot-out';
historically 
.CW a.out
signified assembler output.
.H archive\ 
1.\&
a collection of data gathered from several
.C files
into one file.
2.\&
especially, such a collection gathered by
.I ar (1)
for use as a
.C library.
.H argument\ 
1.\&
a
string made available to a
.C process
upon
.C executing
a
.C file.
2.\&
a string in a
.C command,
which the
.C shell
[1] will pass to the command program
as an argument [1].
.H ASCII file\ 
same as
.C text file.
.H automatic\ 
persistent only during the invocation of a procedure, said of
data belonging to a
.C process;
automatic data occupies the
.C stack segment;
cf.\&
.C static.
.H background\ 
running independently of a
terminal, said of a
.C process;
converse of
.C foreground.
.H basename\ 
1.\&
the last component of a
.C pathname;
the basename of
.CW /bin/proc
is
.CW proc .
2.\&
occasionally a basename [1] with conventional
suffixes removed; see
.I basename (1).
.H blit\ 
vernacular name for a prototype
Teletype 5620 terminal; cf.\&
.C jerq.
.H block\ 
the basic unit of
.C buffering
[1]
in a
.C file system
[3], 1024 or 4096 bytes in this system.
.H block device\ 
a
.C device
that may contain a
.C file system
[3],
typically a permanent storage device such as a tape or
disk drive; the unit of data transfer is one
.C block;
cf.\&
.C character device.
.H boot\ 
to start the operating system, so called because the
.C kernel
must bootstrap itself from secondary store into an empty machine.
No
.C login
[3]
or
.C process
persists across a boot.
.H boot block\ 
the first block of a
.C file system
[1],
which is reserved for a 
.C booting 
program.
.H break\ 
1.\&
an out-of-band signal on an asynchronous data line arising from
the `break' or `interrupt' key on a terminal;
before
.C logging in
a break causes a change in baud rate;
thereafter it is interpreted as an
.C interrupt.
2.\&
a control statement in C or
.I sh (1).
3.\&
the
.C program break.
4.\&
in
.I troff (1),
a point in running text where a new line must begin.
.H BSD\ 
see
.C UNIX.
.H bss segment\ 
see
.C segment.
.H buffer\ 
1.\&
a staging area for input-output where arbitrary-length
transactions are collected into convenient units for system operations.
2.\&
to use buffers.
.H buffer pool\ 
a region of 
.C kernel
memory available for holding
.C blocks;
non-\c
.C raw
input-output for
.C block devices
and
.C file systems
[3]
goes through the buffer pool to make
read and write operations
independent of device format.
.H cbreak\ 
a mode of terminal input in which every character not a
.C special character
becomes available to a
.I read (2)
operation as soon as it is typed, instead of being
.C buffered
up to a
.C newline
or
.C EOT character.
.H change time\ 
the most recent
.C time
at which the contents of a
.C file
[2] or its
.C inode
properties (e.g.
.C owner
and
.I mode )
were altered;
cf.\&
.C modification time.
.H character\ 
1.\&
a unit of store, usually 8 bits;
a byte.
2.\&
a token of the
ASCII
code, with octal value in the range 0 to 0177.
.H character device\ 
a
.C device,
such as a terminal or the
.C null device,
that ca