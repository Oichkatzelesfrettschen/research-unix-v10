.TH ASSERT 3X
.CT 2 debug_tune
.SH NAME
assert \(mi assertion checking
.SH SYNOPSIS
.B #include <assert.h>
.PP
.B void assert(expression);
.SH DESCRIPTION
.PP
.I Assert
is a macro that indicates
.I expression
is expected to be nonzero at this point in the program.
It causes an
.IR abort (3)
with a diagnostic comment on the standard output
when
.I expression
is zero.
Compiling with the
.IR cc (1)
option
.B -DNDEBUG
effectively makes the expression always nonzero.
.SH DIAGNOSTICS
`Assertion failed: file
.I f
line
.I n',
where
.I f
is the source file and
.I n
the source line number
of the
.I assert
statement.
