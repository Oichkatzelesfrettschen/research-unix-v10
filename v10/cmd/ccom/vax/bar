L11:	.stabs	"",0x64,0,0,L11
	.stabs	"vaxpcc2",0xf0,0,17665,590758101
	.data
	.comm	_symseg,800
	.comm	_csymseg,4
	.comm	_cursym,12
	.comm	_lastsym,4
	.comm	_nextsym,4
	.comm	_addsym,4
	.comm	_nsym,4
	.comm	_p_etext,4
	.comm	_p_edata,4
	.comm	_p_end,4
	.comm	_entrypt,4
	.comm	_li_init,1000
	.data
	.align	2
	.globl	_libseg
_libseg:
	.long	_li_init
	.long	0
	.long	0
	.space	468
	.data
	.align	2
	.globl	_clibseg
_clibseg:
	.long	_libseg
	.comm	_lochash,124
	.comm	_lhinit,1200
	.data
	.align	2
	.globl	_locseg
_locseg:
	.long	_lhinit
	.long	0
	.space	312
	.comm	_clocseg,4
	.comm	_tnum,4
	.comm	_ssiz,4
	.comm	_tab,4
	.comm	_tabstr,4
	.comm	_page,8224
	.comm	_fpage,16
	.comm	_text,24
	.comm	_reloc,24
	.comm	_filhdr,32
	.comm	_archdr,60
	.comm	_trace,4
	.comm	_xflag,4
	.comm	_Xflag,4
	.comm	_Sflag,4
	.comm	_rflag,4
	.comm	_arflag,4
	.comm	_sflag,4
	.comm	_Mflag,4
	.comm	_nflag,4
	.comm	_dflag,4
	.comm	_zflag,4
	.comm	_hsize,4
	.comm	_Aflag,4
	.comm	_Nflag,4
	.comm	_funding,4
	.comm	_yflag,4
	.comm	_ytab,4
	.comm	_tsize,4
	.comm	_dsize,4
	.comm	_bsize,4
	.comm	_trsize,4
	.comm	_drsize,4
	.comm	_ssize,4
	.comm	_ctrel,4
	.comm	_cdrel,4
	.comm	_cbrel,4
	.comm	_textbase,4
	.comm	_database,4
	.comm	_torigin,4
	.comm	_dorigin,4
	.comm	_borigin,4
	.comm	_errlev,4
	.data
	.align	2
	.globl	_delarg
_delarg:
	.long	4
	.comm	_biobufs,4
	.comm	_biofd,4
	.comm	_boffset,4
	.comm	_tout,4
	.comm	_dout,4
	.comm	_trout,4
	.comm	_drout,4
	.comm	_sout,4
	.comm	_strout,4
	.align	2
	.globl	_offset
_offset:
	.long	4
	.comm	_ofilfnd,4
	.align	2
	.globl	_ofilename
_ofilename:
	.data	2
L96:

	.byte	0x6c,0x2e,0x6f,0x75,0x74,0x0
	.data
	.long	L96
	.comm	_ofilemode,4
	.comm	_infil,4
	.comm	_filname,4
	.comm	_curstr,4
	.text
	.align	2
	.globl	_main
_main:
	.word	L.R1
	subl2	$L.SO1,sp
	.stabs	"main",0x24,0,323,_main
	.stabs	"argc",0xa0,0,4,4
	.stabs	"argv",0xa0,0,162,8
	pushl	$1
	pushl	$2
	calls	$2,_signal
	cmpl	r0,$1
	jeql	L106
	pushl	$_delexit
	pushl	$2
	calls	$2,_signal
	pushl	$_delexit
	pushl	$15
	calls	$2,_signal
L106:
	cmpl	4(ap),$1
	jneq	L107
	pushl	$4
	calls	$1,_exit
L107:
	addl3	$4,8(ap),r8
	movl	$1,r11
	jbr	L111
L112:
	tstl	_trace
	jeql	L113
	.data	1
L115:

	.byte	0x25,0x73,0x3a,0xa,0x0
	.text
	pushl	(r8)
	pushl	$L115
	calls	$2,_printf
L113:
	clrl	_filname
	movl	(r8)+,r9
	cmpb	(r9),$45
	jeql	L116
	pushl	r9
	calls	$1,_load1arg
	jbr	L109
L116:
	movl	$1,r10
	jbr	L120
L121:
	cvtbl	(r9)[r10],r0
	jbr	L123
L124:
	incl	r11
	cmpl	r11,4(ap)
	jlss	L125
	.data	1
L127:

	.byte	0x2d,0x6f,0x20,0x77,0x68,0x65,0x72,0x65
	.byte	0x3f,0x0
	.text
	pushl	$L127
	pushl	$1
	calls	$2,_error
L125:
	movl	(r8)+,_ofilename
	incl	_ofilfnd
	jbr	L118
L128:
L129:
	incl	r11
	cmpl	r11,4(ap)
	jlss	L130
	.data	1
L131:

	.byte	0x2d,0x75,0x20,0x6f,0x72,0x20,0x2d,0x63
	.byte	0x3a,0x20,0x61,0x72,0x67,0x20,0x6d,0x69
	.byte	0x73,0x73,0x69,0x6e,0x67,0x0
	.text
	pushl	$L131
	pushl	$1
	calls	$2,_error
L130:
	pushl	(r8)+
	calls	$1,_slookup
	pushl	r0
	calls	$1,_enter
	cmpb	(r9)[r10],$101
	jneq	L133
	movl	_lastsym,_entrypt
L133:
	jbr	L118
L134:
	incl	r11
	cmpl	r11,4(ap)
	jlss	L135
	.data	1
L136:

	.byte	0x2d,0x48,0x3a,0x20,0x61,0x72,0x67,0x20
	.byte	0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x0
	.text
	pushl	$L136
	pushl	$1
	calls	$2,_error
L135:
	tstl	_tsize
	jeql	L137
	.data	1
L138:

	.byte	0x2d,0x48,0x3a,0x20,0x74,0x6f,0x6f,0x20
	.byte	0x6c,0x61,0x74,0x65,0x2c,0x20,0x73,0x6f
	.byte	0x6d,0x65,0x20,0x74,0x65,0x78,0x74,0x20
	.byte	0x61,0x6c,0x72,0x65,0x61,0x64,0x79,0x20
	.byte	0x6c,0x6f,0x61,0x64,0x65,0x64,0x0
	.text
	pushl	$L138
	pushl	$1
	calls	$2,_error
L137:
	pushl	(r8)+
	calls	$1,_atoi
	movl	r0,_hsize
	jbr	L118
L140:
	incl	r11
	cmpl	r11,4(ap)
	jlss	L141
	.data	1
L142:

	.byte	0x2d,0x41,0x3a,0x20,0x61,0x72,0x67,0x20
	.byte	0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x0
	.text
	pushl	$L142
	pushl	$1
	calls	$2,_error
L141:
	tstl	_Aflag
	jeql	L143
	.data	1
L144:

	.byte	0x2d,0x41,0x3a,0x20,0x6f,0x6e,0x6c,0x79
	.byte	0x20,0x6f,0x6e,0x65,0x20,0x62,0x61,0x73
	.byte	0x65,0x20,0x66,0x69,0x6c,0x65,0x20,0x61
	.byte	0x6c,0x6c,0x6f,0x77,0x65,0x64,0x0
	.text
	pushl	$L144
	pushl	$1
	calls	$2,_error
L143:
	movl	$1,_Aflag
	clrl	_nflag
	movl	$1,_funding
	pushl	(r8)+
	calls	$1,_load1arg
	clrl	_bsize
	movl	_bsize,_dsize
	movl	_dsize,_tsize
	movl	_tsize,_drsize
	movl	_drsize,_trsize
	clrl	_cbrel
	movl	_cbrel,_cdrel
	movl	_cdrel,_ctrel
	clrl	_funding
	movl	_nextsym,_addsym
	jbr	L118
L145:
	incl	r11
	cmpl	r11,4(ap)
	jlss	L146
	.data	1
L147:

	.byte	0x2d,0x44,0x3a,0x20,0x61,0x72,0x67,0x20
	.byte	0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x0
	.text
	pushl	$L147
	pushl	$1
	calls	$2,_error
L146:
	pushl	(r8)+
	calls	$1,_htoi
	movl	r0,-4(fp)
	cmpl	_dsize,-4(fp)
	jleq	L149
	.data	1
L150:

	.byte	0x2d,0x44,0x3a,0x20,0x74,0x6f,0x6f,0x20
	.byte	0x73,0x6d,0x61,0x6c,0x6c,0x0
	.text
	pushl	$L150
	pushl	$1
	calls	$2,_error
L149:
	movl	-4(fp),_dsize
	jbr	L118
L151:
	incl	r11
	cmpl	r11,4(ap)
	jlss	L152
	.data	1
L153:

	.byte	0x2d,0x54,0x3a,0x20,0x61,0x72,0x67,0x20
	.byte	0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x0
	.text
	pushl	$L153
	pushl	$1
	calls	$2,_error
L152:
	tstl	_tsize
	jeql	L154
	.data	1
L155:

	.byte	0x2d,0x54,0x3a,0x20,0x74,0x6f,0x6f,0x20
	.byte	0x6c,0x61,0x74,0x65,0x2c,0x20,0x73,0x6f
	.byte	0x6d,0x65,0x20,0x74,0x65,0x78,0x74,0x20
	.byte	0x61,0x6c,0x72,0x65,0x61,0x64,0x79,0x20
	.byte	0x6c,0x6f,0x61,0x64,0x65,0x64,0x0
	.text
	pushl	$L155
	pushl	$1
	calls	$2,_error
L154:
	pushl	(r8)+
	calls	$1,_htoi
	movl	r0,_textbase
	jbr	L118
L156:
	decl	r10
	addl3	r9,r10,r0
	movb	(r0),-5(fp)
	movb	$45,(r9)[r10]
	addl3	r9,r10,-(sp)
	calls	$1,_load1arg
	movb	-5(fp),(r9)[r10]
	jbr	L157
L158:
	incl	_Mflag
	jbr	L118
L159:
	incl	_xflag
	jbr	L118
L160:
	incl	_Xflag
	jbr	L118
L161:
	incl	_Sflag
	jbr	L118
L162:
	incl	_rflag
	incl	_arflag
	jbr	L118
L163:
	incl	_sflag
	incl	_xflag
	jbr	L118
L164:
	incl	_nflag
	clrl	_zflag
	movl	_zflag,_Nflag
	jbr	L118
L165:
	incl	_Nflag
	clrl	_zflag
	movl	_zflag,_nflag
	jbr	L118
L166:
	incl	_dflag
	jbr	L118
L167:
	.data	1
L168:

	.byte	0x6c,0x64,0x3a,0x20,0x2d,0x69,0x20,0x69
	.byte	0x67,0x6e,0x6f,0x72,0x65,0x64,0xa,0x0
	.text
	pushl	$L168
	calls	$1,_printf
	jbr	L118
L169:
	incl	_trace
	jbr	L118
L170:
	addl3	$1,r10,r0
	addl2	r9,r0
	tstb	(r0)
	jneq	L171
	.data	1
L172:

	.byte	0x2d,0x79,0x3a,0x20,0x73,0x79,0x6d,0x62
	.byte	0x6f,0x6c,0x20,0x6e,0x61,0x6d,0x65,0x20
	.byte	0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x0
	.text
	pushl	$L172
	pushl	$1
	calls	$2,_error
L171:
	tstl	_yflag
	jneq	L173
	pushl	$4
	pushl	4(ap)
	calls	$2,_calloc
	movl	r0,_ytab
	tstl	_ytab
	jneq	L175
	.data	1
L176:

	.byte	0x72,0x61,0x6e,0x20,0x6f,0x75,0x74,0x20
	.byte	0x6f,0x66,0x20,0x6d,0x65,0x6d,0x6f,0x72
	.byte	0x79,0x20,0x28,0x2d,0x79,0x29,0x0
	.text
	pushl	$L176
	pushl	$1
	calls	$2,_error
L175:
L173:
	movl	_yflag,r0
	incl	_yflag
	addl3	$1,r10,r1
	addl3	r9,r1,*_ytab[r0]
	jbr	L157
L177:
	incl	_zflag
	clrl	_nflag
	movl	_nflag,_Nflag
	jbr	L118
L178:
	.data	1
L179:

	.byte	0x2d,0x78,0x0
	.text
	pushl	$L179
	calls	$1,_savestr
	movl	r0,_filname
	movl	_filname,r0
	movb	(r9)[r10],1(r0)
	clrb	_archdr
	.data	1
L180:

	.byte	0x62,0x61,0x64,0x20,0x66,0x6c,0x61,0x67
	.byte	0x0
	.text
	pushl	$L180
	pushl	$1
	calls	$2,_error
	jbr	L122
L123:
	casel	r0,$65,$57
L181:
	.word	L140-L181
	.word	L178-L181
	.word	L178-L181
	.word	L145-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L134-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L158-L181
	.word	L165-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L161-L181
	.word	L151-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L160-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L166-L181
	.word	L129-L181
	.word	L178-L181
	.word	L178-L181
	.word	L178-L181
	.word	L167-L181
	.word	L178-L181
	.word	L178-L181
	.word	L156-L181
	.word	L178-L181
	.word	L164-L181
	.word	L124-L181
	.word	L178-L181
	.word	L178-L181
	.word	L162-L181
	.word	L163-L181
	.word	L169-L181
	.word	L128-L181
	.word	L178-L181
	.word	L178-L181
	.word	L159-L181
	.word	L170-L181
	.word	L177-L181
	jbr	L178
L122:
L118:
	incl	r10
L120:
	tstb	(r9)[r10]
	jneq	L121
L119:
L157:
L109:
	incl	r11
L111:
	cmpl	r11,4(ap)
	jlss	L112
L110:
	tstl	_rflag
	jneq	L182
	tstl	_Nflag
	jneq	L182
L184:
	tstl	_nflag
	jneq	L182
L183:
	incl	_zflag
L182:
	pushl	8(ap)
	pushl	4(ap)
	calls	$2,_endload
	pushl	$0
	calls	$1,_exit
	.stabs	"save",0x80,0,2,5
	.stabs	"p",0x40,0,162,8
	.stabs	"ap",0x40,0,34,9
	.stabs	"num",0x80,0,4,4
	.stabs	"i",0x40,0,4,10
	.stabs	"c",0x40,0,4,11
L105:
	ret
	.set	L.R1,0xf00
	.set	L.SO1,0x8
L186:	.data
	.text
	.align	2
	.globl	_htoi
_htoi:
	.word	L.R2
	subl2	$L.SO2,sp
	.stabs	"htoi",0x24,0,479,_htoi
	.stabs	"p",0xa0,0,34,4
	movl	4(ap),r11
	clrl	r9
	jbr	L189
L190:
	addl2	r9,r9
	addl2	r9,r9
	addl2	r9,r9
	addl2	r9,r9
	bitb	$4,__ctype+1(r10)
	jeql	L191
	subl3	$48,r10,r0
	addl2	r0,r9
	jbr	L192
L191:
	cmpl	r10,$97
	jlss	L193
	cmpl	r10,$102
	jgtr	L193
L194:
	subl3	$87,r10,r0
	addl2	r0,r9
	jbr	L195
L193:
	cmpl	r10,$65
	jlss	L196
	cmpl	r10,$70
	jgtr	L196
L197:
	subl3	$55,r10,r0
	addl2	r0,r9
	jbr	L198
L196:
	.data	1
L199:

	.byte	0x62,0x61,0x64,0x6c,0x79,0x20,0x66,0x6f
	.byte	0x72,0x6d,0x65,0x64,0x20,0x68,0x65,0x78
	.byte	0x20,0x6e,0x75,0x6d,0x62,0x65,0x72,0x0
	.text
	pushl	$L199
	pushl	$1
	calls	$2,_error
L198:
L195:
L192:
L189:
	cvtbl	(r11)+,r10
	jneq	L190
L188:
	movl	r9,r0
	jbr	L187
	.stabs	"n",0x40,0,4,9
	.stabs	"c",0x40,0,4,10
	.stabs	"p",0x40,0,34,11
L187:
	ret
	.set	L.R2,0xe00
	.set	L.SO2,0x0
L200:	.data
	.text
	.align	2
	.globl	_delexit
_delexit:
	.word	L.R3
	subl2	$L.SO3,sp
	.stabs	"delexit",0x24,0,498,_delexit
	calls	$0,_bflush
	.data	1
L204:

	.byte	0x6c,0x2e,0x6f,0x75,0x74,0x0
	.text
	pushl	$L204
	calls	$1,_unlink
	tstl	_delarg
	jneq	L205
	tstl	_Aflag
	jneq	L205
L206:
	pushl	_ofilemode
	pushl	_ofilename
	calls	$2,_chmod
L205:
	pushl	_delarg
	calls	$1,_exit
L201:
	ret
	.set	L.R3,0x0
	.set	L.SO3,0x0
L208:	.data
	.text
	.align	2
	.globl	_endload
_endload:
	.word	L.R4
	subl2	$L.SO4,sp
	.stabs	"endload",0x24,0,510,_endload
	.stabs	"argc",0xa0,0,4,4
	.stabs	"argv",0xa0,0,162,8
	movl	$_libseg,_clibseg
	clrl	_filname
	calls	$0,_middle
	calls	$0,_setupout
	addl3	$4,8(ap),r8
	movl	$1,r11
	jbr	L214
L215:
	movl	(r8)+,r9
	tstl	_trace
	jeql	L216
	.data	1
L217:

	.byte	0x25,0x73,0x3a,0xa,0x0
	.text
	pushl	r9
	pushl	$L217
	calls	$2,_printf
L216:
	cmpb	(r9),$45
	jeql	L218
	pushl	r9
	calls	$1,_load2arg
	jbr	L212
L218:
	movl	$1,r10
	jbr	L222
L223:
	cvtbl	(r9)[r10],r0
	jbr	L225
L226:
	pushl	(r8)
	calls	$1,_htoi
	movl	r0,-4(fp)
	cmpl	_dorigin,-4(fp)
	jgeq	L227
	jbr	L229
L230:
	tstw	*_dout
	jeql	L232
	decw	*_dout
	clrb	r0
	movl	_dout,r1
	movl	4(r1),r2
	incl	4(r1)
	movb	r0,(r2)
	jbr	L233
L232:
	pushl	$0
	pushl	_dout
	calls	$2,_bflushc
L233:
	movl	_dorigin,r0
	incl	_dorigin
L229:
	cmpl	_dorigin,-4(fp)
	jlss	L230
L228:
L227:
L234:
L235:
L236:
L237:
L238:
	incl	r11
	addl2	$4,r8
L239:
	jbr	L220
L240:
	movl	$1,_funding
	pushl	(r8)+
	calls	$1,_load2arg
	clrl	_funding
	incl	r11
	jbr	L220
L241:
	jbr	L242
L243:
	decl	r10
	addl3	r9,r10,r0
	movb	$45,(r0)
	addl3	r9,r10,-(sp)
	calls	$1,_load2arg
	jbr	L242
L225:
	casel	r0,$65,$56
L244:
	.word	L240-L244
	.word	L239-L244
	.word	L239-L244
	.word	L226-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L238-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L234-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L236-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L243-L244
	.word	L239-L244
	.word	L239-L244
	.word	L237-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L235-L244
	.word	L239-L244
	.word	L239-L244
	.word	L239-L244
	.word	L241-L244
	jbr	L239
L224:
L220:
	incl	r10
L222:
	tstb	(r9)[r10]
	jneq	L223
L221:
L242:
L212:
	incl	r11
L214:
	cmpl	r11,4(ap)
	jlss	L215
L213:
	calls	$0,_finishout
	.stabs	"p",0x40,0,162,8
	.stabs	"ap",0x40,0,34,9
	.stabs	"dnum",0x80,0,4,4
	.stabs	"i",0x40,0,4,10
	.stabs	"c",0x40,0,4,11
L209:
	ret
	.set	L.R4,0xf00
	.set	L.SO4,0x4
L246:	.data
	.text
	.align	2
	.globl	_load1arg
_load1arg:
	.word	L.R5
	subl2	$L.SO5,sp
	.stabs	"load1arg",0x24,0,570,_load1arg
	.stabs	"cp",0xa0,0,34,4
	movl	4(ap),r11
	pushl	r11
	calls	$1,_getfile
	movl	r0,-8(fp)
	tstl	_Mflag
	jeql	L249
	.data	1
L250:

	.byte	0x25,0x73,0xa,0x0
	.text
	pushl	_filname
	pushl	$L250
	calls	$2,_printf
L249:
	movl	-8(fp),r0
	jbr	L252
L253:
	pushl	$0
	pushl	$0
	calls	$2,_load1
	jbr	L251
L255:
	.data	1
L256:

	.byte	0x77,0x61,0x72,0x6e,0x69,0x6e,0x67,0x3a
	.byte	0x20,0x61,0x72,0x63,0x68,0x69,0x76,0x65
	.byte	0x20,0x68,0x61,0x73,0x20,0x6e,0x6f,0x20
	.byte	0x74,0x61,0x62,0x6c,0x65,0x20,0x6f,0x66
	.byte	0x20,0x63,0x6f,0x6e,0x74,0x65,0x6e,0x74
	.byte	0x73,0x3b,0x20,0x61,0x64,0x64,0x20,0x6f
	.byte	0x6e,0x65,0x20,0x75,0x73,0x69,0x6e,0x67
	.byte	0x20,0x72,0x61,0x6e,0x6c,0x69,0x62,0x28
	.byte	0x31,0x29,0x0
	.text
	pushl	$L256
	pushl	$-1
	calls	$2,_error
	movl	$8,-4(fp)
	jbr	L259
L260:
	pushl	$2
	pushl	$_archdr+48
	calls	$1,_atol
	pushl	r0
	calls	$2,_round
	addl2	$60,r0
	addl2	r0,-4(fp)
L259:
	pushl	-4(fp)
	calls	$1,_step
	tstl	r0
	jneq	L260
L258:
	jbr	L251
L263:
	movl	$68,-4(fp)
	pushl	$4
	pushl	-4(fp)
	pushl	$_text
	calls	$3,_dseek
	pushl	$_text
	pushl	$4
	pushl	$_tnum
	calls	$3,_mget
	addl2	$4,-4(fp)
	pushl	_tnum
	calls	$1,_malloc
	movl	r0,_tab
	tstl	_tab
	jneq	L267
	.data	1
L268:

	.byte	0x72,0x61,0x6e,0x20,0x6f,0x75,0x74,0x20
	.byte	0x6f,0x66,0x20,0x6d,0x65,0x6d,0x6f,0x72
	.byte	0x79,0x20,0x28,0x74,0x6f,0x63,0x29,0x0
	.text
	pushl	$L268
	pushl	$1
	calls	$2,_error
L267:
	pushl	_tnum
	pushl	-4(fp)
	pushl	$_text
	calls	$3,_dseek
	pushl	$_text
	pushl	_tnum
	pushl	_tab
	calls	$3,_mget
	addl2	_tnum,-4(fp)
	pushl	$8
	pushl	_tnum
	calls	$2,udiv
	movl	r0,_tnum
	pushl	$4
	pushl	-4(fp)
	pushl	$_text
	calls	$3,_dseek
	pushl	$_text
	pushl	$4
	pushl	$_ssiz
	calls	$3,_mget
	addl2	$4,-4(fp)
	pushl	_ssiz
	calls	$1,_malloc
	movl	r0,_tabstr
	tstl	_tabstr
	jneq	L269
	.data	1
L270:

	.byte	0x72,0x61,0x6e,0x20,0x6f,0x75,0x74,0x20
	.byte	0x6f,0x66,0x20,0x6d,0x65,0x6d,0x6f,0x72
	.byte	0x79,0x20,0x28,0x74,0x6f,0x63,0x73,0x74
	.byte	0x72,0x29,0x0
	.text
	pushl	$L270
	pushl	$1
	calls	$2,_error
L269:
	pushl	_ssiz
	pushl	-4(fp)
	pushl	$_text
	calls	$3,_dseek
	pushl	$_text
	pushl	_ssiz
	pushl	_tabstr
	calls	$3,_mget
	addl3	_tnum,_tnum,r0
	addl2	r0,r0
	addl2	r0,r0
	addl3	_tab,r0,r10
	jbr	L273
L274:
	tstl	(r10)
	jlss	L276
	cmpl	(r10),_ssiz
	jlss	L275
L276:
	.data	1
L277:

	.byte	0x6d,0x61,0x6e,0x67,0x6c,0x65,0x64,0x20
	.byte	0x61,0x72,0x63,0x68,0x69,0x76,0x65,0x20
	.byte	0x74,0x61,0x62,0x6c,0x65,0x20,0x6f,0x66
	.byte	0x20,0x63,0x6f,0x6e,0x74,0x65,0x6e,0x74
	.byte	0x73,0x0
	.text
	pushl	$L277
	pushl	$1
	calls	$2,_error
L275:
	addl2	_tabstr,(r10)
L273:
	subl2	$8,r10
	cmpl	r10,_tab
	jgequ	L274
L272:
	jbr	L280
L281:
	jbr	L280
L280:
	calls	$0,_ldrand
	tstl	r0
	jneq	L281
L279:
	pushl	_tab
	calls	$1,_cfree
	pushl	_tabstr
	calls	$1,_cfree
	pushl	$-1
	calls	$1,_nextlibp
	jbr	L251
L284:
	.data	1
L285:

	.byte	0x77,0x61,0x72,0x6e,0x69,0x6e,0x67,0x3a
	.byte	0x20,0x74,0x61,0x62,0x6c,0x65,0x20,0x6f
	.byte	0x66,0x20,0x63,0x6f,0x6e,0x74,0x65,0x6e
	.byte	0x74,0x73,0x20,0x66,0x6f,0x72,0x20,0x61
	.byte	0x72,0x63,0x68,0x69,0x76,0x65,0x20,0x69
	.byte	0x73,0x20,0x6f,0x75,0x74,0x20,0x6f,0x66
	.byte	0x20,0x64,0x61,0x74,0x65,0x3b,0x20,0x72
	.byte	0x65,0x72,0x75,0x6e,0x20,0x72,0x61,0x6e
	.byte	0x6c,0x69,0x62,0x28,0x31,0x29,0x0
	.text
	pushl	$L285
	pushl	$-1
	calls	$2,_error
	movl	$8,-4(fp)
L288:
	pushl	$2
	pushl	$_archdr+48
	calls	$1,_atol
	pushl	r0
	calls	$2,_round
	addl2	$60,r0
	addl2	r0,-4(fp)
L287:
	pushl	-4(fp)
	calls	$1,_step
	tstl	r0
	jneq	L288
L286:
	jbr	L251
L252:
	casel	r0,$0,$3
L289:
	.word	L253-L289
	.word	L255-L289
	.word	L263-L289
	.word	L284-L289
L290:
L251:
	pushl	_infil
	calls	$1,_close
	.stabs	"kind",0x80,0,4,8
	.stabs	"nloc",0x80,0,4,4
	.stabs	"tp",0x40,0,40,10
	.stabs	"cp",0x40,0,34,11
L247:
	ret
	.set	L.R5,0xc00
	.set	L.SO5,0x8
L292:	.data
	.text
	.align	2
	.globl	_step
_step:
	.word	L.R6
	subl2	$L.SO6,sp
	.stabs	"step",0x24,0,665,_step
	.stabs	"nloc",0xa0,0,4,4
	pushl	$60
	pushl	4(ap)
	pushl	$_text
	calls	$3,_dseek
	tstl	_text+12
	jgtr	L294
	pushl	$-1
	calls	$1,_nextlibp
	clrl	r0
	jbr	L293
L294:
	calls	$0,_getarhdr
	addl3	$60,4(ap),-(sp)
	pushl	$1
	calls	$2,_load1
	tstl	r0
	jeql	L296
	pushl	4(ap)
	calls	$1,_nextlibp
L296:
	movl	$1,r0
	jbr	L293
L293:
	ret
	.set	L.R6,0x0
	.set	L.SO6,0x0
L297:	.data
	.text
	.align	2
	.globl	_nextlibp
_nextlibp:
	.word	L.R7
	subl2	$L.SO7,sp
	.stabs	"nextlibp",0x24,0,685,_nextlibp
	.stabs	"val",0xa0,0,4,4
	movl	_clibseg,r0
	cmpl	4(r0),$250
	jneq	L299
	addl2	$12,_clibseg
	cmpl	_clibseg,$_libseg+480
	jneq	L300
	.data	1
L301:

	.byte	0x74,0x6f,0x6f,0x20,0x6d,0x61,0x6e,0x79
	.byte	0x20,0x66,0x69,0x6c,0x65,0x73,0x20,0x6c
	.byte	0x6f,0x61,0x64,0x65,0x64,0x20,0x66,0x72
	.byte	0x6f,0x6d,0x20,0x6c,0x69,0x62,0x72,0x61
	.byte	0x72,0x69,0x65,0x73,0x0
	.text
	pushl	$L301
	pushl	$1
	calls	$2,_error
L300:
	pushl	$1000
	calls	$1,_malloc
	movl	r0,*_clibseg
	tstl	*_clibseg
	jneq	L302
	.data	1
L303:

	.byte	0x72,0x61,0x6e,0x20,0x6f,0x75,0x74,0x20
	.byte	0x6f,0x66,0x20,0x6d,0x65,0x6d,0x6f,0x72
	.byte	0x79,0x20,0x28,0x6e,0x65,0x78,0x74,0x6c
	.byte	0x69,0x62,0x70,0x29,0x0
	.text
	pushl	$L303
	pushl	$1
	calls	$2,_error
L302:
L299:
	movl	_clibseg,r0
	movl	4(r0),r1
	incl	4(r0)
	movl	*_clibseg,r0
	movl	4(ap),(r0)[r1]
	cmpl	4(ap),$-1
	jeql	L304
	tstl	_Mflag
	jeql	L304
L305:
	.data	1
L306:

	.byte	0x9,0x25,0x73,0xa,0x0
	.text
	pushl	$_archdr
	pushl	$L306
	calls	$2,_printf
L304:
L298:
	ret
	.set	L.R7,0x0
	.set	L.SO7,0x0
L307:	.data
	.text
	.align	2
	.globl	_ldrand
_ldrand:
	.word	L.R8
	subl2	$L.SO8,sp
	.stabs	"ldrand",0x24,0,707,_ldrand
	pushl	_nextsym
	calls	$1,_symx
	movl	r0,-8(fp)
	subl3	$1,_tnum,r0
	addl2	r0,r0
	addl2	r0,r0
	addl2	r0,r0
	addl3	_tab,r0,r8
	movl	_tab,r9
	jbr	L312
L313:
	pushl	(r9)
	calls	$1,_slookup
	movl	r0,r10
	jneq	L314
	jbr	L310
L314:
	movl	(r10),r11
	tstl	r11
	jneq	L315
	jbr	L310
L315:
	cmpb	4(r11),$1
	jeql	L316
	jbr	L310
L316:
	pushl	4(r9)
	calls	$1,_step
	movl	4(r9),-4(fp)
	jbr	L318
L319:
	addl2	$8,r9
L318:
	cmpl	r9,r8
	jgequ	L320
	cmpl	12(r9),-4(fp)
	jeql	L319
L320:
L317:
L310:
	addl2	$8,r9
L312:
	cmpl	r9,r8
	jlequ	L313
L311:
	pushl	_nextsym
	calls	$1,_symx
	cmpl	r0,-8(fp)
	jeql	L321
	movl	$1,r0
	jbr	L322
L321:
	clrl	r0
L322:
	jbr	L308
	.stabs	"nsymt",0x80,0,4,8
	.stabs	"loc",0x80,0,4,4
	.stabs	"tplast",0x40,0,40,8
	.stabs	"tp",0x40,0,40,9
	.stabs	"hp",0x40,0,168,10
	.stabs	"sp",0x40,0,40,11
L308:
	ret
	.set	L.R8,0xf00
	.set	L.SO8,0x8
L323:	.data
	.text
	.align	2
	.globl	_load1
_load1:
	.word	L.R9
	subl2	$L.SO9,sp
	.stabs	"load1",0x24,0,735,_load1
	.stabs	"libflg",0xa0,0,4,4
	.stabs	"loc",0xa0,0,4,8
	pushl	8(ap)
	calls	$1,_readhdr
	tstl	_filhdr+16
	jneq	L326
	addl3	_filhdr+8,_filhdr+4,r0
	jneq	L327
	clrl	r0
	jbr	L324
L327:
	.data	1
L328:

	.byte	0x6e,0x6f,0x20,0x6e,0x61,0x6d,0x65,0x6c
	.byte	0x69,0x73,0x74,0x0
	.text
	pushl	$L328
	pushl	$1
	calls	$2,_error
L326:
	tstl	4(ap)
	jeql	L329
	pushl	$_archdr+48
	calls	$1,_atol
	movl	r0,-28(fp)
	jbr	L330
L329:
	pushal	-60(fp)
	pushl	_infil
	calls	$2,_fstat
	movl	-44(fp),-28(fp)
L330:
	cmpl	_filhdr,$267
	jneq	L333
	movl	$1024,r0
	jbr	L334
L333:
	movl	$32,r0
L334:
	addl2	_filhdr+4,r0
	addl2	_filhdr+8,r0
	addl2	_filhdr+24,r0
	addl2	_filhdr+28,r0
	addl2	_filhdr+16,r0
	addl2	$4,r0
	cmpl	r0,-28(fp)
	jlssu	L332
	.data	1
L335:

	.byte	0x74,0x6f,0x6f,0x20,0x73,0x6d,0x61,0x6c
	.byte	0x6c,0x20,0x28,0x6f,0x6c,0x64,0x20,0x66
	.byte	0x6f,0x72,0x6d,0x61,0x74,0x20,0x2e,0x6f
	.byte	0x3f,0x29,0x0
	.text
	pushl	$L335
	pushl	$1
	calls	$2,_error
L332:
	movl	_tsize,_ctrel
	addl2	_dsize,_cdrel
	addl2	_bsize,_cbrel
	clrl	-8(fp)
	movl	$12,-12(fp)
	movl	_nextsym,-4(fp)
	cmpl	_filhdr,$267
	jneq	L336
	movl	$1024,r0
	jbr	L337
L336:
	movl	$32,r0
L337:
	addl2	_filhdr+4,r0
	addl2	_filhdr+8,r0
	addl2	_filhdr+24,r0
	addl2	_filhdr+28,r0
	addl2	r0,8(ap)
	pushl	_filhdr+16
	pushl	8(ap)
	pushl	$_text
	calls	$3,_dseek
	pushl	$4
	addl3	_filhdr+16,8(ap),-(sp)
	pushl	$_reloc
	calls	$3,_dseek
	pushl	$_reloc
	pushl	$4
	pushal	-20(fp)
	calls	$3,_mget
	subl3	$4,-20(fp),-(sp)
	addl3	_filhdr+16,8(ap),r0
	addl3	$4,r0,-(sp)
	pushl	$_reloc
	calls	$3,_dseek
	pushl	-20(fp)
	calls	$1,_malloc
	movl	r0,_curstr
	tstl	_curstr
	jneq	L338
	.data	1
L339:

	.byte	0x6e,0x6f,0x20,0x73,0x70,0x61,0x63,0x65
	.byte	0x20,0x66,0x6f,0x72,0x20,0x73,0x74,0x72
	.byte	0x69,0x6e,0x67,0x20,0x74,0x61,0x62,0x6c
	.byte	0x65,0x0
	.text
	pushl	$L339
	pushl	$1
	calls	$2,_error
L338:
	pushl	$_reloc
	subl3	$4,-20(fp),-(sp)
	addl3	$4,_curstr,-(sp)
	calls	$3,_mget
	jbr	L341
L342:
	pushl	$_text
	pushl	$12
	pushl	$_cursym
	calls	$3,_mget
	tstl	_cursym
	jeql	L343
	cmpl	_cursym,$4
	jlssu	L345
	cmpl	_cursym,-20(fp)
	jlss	L344
L345:
	.data	1
L346:

	.byte	0x62,0x61,0x64,0x20,0x73,0x74,0x72,0x69
	.byte	0x6e,0x67,0x20,0x74,0x61,0x62,0x6c,0x65
	.byte	0x20,0x69,0x6e,0x64,0x65,0x78,0x20,0x28
	.byte	0x70,0x61,0x73,0x73,0x20,0x31,0x29,0x0
	.text
	pushl	$L346
	pushl	$1
	calls	$2,_error
L344:
	addl2	_curstr,_cursym
L343:
	movzbl	_cursym+4,-16(fp)
	bitl	$1,-16(fp)
	jneq	L347
	tstl	_Xflag
	jeql	L349
	cmpb	*_cursym,$76
	jneq	L349
L350:
	bitl	$224,-16(fp)
	jeql	L348
L349:
	addl2	$12,-12(fp)
L348:
	jbr	L341
L347:
	calls	$0,_symreloc
	calls	$0,_lookup
	pushl	r0
	calls	$1,_enter
	tstl	r0
	jeql	L352
	jbr	L341
L352:
	movl	_lastsym,r11
	cmpb	4(r11),$1
	jeql	L353
	jbr	L341
L353:
	cmpb	_cursym+4,$1
	jneq	L354
	cmpl	_cursym+8,8(r11)
	jlequ	L355
	movl	_cursym+8,8(r11)
L355:
	jbr	L341
L354:
	tstl	8(r11)
	jeql	L356
	cmpb	_cursym+4,$5
	jneq	L356
L357:
	jbr	L341
L356:
	incl	-8(fp)
	movb	_cursym+4,4(r11)
	movl	_cursym+8,8(r11)
L341:
	tstl	_text+12
	jgtr	L342
L340:
	tstl	4(ap)
	jeql	L359
	tstl	-8(fp)
	jeql	L358
L359:
	addl2	_filhdr+4,_tsize
	pushl	$4
	pushl	_filhdr+8
	calls	$2,_round
	addl2	r0,_dsize
	pushl	$4
	pushl	_filhdr+12
	calls	$2,_round
	addl2	r0,_bsize
	addl2	-12(fp),_ssize
	addl2	_filhdr+24,_trsize
	addl2	_filhdr+28,_drsize
	tstl	_funding
	jeql	L360
	.data	1
L361:

	.byte	0x5f,0x65,0x6e,0x64,0x0
	.text
	pushl	$L361
	calls	$1,_slookup
	movl	(r0),r0
	movl	8(r0),_textbase
L360:
	pushl	_nextsym
	calls	$1,_symx
	movl	r0,-24(fp)
	pushl	-4(fp)
	calls	$1,_symx
	movl	r0,r10
	jbr	L364
L365:
	divl3	$1103,r10,r0
	mull2	$20,r0
	divl3	$1103,r10,r1
	mull2	$1103,r1
	subl3	r1,r10,r1
	mull2	$12,r1
	addl3	r1,_symseg(r0),r11
	pushl	(r11)
	calls	$1,_savestr
	movl	r0,(r11)
	incl	r10
L364:
	cmpl	r10,-24(fp)
	jlss	L365
L363:
	pushl	_curstr
	calls	$1,_free
	movl	$1,r0
	jbr	L324
L358:
	pushl	-4(fp)
	calls	$1,_symfree
	pushl	_curstr
	calls	$1,_free
	clrl	r0
	jbr	L324
	.stabs	"stb",0x80,0,8,60
	.stabs	"maxoff",0x80,0,4,28
	.stabs	"i",0x40,0,4,10
	.stabs	"nsymt",0x80,0,4,24
	.stabs	"size",0x80,0,4,20
	.stabs	"type",0x80,0,4,16
	.stabs	"nlocal",0x80,0,4,12
	.stabs	"ndef",0x80,0,4,8
	.stabs	"savnext",0x80,0,40,4
	.stabs	"sp",0x40,0,40,11
L324:
	ret
	.set	L.R9,0xc00
	.set	L.SO9,0x3c
L368:	.data
	.text
	.align	2
	.globl	_middle
_middle:
	.word	L.R10
	subl2	$L.SO10,sp
	.stabs	"middle",0x24,0,828,_middle
	clrl	_torigin
	clrl	_dorigin
	clrl	_borigin
	.data	1
L370:

	.byte	0x5f,0x65,0x74,0x65,0x78,0x74,0x0
	.text
	pushl	$L370
	calls	$1,_slookup
	movl	(r0),_p_etext
	.data	1
L371:

	.byte	0x5f,0x65,0x64,0x61,0x74,0x61,0x0
	.text
	pushl	$L371
	calls	$1,_slookup
	movl	(r0),_p_edata
	.data	1
L372:

	.byte	0x5f,0x65,0x6e,0x64,0x0
	.text
	pushl	$L372
	calls	$1,_slookup
	movl	(r0),_p_end
	pushl	_nextsym
	calls	$1,_symx
	movl	r0,-32(fp)
	tstl	_rflag
	jneq	L373
	clrl	r10
	jbr	L376
L377:
	divl3	$1103,r10,r0
	mull2	$20,r0
	divl3	$1103,r10,r1
	mull2	$1103,r1
	subl3	r1,r10,r1
	mull2	$12,r1
	addl3	r1,_symseg(r0),r11
	cmpb	4(r11),$1
	jneq	L378
	tstl	8(r11)
	jneq	L378
L382:
	cmpl	r11,_p_end
	jeql	L378
L381:
	cmpl	r11,_p_edata
	jeql	L378
L380:
	cmpl	r11,_p_etext
	jeql	L378
L379:
	incl	_rflag
	clrl	_dflag
	jbr	L375
L378:
	incl	r10
L376:
	cmpl	r10,-32(fp)
	jlss	L377
L375:
L373:
	tstl	_rflag
	jeql	L383
	clrl	_zflag
	movl	_zflag,_sflag
L383:
	clrl	-4(fp)
	tstl	_Aflag
	jneq	L384
	movl	_symseg,_addsym
L384:
	tstl	_nflag
	jneq	L387
	tstl	_zflag
	jeql	L385
L387:
	movl	$1024,-(sp)
	jbr	L386
L385:
	movl	$4,-(sp)
L386:
	addl3	_textbase,_tsize,-(sp)
	calls	$2,_round
	movl	r0,_database
	addl2	_hsize,_database
	tstl	_dflag
	jneq	L389
	tstl	_rflag
	jneq	L388
L389:
	pushl	$5
	pushl	_tsize
	pushl	_p_etext
	calls	$3,_ldrsym
	pushl	$7
	pushl	_dsize
	pushl	_p_edata
	calls	$3,_ldrsym
	pushl	$9
	pushl	_bsize
	pushl	_p_end
	calls	$3,_ldrsym
	pushl	_addsym
	calls	$1,_symx
	movl	r0,r10
	jbr	L393
L394:
	divl3	$1103,r10,r0
	mull2	$20,r0
	divl3	$1103,r10,r1
	mull2	$1103,r1
	subl3	r1,r10,r1
	mull2	$12,r1
	addl3	r1,_symseg(r0),r11
	movb	4(r11),-25(fp)
	cmpb	-25(fp),$1
	jneq	L395
	movl	8(r11),-8(fp)
	jeql	L395
L396:
	cmpl	-8(fp),$8
	jlssu	L397
	movl	$8,-24(fp)
	jbr	L398
L397:
	cmpl	-8(fp),$4
	jlssu	L399
	movl	$4,-24(fp)
	jbr	L400
L399:
	movl	$2,-24(fp)
L400:
L398:
	pushl	-24(fp)
	pushl	-4(fp)
	calls	$2,_round
	movl	r0,-4(fp)
	movl	-4(fp),8(r11)
	movb	$19,4(r11)
	movl	-4(fp),-16(fp)
	addl2	-8(fp),-4(fp)
L395:
	bitb	$1,-25(fp)
	jeql	L401
	bitb	$30,-25(fp)
	jneq	L401
L403:
	bitb	$224,-25(fp)
	jeql	L401
L402:
	movl	-16(fp),8(r11)
	bicb3	$-225,-25(fp),r0
	bisb3	$19,r0,4(r11)
L401:
	incl	r10
L393:
	cmpl	r10,-32(fp)
	jlss	L394
L392:
L388:
	pushl	$4
	pushl	-4(fp)
	calls	$2,_round
	movl	r0,-4(fp)
	movl	_textbase,_torigin
	movl	_database,_dorigin
	addl3	_dsize,_dorigin,-12(fp)
	addl3	-4(fp),-12(fp),_borigin
	clrl	-20(fp)
	pushl	_nextsym
	calls	$1,_symx
	movl	r0,-32(fp)
	pushl	_addsym
	calls	$1,_symx
	movl	r0,r10
	jbr	L406
L407:
	divl3	$1103,r10,r0
	mull2	$20,r0
	divl3	$1103,r10,r1
	mull2	$1103,r1
	subl3	r1,r10,r1
	mull2	$12,r1
	addl3	r1,_symseg(r0),r11
	movzbl	4(r11),r0
	bicl2	$-32,r0
	jbr	L409
L410:
	tstl	_arflag
	jneq	L411
	bisl2	$1,_errlev
L411:
	tstl	_arflag
	jeql	L414
	tstl	_dflag
	jeql	L412
L414:
	tstl	8(r11)
	jneq	L412
L413:
	cmpl	r11,_p_end
	jeql	L416
	cmpl	r11,_p_etext
	jeql	L416
L417:
	cmpl	r11,_p_edata
	jneq	L415
L416:
	jbr	L404
L415:
	tstl	-20(fp)
	jneq	L418
	.data	1
L419:

	.byte	0x55,0x6e,0x64,0x65,0x66,0x69,0x6e,0x65
	.byte	0x64,0x3a,0xa,0x0
	.text
	pushl	$L419
	calls	$1,_printf
L418:
	incl	-20(fp)
	.data	1
L420:

	.byte	0x25,0x73,0xa,0x0
	.text
	pushl	(r11)
	pushl	$L420
	calls	$2,_printf
L412:
	jbr	L404
L421:
L422:
	jbr	L404
L423:
	addl2	_torigin,8(r11)
	jbr	L404
L424:
	addl2	_dorigin,8(r11)
	jbr	L404
L425:
	addl2	_borigin,8(r11)
	jbr	L404
L426:
	bicb3	$-225,4(r11),r0
	bisb3	$9,r0,4(r11)
	addl2	-12(fp),8(r11)
	jbr	L404
L409:
	casel	r0,$1,$18
L427:
	.word	L410-L427
	.word	L422-L427
	.word	L421-L427
	.word	L422-L427
	.word	L423-L427
	.word	L422-L427
	.word	L424-L427
	.word	L422-L427
	.word	L425-L427
	.word	L422-L427
	.word	L422-L427
	.word	L422-L427
	.word	L422-L427
	.word	L422-L427
	.word	L422-L427
	.word	L422-L427
	.word	L422-L427
	.word	L422-L427
	.word	L426-L427
	jbr	L422
L408:
L404:
	incl	r10
L406:
	cmpl	r10,-32(fp)
	jlss	L407
L405:
	tstl	_sflag
	jneq	L429
	tstl	_xflag
	jeql	L428
L429:
	clrl	_ssize
L428:
	addl2	-4(fp),_bsize
	pushl	$12
	pushl	_ssize
	calls	$2,udiv
	movl	r0,_nsym
	tstl	_Aflag
	jeql	L430
	pushl	_torigin
	pushl	_p_etext
	calls	$2,_fixspec
	pushl	_dorigin
	pushl	_p_edata
	calls	$2,_fixspec
	pushl	_borigin
	pushl	_p_end
	calls	$2,_fixspec
L430:
	.stabs	"nsymt",0x80,0,4,32
	.stabs	"i",0x40,0,4,10
	.stabs	"s",0x80,0,2,25
	.stabs	"rnd",0x80,0,4,24
	.stabs	"nund",0x80,0,4,20
	.stabs	"ocsize",0x80,0,4,16
	.stabs	"corigin",0x80,0,4,12
	.stabs	"t",0x80,0,4,8
	.stabs	"csize",0x80,0,4,4
	.stabs	"sp",0x40,0,40,11
L369:
	ret
	.set	L.R10,0xc00
	.set	L.SO10,0x20
L432:	.data
	.text
	.align	2
	.globl	_fixspec
_fixspec:
	.word	L.R11
	subl2	$L.SO11,sp
	.stabs	"fixspec",0x24,0,953,_fixspec
	.stabs	"sym",0xa0,0,40,4
	.stabs	"offset",0xa0,0,4,8
	pushl	4(ap)
	calls	$1,_symx
	movl	r0,r11
	pushl	_addsym
	calls	$1,_symx
	cmpl	r11,r0
	jgeq	L434
	tstl	4(ap)
	jeql	L434
L435:
	movl	4(ap),r0
	addl2	8(ap),8(r0)
L434:
L433:
	ret
	.set	L.R11,0x800
	.set	L.SO11,0x0
L436:	.data
	.text
	.align	2
	.globl	_ldrsym
_ldrsym:
	.word	L.R12
	subl2	$L.SO12,sp
	.stabs	"ldrsym",0x24,0,962,_ldrsym
	.stabs	"sp",0xa0,0,40,4
	.stabs	"val",0xa0,0,4,8
	.stabs	"type",0xa0,0,4,12
	movl	4(ap),r11
	tstl	r11
	jneq	L438
	jbr	L437
L438:
	cmpb	4(r11),$1
	jneq	L441
	tstl	8(r11)
	jeql	L439
L441:
	tstl	_Aflag
	jneq	L439
L440:
	.data	1
L442:

	.byte	0x25,0x73,0x3a,0x20,0x0
	.text
	pushl	(r11)
	pushl	$L442
	calls	$2,_printf
	.data	1
L443:

	.byte	0x75,0x73,0x65,0x72,0x20,0x61,0x74,0x74
	.byte	0x65,0x6d,0x70,0x74,0x20,0x74,0x6f,0x20
	.byte	0x72,0x65,0x64,0x65,0x66,0x69,0x6e,0x65
	.byte	0x20,0x6c,0x6f,0x61,0x64,0x65,0x72,0x2d
	.byte	0x64,0x65,0x66,0x69,0x6e,0x65,0x64,0x20
	.byte	0x73,0x79,0x6d,0x62,0x6f,0x6c,0x0
	.text
	pushl	$L443
	pushl	$0
	calls	$2,_error
	jbr	L437
L439:
	movb	12(ap),4(r11)
	movl	8(ap),8(r11)
	.stabs	"sp",0x40,0,40,11
L437:
	ret
	.set	L.R12,0x800
	.set	L.SO12,0x0
L444:	.data
	.comm	_wroff,4
	.comm	_toutb,4112
	.text
	.align	2
	.globl	_setupout
_setupout:
	.word	L.R13
	subl2	$L.SO13,sp
	.stabs	"setupout",0x24,0,979,_setupout
	pushl	$0
	calls	$1,_umask
	mcoml	r0,r0
	bicl3	$-512,r0,_ofilemode
	bicl3	$-439,_ofilemode,-(sp)
	pushl	_ofilename
	calls	$2,_creat
	movl	r0,_biofd
	tstl	_biofd
	jgeq	L452
	movl	_ofilename,_filname
	clrb	_archdr
	movl	_errno,r0
	pushl	_sys_errlist[r0]
	pushl	$1
	calls	$2,_error
	jbr	L453
L452:
	pushal	-36(fp)
	pushl	_biofd
	calls	$2,_fstat
	bitw	$73,-32(fp)
	jeql	L454
	movzwl	-32(fp),r0
	bicl3	$-439,r0,-(sp)
	pushl	_ofilename
	calls	$2,_chmod
	movzwl	-32(fp),_ofilemode
L454:
	.stabs	"mybuf",0x80,0,8,36
L453:
	movl	$_toutb,_tout
	pushl	$0
	pushl	_tout
	calls	$2,_bopen
	tstl	_nflag
	jeql	L456
	movl	$264,r0
	jbr	L457
L456:
	tstl	_zflag
	jeql	L458
	movl	$267,r0
	jbr	L459
L458:
	movl	$263,r0
L459:
L457:
	movl	r0,_filhdr
	tstl	_nflag
	jeql	L460
	movl	_tsize,r0
	jbr	L461
L460:
	tstl	_zflag
	jeql	L462
	movl	$1024,-(sp)
	jbr	L463
L462:
	movl	$4,-(sp)
L463:
	pushl	_tsize
	calls	$2,_round
L461:
	movl	r0,_filhdr+4
	tstl	_zflag
	jeql	L464
	pushl	$1024
	pushl	_dsize
	calls	$2,_round
	jbr	L465
L464:
	movl	_dsize,r0
L465:
	movl	r0,_filhdr+8
	subl3	_dsize,_filhdr+8,r0
	subl3	r0,_bsize,-4(fp)
	tstl	-4(fp)
	jgeq	L466
	clrl	-4(fp)
L466:
	movl	-4(fp),_filhdr+12
	movl	_trsize,_filhdr+24
	movl	_drsize,_filhdr+28
	tstl	_sflag
	jeql	L467
	clrl	r0
	jbr	L468
L467:
	pushl	_nextsym
	calls	$1,_symx
	mull2	$12,r0
	addl2	_ssize,r0
L468:
	movl	r0,_filhdr+16
	tstl	_entrypt
	jeql	L469
	movl	_entrypt,r0
	cmpb	4(r0),$5
	jeql	L470
	.data	1
L471:

	.byte	0x65,0x6e,0x74,0x72,0x79,0x20,0x70,0x6f
	.byte	0x69,0x6e,0x74,0x20,0x6e,0x6f,0x74,0x20
	.byte	0x69,0x6e,0x20,0x74,0x65,0x78,0x74,0x0
	.text
	pushl	$L471
	pushl	$0
	calls	$2,_error
	jbr	L472
L470:
	movl	_entrypt,r0
	movl	8(r0),_filhdr+20
L472:
	jbr	L473
L469:
	clrl	_filhdr+20
L473:
	tstl	_rflag
	jeql	L474
	movl	_trsize,r0
	jbr	L475
L474:
	clrl	r0
L475:
	movl	r0,_filhdr+24
	tstl	_rflag
	jeql	L476
	movl	_drsize,r0
	jbr	L477
L476:
	clrl	r0
L477:
	movl	r0,_filhdr+28
	pushl	_tout
	pushl	$32
	pushl	$_filhdr
	calls	$3,_bwrite
	tstl	_zflag
	jeql	L479
	pushl	_tout
	calls	$1,_bflush1
	clrl	_biobufs
	pushl	$1024
	pushl	_tout
	calls	$2,_bopen
L479:
	cmpl	_filhdr,$267
	jneq	L481
	movl	$1024,r0
	jbr	L482
L481:
	movl	$32,r0
L482:
	addl3	_filhdr+4,r0,_wroff
	pushl	_filhdr+8
	pushl	$_dout
	calls	$2,_outb
	tstl	_rflag
	jeql	L484
	pushl	_filhdr+24
	pushl	$_trout
	calls	$2,_outb
	pushl	_filhdr+28
	pushl	$_drout
	calls	$2,_outb
L484:
	tstl	_sflag
	jeql	L486
	tstl	_xflag
	jneq	L485
L486:
	pushl	_filhdr+16
	pushl	$_sout
	calls	$2,_outb
	addl2	$4,_wroff
	pushl	$0
	pushl	$_strout
	calls	$2,_outb
L485:
	.stabs	"bss",0x80,0,4,4
L447:
	ret
	.set	L.R13,0x0
	.set	L.SO13,0x24
L487:	.data
	.text
	.align	2
	.globl	_outb
_outb:
	.word	L.R14
	subl2	$L.SO14,sp
	.stabs	"outb",0x24,0,1041,_outb
	.stabs	"bp",0xa0,0,168,4
	.stabs	"inc",0xa0,0,4,8
	movl	4(ap),r11
	pushl	$4112
	calls	$1,_malloc
	movl	r0,(r11)
	tstl	(r11)
	jneq	L489
	.data	1
L490:

	.byte	0x72,0x61,0x6e,0x20,0x6f,0x75,0x74,0x20
	.byte	0x6f,0x66,0x20,0x6d,0x65,0x6d,0x6f,0x72
	.byte	0x79,0x20,0x28,0x6f,0x75,0x74,0x62,0x29
	.byte	0x0
	.text
	pushl	$L490
	pushl	$1
	calls	$2,_error
L489:
	pushl	_wroff
	pushl	(r11)
	calls	$2,_bopen
	addl2	8(ap),_wroff
	.stabs	"bp",0x40,0,168,11
L488:
	ret
	.set	L.R14,0x800
	.set	L.SO14,0x0
L491:	.data
	.text
	.align	2
	.globl	_load2arg
_load2arg:
	.word	L.R15
	subl2	$L.SO15,sp
	.stabs	"load2arg",0x24,0,1052,_load2arg
	.stabs	"acp",0xa0,0,34,4
	movl	4(ap),r11
	pushl	r11
	calls	$1,_getfile
	tstl	r0
	jneq	L493
	jbr	L495
L496:
	incl	r11
L495:
	tstb	(r11)
	jneq	L496
L494:
	jbr	L498
L499:
L498:
	cmpl	r11,4(ap)
	jlssu	L500
	decl	r11
	cmpb	(r11),$47
	jneq	L499
L500:
L497:
	addl2	$1,r11
	pushl	r11
	calls	$1,_mkfsym
	pushl	$0
	calls	$1,_load2
	jbr	L503
L493:
L506:
	movl	_clibseg,r0
	movl	_clibseg,r1
	cmpl	8(r0),4(r1)
	jneq	L507
	movl	_clibseg,r0
	cmpl	4(r0),$250
	jgeq	L508
	.data	1
L509:

	.byte	0x6c,0x69,0x62,0x73,0x65,0x67,0x20,0x62
	.byte	0x6f,0x74,0x63,0x68,0x0
	.text
	pushl	$L509
	pushl	$1
	calls	$2,_error
L508:
	addl2	$12,_clibseg
L507:
	movl	_clibseg,r0
	movl	8(r0),r1
	incl	8(r0)
	movl	*_clibseg,r0
	movl	(r0)[r1],-4(fp)
	cmpl	-4(fp),$-1
	jneq	L510
	jbr	L505
L510:
	pushl	$60
	pushl	-4(fp)
	pushl	$_text
	calls	$3,_dseek
	calls	$0,_getarhdr
	pushl	$_archdr
	calls	$1,_mkfsym
	addl3	$60,-4(fp),-(sp)
	calls	$1,_load2
	jbr	L506
L505:
L503:
	pushl	_infil
	calls	$1,_close
	.stabs	"loc",0x80,0,4,4
	.stabs	"cp",0x40,0,34,11
L492:
	ret
	.set	L.R15,0x800
	.set	L.SO15,0x4
L511:	.data
	.text
	.align	2
	.globl	_load2
_load2:
	.word	L.R16
	subl2	$L.SO16,sp
	.stabs	"load2",0x24,0,1084,_load2
	.stabs	"loc",0xa0,0,4,4
	pushl	4(ap)
	calls	$1,_readhdr
	tstl	_funding
	jneq	L513
	movl	_torigin,_ctrel
	addl2	_dorigin,_cdrel
	addl2	_borigin,_cbrel
L513:
	clrl	r8
	jbr	L516
L517:
	clrl	_lochash[r8]
	incl	r8
L516:
	cmpl	r8,$31
	jlss	L517
L515:
	movl	$_locseg,_clocseg
	movl	_clocseg,r0
	clrl	4(r0)
	movl	$-1,r9
	cmpl	_filhdr,$267
	jneq	L518
	movl	$1024,r0
	jbr	L519
L518:
	movl	$32,r0
L519:
	addl2	r0,4(ap)
	pushl	$4
	addl3	_filhdr+4,4(ap),r0
	addl2	_filhdr+8,r0
	addl2	_filhdr+24,r0
	addl2	_filhdr+28,r0
	addl3	_filhdr+16,r0,-(sp)
	pushl	$_text
	calls	$3,_dseek
	pushl	$_text
	pushl	$4
	pushal	-4(fp)
	calls	$3,_mget
	subl3	$4,-4(fp),-(sp)
	addl3	_filhdr+4,4(ap),r0
	addl2	_filhdr+8,r0
	addl2	_filhdr+24,r0
	addl2	_filhdr+28,r0
	addl2	_filhdr+16,r0
	addl3	$4,r0,-(sp)
	pushl	$_text
	calls	$3,_dseek
	pushl	-4(fp)
	calls	$1,_malloc
	movl	r0,_curstr
	tstl	_curstr
	jneq	L520
	.data	1
L521:

	.byte	0x6f,0x75,0x74,0x20,0x6f,0x66,0x20,0x73
	.byte	0x70,0x61,0x63,0x65,0x20,0x72,0x65,0x61
	.byte	0x64,0x69,0x6e,0x67,0x20,0x73,0x74,0x72
	.byte	0x69,0x6e,0x67,0x20,0x74,0x61,0x62,0x6c
	.byte	0x65,0x20,0x28,0x70,0x61,0x73,0x73,0x20
	.byte	0x32,0x29,0x0
	.text
	pushl	$L521
	pushl	$1
	calls	$2,_error
L520:
	pushl	$_text
	subl3	$4,-4(fp),-(sp)
	addl3	$4,_curstr,-(sp)
	calls	$3,_mget
	pushl	_filhdr+16
	addl3	_filhdr+4,4(ap),r0
	addl2	_filhdr+8,r0
	addl2	_filhdr+24,r0
	addl3	_filhdr+28,r0,-(sp)
	pushl	$_text
	calls	$3,_dseek
	jbr	L523
L524:
	incl	r9
	pushl	$_text
	pushl	$12
	pushl	$_cursym
	calls	$3,_mget
	tstl	_cursym
	jeql	L525
	cmpl	_cursym,$4
	jlssu	L527
	cmpl	_cursym,-4(fp)
	jlss	L526
L527:
	.data	1
L528:

	.byte	0x62,0x61,0x64,0x20,0x73,0x74,0x72,0x69
	.byte	0x6e,0x67,0x20,0x74,0x61,0x62,0x6c,0x65
	.byte	0x20,0x69,0x6e,0x64,0x65,0x78,0x20,0x28
	.byte	0x70,0x61,0x73,0x73,0x20,0x32,0x29,0x0
	.text
	pushl	$L528
	pushl	$1
	calls	$2,_error
L526:
	addl2	_curstr,_cursym
L525:
	movzbl	_cursym+4,r0
	bicl2	$-16,r0
	jbr	L530
L531:
L532:
	addl2	_ctrel,_cursym+8
	jbr	L529
L533:
L534:
	addl2	_cdrel,_cursym+8
	jbr	L529
L535:
L536:
	addl2	_cbrel,_cursym+8
	jbr	L529
L537:
	jbr	L529
L538:
	bitb	$1,_cursym+4
	jeql	L539
	movb	$3,_cursym+4
L539:
	jbr	L529
L530:
	casel	r0,$1,$8
L540:
	.word	L537-L540
	.word	L538-L540
	.word	L538-L540
	.word	L531-L540
	.word	L532-L540
	.word	L533-L540
	.word	L534-L540
	.word	L535-L540
	.word	L536-L540
	jbr	L538
L529:
	movzbl	_cursym+4,-8(fp)
	tstl	_yflag
	jeql	L541
	tstl	_cursym
	jeql	L541
L542:
	clrl	r8
	jbr	L545
L546:
	movl	*_ytab[r8],r0
	movl	_cursym,r1
	cmpb	1(r0),1(r1)
	jneq	L548
	pushl	_cursym
	pushl	*_ytab[r8]
	calls	$2,_strcmp
	tstl	r0
	jneq	L548
L549:
	calls	$0,_tracesym
	jbr	L544
L548:
	incl	r8
L545:
	cmpl	r8,_yflag
	jlss	L546
L544:
L541:
	bitl	$1,-8(fp)
	jneq	L551
	tstl	_sflag
	jneq	L552
	tstl	_xflag
	jneq	L552
L554:
	tstl	_Xflag
	jeql	L555
	cmpb	*_cursym,$76
	jneq	L555
L556:
	bitl	$224,-8(fp)
	jeql	L552
L555:
L553:
	pushl	_sout
	pushl	$_cursym
	calls	$2,_symwrite
L552:
	jbr	L523
L551:
	tstl	_funding
	jeql	L558
	jbr	L523
L558:
	calls	$0,_lookup
	movl	(r0),r11
	jneq	L559
	.data	1
L560:

	.byte	0x69,0x6e,0x74,0x65,0x72,0x6e,0x61,0x6c
	.byte	0x20,0x65,0x72,0x72,0x6f,0x72,0x3a,0x20
	.byte	0x73,0x79,0x6d,0x62,0x6f,0x6c,0x20,0x6e
	.byte	0x6f,0x74,0x20,0x66,0x6f,0x75,0x6e,0x64
	.byte	0x0
	.text
	pushl	$L560
	pushl	$1
	calls	$2,_error
L559:
	cmpb	_cursym+4,$1
	jneq	L561
	movl	_clocseg,r0
	cmpl	4(r0),$100
	jneq	L562
	addl2	$8,_clocseg
	cmpl	_clocseg,$_locseg+320
	jneq	L563
	.data	1
L564:

	.byte	0x6c,0x6f,0x63,0x61,0x6c,0x20,0x73,0x79
	.byte	0x6d,0x62,0x6f,0x6c,0x20,0x6f,0x76,0x65
	.byte	0x72,0x66,0x6c,0x6f,0x77,0x0
	.text
	pushl	$L564
	pushl	$1
	calls	$2,_error
L563:
	movl	_clocseg,r0
	clrl	4(r0)
L562:
	tstl	*_clocseg
	jneq	L565
	pushl	$1200
	calls	$1,_malloc
	movl	r0,*_clocseg
	tstl	*_clocseg
	jneq	L566
	.data	1
L567:

	.byte	0x6f,0x75,0x74,0x20,0x6f,0x66,0x20,0x6d
	.byte	0x65,0x6d,0x6f,0x72,0x79,0x20,0x28,0x63
	.byte	0x6c,0x6f,0x63,0x73,0x65,0x67,0x29,0x0
	.text
	pushl	$L567
	pushl	$1
	calls	$2,_error
L566:
L565:
	movl	_clocseg,r0
	movl	4(r0),r1
	incl	4(r0)
	mull2	$12,r1
	addl3	*_clocseg,r1,r10
	movl	r9,(r10)
	movl	r11,4(r10)
	divl3	$31,r9,r0
	mull2	$31,r0
	subl3	r0,r9,r0
	movl	_lochash[r0],8(r10)
	divl3	$31,r9,r0
	mull2	$31,r0
	subl3	r0,r9,r0
	movl	r10,_lochash[r0]
	jbr	L523
L561:
	bitb	$224,_cursym+4
	jeql	L568
	jbr	L523
L568:
	cmpb	_cursym+4,4(r11)
	jneq	L570
	cmpl	_cursym+8,8(r11)
	jeql	L569
L570:
	.data	1
L571:

	.byte	0x25,0x73,0x3a,0x20,0x0
	.text
	pushl	_cursym
	pushl	$L571
	calls	$2,_printf
	.data	1
L572:

	.byte	0x6d,0x75,0x6c,0x74,0x69,0x70,0x6c,0x79
	.byte	0x20,0x64,0x65,0x66,0x69,0x6e,0x65,0x64
	.byte	0x0
	.text
	pushl	$L572
	pushl	$0
	calls	$2,_error
L569:
L523:
	tstl	_text+12
	jgtr	L524
L522:
	tstl	_funding
	jeql	L573
	jbr	L512
L573:
	pushl	_filhdr+4
	pushl	4(ap)
	pushl	$_text
	calls	$3,_dseek
	pushl	_filhdr+24
	addl3	_filhdr+4,4(ap),r0
	addl3	_filhdr+8,r0,-(sp)
	pushl	$_reloc
	calls	$3,_dseek
	pushl	_trout
	pushl	_tout
	subl3	_textbase,_torigin,-(sp)
	pushl	_ctrel
	calls	$4,_load2td
	pushl	_filhdr+8
	addl3	_filhdr+4,4(ap),-(sp)
	pushl	$_text
	calls	$3,_dseek
	pushl	_filhdr+28
	addl3	_filhdr+4,4(ap),r0
	addl2	_filhdr+8,r0
	addl3	_filhdr+24,r0,-(sp)
	pushl	$_reloc
	calls	$3,_dseek
	pushl	_drout
	pushl	_dout
	subl3	_database,_dorigin,-(sp)
	pushl	_cdrel
	calls	$4,_load2td
	jbr	L576
L577:
	tstw	*_dout
	jeql	L578
	decw	*_dout
	clrb	r0
	movl	_dout,r1
	movl	4(r1),r2
	incl	4(r1)
	movb	r0,(r2)
	jbr	L579
L578:
	pushl	$0
	pushl	_dout
	calls	$2,_bflushc
L579:
	incl	_filhdr+8
L576:
	bitl	$3,_filhdr+8
	jneq	L577
L575:
	addl2	_filhdr+4,_torigin
	pushl	$4
	pushl	_filhdr+8
	calls	$2,_round
	addl2	r0,_dorigin
	pushl	$4
	pushl	_filhdr+12
	calls	$2,_round
	addl2	r0,_borigin
	pushl	_curstr
	calls	$1,_free
	.stabs	"type",0x80,0,4,8
	.stabs	"i",0x40,0,4,8
	.stabs	"symno",0x40,0,4,9
	.stabs	"lp",0x40,0,40,10
	.stabs	"sp",0x40,0,40,11
	.stabs	"size",0x80,0,4,4
L512:
	ret
	.set	L.R16,0xf00
	.set	L.SO16,0x8
L580:	.data
	.data
	.align	2
	.globl	_tynames
_tynames:
	.long	0
	.data	2
L582:

	.byte	0x75,0x6e,0x64,0x65,0x66,0x69,0x6e,0x65
	.byte	0x64,0x0
	.data
	.long	L582
	.long	2
	.data	2
L583:

	.byte	0x61,0x62,0x73,0x6f,0x6c,0x75,0x74,0x65
	.byte	0x0
	.data
	.long	L583
	.long	4
	.data	2
L584:

	.byte	0x74,0x65,0x78,0x74,0x0
	.data
	.long	L584
	.long	6
	.data	2
L585:

	.byte	0x64,0x61,0x74,0x61,0x0
	.data
	.long	L585
	.long	8
	.data	2
L586:

	.byte	0x62,0x73,0x73,0x0
	.data
	.long	L586
	.long	18
	.data	2
L587:

	.byte	0x63,0x6f,0x6d,0x6d,0x6f,0x6e,0x0
	.data
	.long	L587
	.long	0
	.long	0
	.text
	.align	2
	.globl	_tracesym
_tracesym:
	.word	L.R17
	subl2	$L.SO17,sp
	.stabs	"tracesym",0x24,0,1228,_tracesym
	bitb	$224,_cursym+4
	jeql	L589
	jbr	L588
L589:
	.data	1
L590:

	.byte	0x25,0x73,0x0
	.text
	pushl	_filname
	pushl	$L590
	calls	$2,_printf
	tstb	_archdr
	jeql	L591
	.data	1
L592:

	.byte	0x28,0x25,0x73,0x29,0x0
	.text
	pushl	$_archdr
	pushl	$L592
	calls	$2,_printf
L591:
	.data	1
L593:

	.byte	0x3a,0x20,0x0
	.text
	pushl	$L593
	calls	$1,_printf
	bitb	$30,_cursym+4
	jneq	L594
	tstl	_cursym+8
	jeql	L594
L595:
	.data	1
L596:

	.byte	0x64,0x65,0x66,0x69,0x6e,0x69,0x74,0x69
	.byte	0x6f,0x6e,0x20,0x6f,0x66,0x20,0x63,0x6f
	.byte	0x6d,0x6d,0x6f,0x6e,0x20,0x25,0x73,0x20
	.byte	0x73,0x69,0x7a,0x65,0x20,0x25,0x64,0xa
	.byte	0x0
	.text
	pushl	_cursym+8
	pushl	_cursym
	pushl	$L596
	calls	$3,_printf
	jbr	L588
L594:
	movl	$_tynames,r11
	jbr	L599
L600:
	movzbl	_cursym+4,r0
	bicl2	$-31,r0
	cmpl	(r11),r0
	jneq	L601
	jbr	L598
L601:
	addl2	$8,r11
L599:
	tstl	4(r11)
	jneq	L600
L598:
	.data	1
L602:

	.byte	0x64,0x65,0x66,0x69,0x6e,0x69,0x74,0x69
	.byte	0x6f,0x6e,0x20,0x6f,0x66,0x0
	.text
	.data	1
L603:

	.byte	0x72,0x65,0x66,0x65,0x72,0x65,0x6e,0x63
	.byte	0x65,0x20,0x74,0x6f,0x0
	.text
	bitb	$30,_cursym+4
	jeql	L604
	movl	$L602,-(sp)
	jbr	L605
L604:
	movl	$L603,-(sp)
L605:
	calls	$1,_printf
	bitb	$1,_cursym+4
	jeql	L606
	.data	1
L607:

	.byte	0x20,0x65,0x78,0x74,0x65,0x72,0x6e,0x61
	.byte	0x6c,0x0
	.text
	pushl	$L607
	calls	$1,_printf
L606:
	tstl	4(r11)
	jeql	L608
	.data	1
L609:

	.byte	0x20,0x25,0x73,0x0
	.text
	pushl	4(r11)
	pushl	$L609
	calls	$2,_printf
L608:
	.data	1
L610:

	.byte	0x20,0x25,0x73,0xa,0x0
	.text
	pushl	_cursym
	pushl	$L610
	calls	$2,_printf
	.stabs	"tp",0x40,0,40,11
L588:
	ret
	.set	L.R17,0x800
	.set	L.SO17,0x0
L611:	.data
	.text
	.align	2
	.globl	_load2td
_load2td:
	.word	L.R18
	subl2	$L.SO18,sp
	.stabs	"load2td",0x24,0,1269,_load2td
	.stabs	"creloc",0xa0,0,4,4
	.stabs	"position",0xa0,0,4,8
	.stabs	"b1",0xa0,0,40,12
	.stabs	"b2",0xa0,0,40,16
	movl	_reloc+12,-16(fp)
	pushl	-16(fp)
	calls	$1,_malloc
	movl	r0,-8(fp)
	movl	_text+12,-20(fp)
	pushl	-20(fp)
	calls	$1,_malloc
	movl	r0,-12(fp)
	tstl	-8(fp)
	jeql	L614
	tstl	-12(fp)
	jneq	L613
L614:
	.data	1
L615:

	.byte	0x6f,0x75,0x74,0x20,0x6f,0x66,0x20,0x6d
	.byte	0x65,0x6d,0x6f,0x72,0x79,0x20,0x28,0x6c
	.byte	0x6f,0x61,0x64,0x32,0x74,0x64,0x29,0x0
	.text
	pushl	$L615
	pushl	$1
	calls	$2,_error
L613:
	pushl	$_reloc
	pushl	-16(fp)
	pushl	-8(fp)
	calls	$3,_mget
	pushl	$8
	pushl	-16(fp)
	calls	$2,udiv
	addl2	r0,r0
	addl2	r0,r0
	addl2	r0,r0
	addl3	-8(fp),r0,r8
	pushl	$_text
	pushl	-20(fp)
	pushl	-12(fp)
	calls	$3,_mget
	movl	-8(fp),r9
	jbr	L618
L619:
	addl3	(r9),-12(fp),r7
	extzv	$25,$2,4(r9),r0
	jbr	L621
L622:
	cvtbl	(r7),-4(fp)
	jbr	L620
L623:
	cvtwl	(r7),-4(fp)
	jbr	L620
L624:
	movl	(r7),-4(fp)
	jbr	L620
L625:
	.data	1
L626:

	.byte	0x6c,0x6f,0x61,0x64,0x32,0x74,0x64,0x20
	.byte	0x62,0x6f,0x74,0x63,0x68,0x3a,0x20,0x62
	.byte	0x61,0x64,0x20,0x6c,0x65,0x6e,0x67,0x74
	.byte	0x68,0x0
	.text
	pushl	$L626
	pushl	$1
	calls	$2,_error
	jbr	L620
L621:
	casel	r0,$0,$2
L627:
	.word	L622-L627
	.word	L623-L627
	.word	L624-L627
	jbr	L625
L620:
	extzv	$27,$1,4(r9),r0
	jeql	L628
	pushl	$31
	extzv	$0,$24,4(r9),-(sp)
	calls	$2,urem
	movl	_lochash[r0],r10
	jbr	L630
L631:
	movl	8(r10),r10
	tstl	r10
	jneq	L632
	.data	1
L633:

	.byte	0x6c,0x6f,0x63,0x61,0x6c,0x20,0x73,0x79
	.byte	0x6d,0x62,0x6f,0x6c,0x20,0x62,0x6f,0x74
	.byte	0x63,0x68,0x0
	.text
	pushl	$L633
	pushl	$1
	calls	$2,_error
L632:
L630:
	extzv	$0,$24,4(r9),r0
	cmpl	(r10),r0
	jneq	L631
L629:
	movl	4(r10),r11
	cmpb	4(r11),$1
	jneq	L634
	pushl	r11
	calls	$1,_symx
	addl2	_nsym,r0
	insv	r0,$0,$24,4(r9)
	jbr	L635
L634:
	movzbl	4(r11),r0
	bicl2	$-31,r0
	insv	r0,$0,$24,4(r9)
	addl2	8(r11),-4(fp)
	insv	$0,$27,$1,4(r9)
L635:
	jbr	L636
L628:
	extzv	$0,$24,4(r9),r0
	bicl2	$-31,r0
	jbr	L638
L639:
	addl2	_ctrel,-4(fp)
	jbr	L637
L640:
	addl2	_cdrel,-4(fp)
	jbr	L637
L641:
	addl2	_cbrel,-4(fp)
	jbr	L637
L642:
	jbr	L637
L643:
	.data	1
L644:

	.byte	0x72,0x65,0x6c,0x6f,0x63,0x61,0x74,0x69
	.byte	0x6f,0x6e,0x20,0x66,0x6f,0x72,0x6d,0x61
	.byte	0x74,0x20,0x62,0x6f,0x74,0x63,0x68,0x20
	.byte	0x28,0x73,0x79,0x6d,0x62,0x6f,0x6c,0x20
	.byte	0x74,0x79,0x70,0x65,0x29,0x29,0x0
	.text
	pushl	$L644
	pushl	$1
	calls	$2,_error
	jbr	L637
L638:
	casel	r0,$2,$6
L645:
	.word	L642-L645
	.word	L643-L645
	.word	L639-L645
	.word	L643-L645
	.word	L640-L645
	.word	L643-L645
	.word	L641-L645
	jbr	L643
L637:
L636:
	extzv	$24,$1,4(r9),r0
	jeql	L646
	subl2	4(ap),-4(fp)
L646:
	extzv	$25,$2,4(r9),r0
	jbr	L648
L649:
	cmpl	-4(fp),$-128
	jlss	L651
	cmpl	-4(fp),$127
	jleq	L650
L651:
	.data	1
L652:

	.byte	0x62,0x79,0x74,0x65,0x20,0x64,0x69,0x73
	.byte	0x70,0x6c,0x61,0x63,0x65,0x6d,0x65,0x6e
	.byte	0x74,0x20,0x6f,0x76,0x65,0x72,0x66,0x6c
	.byte	0x6f,0x77,0x0
	.text
	pushl	$L652
	pushl	$0
	calls	$2,_error
L650:
	movb	-4(fp),(r7)
	jbr	L647
L653:
	cmpl	-4(fp),$-32768
	jlss	L655
	cmpl	-4(fp),$32767
	jleq	L654
L655:
	.data	1
L656:

	.byte	0x77,0x6f,0x72,0x64,0x20,0x64,0x69,0x73
	.byte	0x70,0x6c,0x61,0x63,0x65,0x6d,0x65,0x6e
	.byte	0x74,0x20,0x6f,0x76,0x65,0x72,0x66,0x6c
	.byte	0x6f,0x77,0x0
	.text
	pushl	$L656
	pushl	$0
	calls	$2,_error
L654:
	movw	-4(fp),(r7)
	jbr	L647
L657:
	movl	-4(fp),(r7)
	jbr	L647
L648:
	casel	r0,$0,$2
L658:
	.word	L649-L658
	.word	L653-L658
	.word	L657-L658
L659:
L647:
	tstl	_rflag
	jeql	L660
	addl2	8(ap),(r9)
L660:
	addl2	$8,r9
L618:
	cmpl	r9,r8
	jlssu	L619
L617:
	pushl	12(ap)
	pushl	-20(fp)
	pushl	-12(fp)
	calls	$3,_bwrite
	tstl	_rflag
	jeql	L661
	pushl	16(ap)
	pushl	-16(fp)
	pushl	-8(fp)
	calls	$3,_bwrite
L661:
	pushl	-8(fp)
	calls	$1,_cfree
	pushl	-12(fp)
	calls	$1,_cfree
	.stabs	"codesz",0x80,0,4,20
	.stabs	"relsz",0x80,0,4,16
	.stabs	"cp",0x40,0,34,7
	.stabs	"codep",0x80,0,34,12
	.stabs	"relp",0x80,0,40,8
	.stabs	"rpend",0x40,0,40,8
	.stabs	"rp",0x40,0,40,9
	.stabs	"tw",0x80,0,4,4
	.stabs	"lp",0x40,0,40,10
	.stabs	"sp",0x40,0,40,11
L612:
	ret
	.set	L.R18,0xf80
	.set	L.SO18,0x14
L662:	.data
	.text
	.align	2
	.globl	_finishout
_finishout:
	.word	L.R19
	subl2	$L.SO19,sp
	.stabs	"finishout",0x24,0,1406,_finishout
	tstl	_sflag
	jneq	L664
	pushl	_nextsym
	calls	$1,_symx
	movl	r0,-4(fp)
	clrl	r11
	jbr	L667
L668:
	pushl	_sout
	divl3	$1103,r11,r0
	mull2	$20,r0
	divl3	$1103,r11,r1
	mull2	$1103,r1
	subl3	r1,r11,r1
	mull2	$12,r1
	addl3	r1,_symseg(r0),-(sp)
	calls	$2,_symwrite
	incl	r11
L667:
	cmpl	r11,-4(fp)
	jlss	L668
L666:
	pushl	_sout
	pushl	$4
	pushl	$_offset
	calls	$3,_bwrite
L664:
	tstl	_ofilfnd
	jneq	L669
	.data	1
L670:

	.byte	0x61,0x2e,0x6f,0x75,0x74,0x0
	.text
	pushl	$L670
	calls	$1,_unlink
	.data	1
L672:

	.byte	0x6c,0x2e,0x6f,0x75,0x74,0x0
	.text
	.data	1
L673:

	.byte	0x61,0x2e,0x6f,0x75,0x74,0x0
	.text
	pushl	$L673
	pushl	$L672
	calls	$2,_link
	tstl	r0
	jgeq	L674
	.data	1
L675:

	.byte	0x63,0x61,0x6e,0x6e,0x6f,0x74,0x20,0x6d
	.byte	0x6f,0x76,0x65,0x20,0x6c,0x2e,0x6f,0x75
	.byte	0x74,0x20,0x74,0x6f,0x20,0x61,0x2e,0x6f
	.byte	0x75,0x74,0x0
	.text
	pushl	$L675
	pushl	$1
	calls	$2,_error
L674:
	.data	1
L676:

	.byte	0x61,0x2e,0x6f,0x75,0x74,0x0
	.text
	movl	$L676,_ofilename
L669:
	movl	_errlev,_delarg
	calls	$0,_delexit
	.stabs	"nsymt",0x80,0,4,4
	.stabs	"i",0x40,0,4,11
L663:
	ret
	.set	L.R19,0x800
	.set	L.SO19,0x4
L677:	.data
	.text
	.align	2
	.globl	_mkfsym
_mkfsym:
	.word	L.R20
	subl2	$L.SO20,sp
	.stabs	"mkfsym",0x24,0,1428,_mkfsym
	.stabs	"s",0xa0,0,34,4
	tstl	_sflag
	jneq	L680
	tstl	_xflag
	jeql	L679
L680:
	jbr	L678
L679:
	movl	4(ap),_cursym
	movb	$4,_cursym+4
	movl	_torigin,_cursym+8
	pushl	_sout
	pushl	$_cursym
	calls	$2,_symwrite
L678:
	ret
	.set	L.R20,0x0
	.set	L.SO20,0x0
L681:	.data
	.text
	.align	2
	.globl	_getarhdr
_getarhdr:
	.word	L.R21
	subl2	$L.SO21,sp
	.stabs	"getarhdr",0x24,0,1439,_getarhdr
	pushl	$_text
	pushl	$60
	pushl	$_archdr
	calls	$3,_mget
	movl	$_archdr,r11
	jbr	L685
L686:
	cmpb	(r11)+,$32
	jneq	L687
	clrb	-1(r11)
	jbr	L682
L687:
L685:
	cmpl	r11,$_archdr+16
	jlssu	L686
L684:
	.stabs	"cp",0x40,0,34,11
L682:
	ret
	.set	L.R21,0x800
	.set	L.SO21,0x0
L688:	.data
	.text
	.align	2
	.globl	_mget
_mget:
	.word	L.R22
	subl2	$L.SO22,sp
	.stabs	"mget",0x24,0,1453,_mget
	.stabs	"loc",0xa0,0,34,4
	.stabs	"n",0xa0,0,4,8
	.stabs	"sp",0xa0,0,40,12
	movl	4(ap),r10
	movl	12(ap),r11
L690:
	tstl	8(ap)
	jneq	L691
	jbr	L689
L691:
	tstl	12(r11)
	jeql	L692
	tstl	8(r11)
	jeql	L692
L693:
	movl	(r11),r9
	movl	12(r11),r8
	cmpl	r8,8(r11)
	jleq	L694
	movl	8(r11),r8
L694:
	cmpl	r8,8(ap)
	jleq	L695
	movl	8(ap),r8
L695:
	subl2	r8,8(ap)
	subl2	r8,12(r11)
	subl2	r8,8(r11)
	addl2	r8,16(r11)
L698:
	movb	(r9)+,(r10)+
L697:
	decl	r8
	jgtr	L698
L696:
	movl	r9,(r11)
	jbr	L690
L692:
	cmpl	8(ap),$4096
	jleq	L699
	divl3	$4096,8(ap),r0
	mull2	$4096,r0
	subl3	r0,8(ap),r0
	subl3	r0,8(ap),r8
	pushl	$0
	addl3	$1,4(r11),r0
	ashl	$12,r0,-(sp)
	pushl	_infil
	calls	$3,_lseek
	cmpl	r8,12(r11)
	jgtr	L703
	pushl	r8
	pushl	r10
	pushl	_infil
	calls	$3,_read
	cmpl	r0,r8
	jeql	L702
L703:
	.data	1
L704:

	.byte	0x70,0x72,0x65,0x6d,0x61,0x74,0x75,0x72
	.byte	0x65,0x20,0x45,0x4f,0x46,0x0
	.text
	pushl	$L704
	pushl	$1
	calls	$2,_error
L702:
	addl2	r8,r10
	subl2	r8,8(ap)
	subl2	r8,12(r11)
	addl2	r8,16(r11)
	pushl	$-1
	addl3	$1,4(r11),r0
	divl3	$4096,r8,r1
	addl2	r1,r0
	ashl	$12,r0,-(sp)
	pushl	r11
	calls	$3,_dseek
	jbr	L690
L699:
	pushl	r11
	calls	$1,_get
	movb	r0,(r10)+
	decl	8(ap)
	jbr	L690
	.stabs	"take",0x40,0,4,8
	.stabs	"p",0x40,0,34,9
	.stabs	"loc",0x40,0,34,10
	.stabs	"sp",0x40,0,40,11
L689:
	ret
	.set	L.R22,0xf00
	.set	L.SO22,0x0
L705:	.data
	.text
	.align	2
	.globl	_symwrite
_symwrite:
	.word	L.R23
	subl2	$L.SO23,sp
	.stabs	"symwrite",0x24,0,1497,_symwrite
	.stabs	"sp",0xa0,0,40,4
	.stabs	"bp",0xa0,0,40,8
	movl	*4(ap),r10
	tstl	r10
	jeql	L707
	movl	_offset,*4(ap)
	pushl	r10
	calls	$1,_strlen
	addl3	$1,r0,r11
	pushl	_strout
	pushl	r11
	pushl	r10
	calls	$3,_bwrite
	addl2	r11,_offset
L707:
	pushl	8(ap)
	pushl	$12
	pushl	4(ap)
	calls	$3,_bwrite
	movl	r10,*4(ap)
	.stabs	"str",0x40,0,34,10
	.stabs	"len",0x40,0,4,11
L706:
	ret
	.set	L.R23,0xc00
	.set	L.SO23,0x0
L709:	.data
	.text
	.align	2
	.globl	_dseek
_dseek:
	.word	L.R24
	subl2	$L.SO24,sp
	.stabs	"dseek",0x24,0,1515,_dseek
	.stabs	"sp",0xa0,0,40,4
	.stabs	"loc",0xa0,0,4,8
	.stabs	"s",0xa0,0,4,12
	movl	4(ap),r11
	extzv	$12,$20,8(ap),r9
	bicl3	$-4096,8(ap),r8
	bitl	$1,r8
	jeql	L711
	.data	1
L712:

	.byte	0x6c,0x6f,0x61,0x64,0x65,0x72,0x20,0x65
	.byte	0x72,0x72,0x6f,0x72,0x3b,0x20,0x6f,0x64
	.byte	0x64,0x20,0x6f,0x66,0x66,0x73,0x65,0x74
	.byte	0x0
	.text
	pushl	$L712
	pushl	$1
	calls	$2,_error
L711:
	movl	20(r11),r0
	decl	12(r0)
	movl	$_page,r10
	cmpl	4(r10),r9
	jeql	L713
	movl	$_page+4112,r10
	cmpl	4(r10),r9
	jeql	L713
L714:
	tstl	12(r10)
	jeql	L716
	movl	$_page,r10
	tstl	12(r10)
	jneq	L715
L716:
	tstl	_page+12
	jneq	L717
	tstl	_page+4124
	jneq	L717
L718:
	cmpl	_page+4,_page+4116
	jgeq	L719
	movl	$_page,r10
L719:
L717:
	movl	r9,4(r10)
	pushl	$0
	bicl3	$4095,8(ap),-(sp)
	pushl	_infil
	calls	$3,_lseek
	pushl	$4096
	addl3	$16,r10,-(sp)
	pushl	_infil
	calls	$3,_read
	movl	r0,-4(fp)
	jgeq	L720
	clrl	-4(fp)
L720:
	movl	-4(fp),8(r10)
	jbr	L721
L715:
	.data	1
L722:

	.byte	0x62,0x6f,0x74,0x63,0x68,0x3a,0x20,0x6e
	.byte	0x6f,0x20,0x70,0x61,0x67,0x65,0x73,0x0
	.text
	pushl	$L722
	pushl	$1
	calls	$2,_error
L721:
L713:
	incl	12(r10)
	movl	r9,4(r11)
	movl	r10,20(r11)
	cmpl	12(ap),$-1
	jeql	L723
	movl	12(ap),12(r11)
	clrl	16(r11)
L723:
	addl3	$16,r10,r0
	addl3	r8,r0,(r11)
	subl3	r8,8(r10),8(r11)
	jgtr	L724
	clrl	12(r11)
L724:
	.stabs	"n",0x80,0,4,4
	.stabs	"o",0x40,0,4,8
	.stabs	"b",0x40,0,4,9
	.stabs	"p",0x40,0,40,10
	.stabs	"sp",0x40,0,40,11
L710:
	ret
	.set	L.R24,0xf00
	.set	L.SO24,0x4
L725:	.data
	.text
	.align	2
	.globl	_get
_get:
	.word	L.R25
	subl2	$L.SO25,sp
	.stabs	"get",0x24,0,1549,_get
	.stabs	"asp",0xa0,0,40,4
	movl	4(ap),r11
	decl	8(r11)
	jgeq	L727
	pushl	$-1
	addl3	$1,4(r11),r0
	ashl	$12,r0,-(sp)
	pushl	r11
	calls	$3,_dseek
	decl	8(r11)
L727:
	decl	12(r11)
	jgtr	L728
	tstl	12(r11)
	jgeq	L729
	.data	1
L730:

	.byte	0x70,0x72,0x65,0x6d,0x61,0x74,0x75,0x72
	.byte	0x65,0x20,0x45,0x4f,0x46,0x0
	.text
	pushl	$L730
	pushl	$1
	calls	$2,_error
L729:
	incl	_fpage+12
	movl	20(r11),r0
	decl	12(r0)
	movl	$_fpage,20(r11)
L728:
	incl	16(r11)
	movl	(r11),r0
	incl	(r11)
	cvtbl	(r0),r0
	jbr	L726
	.stabs	"sp",0x40,0,40,11
L726:
	ret
	.set	L.R25,0x800
	.set	L.SO25,0x0
L731:	.data
	.text
	.align	2
	.globl	_getfile
_getfile:
	.word	L.R26
	subl2	$L.SO26,sp
	.stabs	"getfile",0x24,0,1570,_getfile
	.stabs	"acp",0xa0,0,34,4
	movl	4(ap),r11
	movl	$-1,_infil
	clrb	_archdr
	movl	r11,_filname
	cmpb	(r11),$45
	jneq	L733
	cmpb	1(r11),$108
	jneq	L733
L734:
	.data	1
L735:

	.byte	0x2f,0x75,0x73,0x72,0x2f,0x6c,0x6f,0x63
	.byte	0x61,0x6c,0x2f,0x6c,0x69,0x62,0x2f,0x6c
	.byte	0x69,0x62,0x78,0x78,0x78,0x78,0x78,0x78
	.byte	0x78,0x78,0x78,0x78,0x78,0x78,0x78,0x78
	.byte	0x78,0x0
	.text
	movl	$L735,-48(fp)
	tstb	2(r11)
	jneq	L736
	.data	1
L737:

	.byte	0x2d,0x6c,0x61,0x0
	.text
	movl	$L737,r11
L736:
	.data	1
L738:

	.byte	0x2f,0x75,0x73,0x72,0x2f,0x6c,0x69,0x62
	.byte	0x2f,0x6c,0x69,0x62,0x78,0x78,0x78,0x78
	.byte	0x78,0x78,0x78,0x78,0x78,0x78,0x78,0x78
	.byte	0x78,0x78,0x78,0x0
	.text
	movl	$L738,_filname
	clrl	r10
	jbr	L741
L742:
	addl3	$12,r10,r0
	addl2	_filname,r0
	addl3	$2,r10,r1
	addl2	r11,r1
	movb	(r1),(r0)
	addl3	$18,r10,r0
	addl2	-48(fp),r0
	addl3	$2,r10,r1
	addl2	r11,r1
	movb	(r1),(r0)
	incl	r10
L741:
	addl3	$2,r10,r0
	addl2	r11,r0
	tstb	(r0)
	jneq	L742
L740:
	addl3	$12,r10,r0
	addl2	_filname,r0
	movb	$46,r1
	addl3	$18,r10,r2
	addl2	-48(fp),r2
	movb	r1,(r2)
	movb	r1,(r0)
	addl3	$13,r10,r0
	addl2	_filname,r0
	movb	$97,r1
	addl3	$19,r10,r2
	addl2	-48(fp),r2
	movb	r1,(r2)
	movb	r1,(r0)
	addl3	$14,r10,r0
	addl2	_filname,r0
	clrb	r1
	addl3	$20,r10,r2
	addl2	-48(fp),r2
	movb	r1,(r2)
	movb	r1,(r0)
	pushl	$0
	addl3	$4,_filname,-(sp)
	calls	$2,_open
	movl	r0,_infil
	jlss	L744
	addl2	$4,_filname
	jbr	L745
L744:
	pushl	$0
	pushl	_filname
	calls	$2,_open
	movl	r0,_infil
	jgeq	L746
	movl	-48(fp),_filname
L746:
L745:
	.stabs	"locfilname",0x80,0,34,48
L733:
	cmpl	_infil,$-1
	jneq	L747
	pushl	$0
	pushl	_filname
	calls	$2,_open
	movl	r0,_infil
	jgeq	L747
L748:
	.data	1
L749:

	.byte	0x63,0x61,0x6e,0x6e,0x6f,0x74,0x20,0x6f
	.byte	0x70,0x65,0x6e,0x0
	.text
	pushl	$L749
	pushl	$1
	calls	$2,_error
L747:
	movl	$-1,_page+4116
	movl	_page+4116,_page+4
	clrl	_page+4124
	movl	_page+4124,_page+12
	movl	$_fpage,_reloc+20
	movl	_reloc+20,_text+20
	movl	$2,_fpage+12
	pushl	$8
	pushl	$0
	pushl	$_text
	calls	$3,_dseek
	tstl	_text+12
	jgtr	L750
	.data	1
L751:

	.byte	0x70,0x72,0x65,0x6d,0x61,0x74,0x75,0x72
	.byte	0x65,0x20,0x45,0x4f,0x46,0x0
	.text
	pushl	$L751
	pushl	$1
	calls	$2,_error
L750:
	pushl	$_text
	pushl	$8
	pushal	-9(fp)
	calls	$3,_mget
	clrb	-1(fp)
	.data	1
L752:

	.byte	0x21,0x3c,0x61,0x72,0x63,0x68,0x3e,0xa
	.byte	0x0
	.text
	pushl	$L752
	pushal	-9(fp)
	calls	$2,_strcmp
	tstl	r0
	jeql	L753
	clrl	r0
	jbr	L732
L753:
	pushl	$60
	pushl	$8
	pushl	$_text
	calls	$3,_dseek
	tstl	_text+12
	jgtr	L754
	movl	$1,r0
	jbr	L732
L754:
	calls	$0,_getarhdr
	.data	1
L756:

	.byte	0x5f,0x5f,0x2e,0x53,0x59,0x4d,0x44,0x45
	.byte	0x46,0x0
	.text
	pushl	$16
	pushl	$L756
	pushl	$_archdr
	calls	$3,_strncmp
	tstl	r0
	jeql	L757
	movl	$1,r0
	jbr	L732
L757:
	pushal	-44(fp)
	pushl	_infil
	calls	$2,_fstat
	pushl	$_archdr+16
	calls	$1,_atol
	cmpl	-20(fp),r0
	jleq	L758
	movl	$3,r0
	jbr	L759
L758:
	movl	$2,r0
L759:
	jbr	L732
	.stabs	"stb",0x80,0,8,44
	.stabs	"arcmag",0x80,0,98,9
	.stabs	"c",0x40,0,4,10
	.stabs	"cp",0x40,0,34,11
L732:
	ret
	.set	L.R26,0xc00
	.set	L.SO26,0x30
L760:	.data
	.text
	.align	2
	.globl	_lookup
_lookup:
	.word	L.R27
	subl2	$L.SO27,sp
	.stabs	"lookup",0x24,0,1623,_lookup
	clrl	r11
	movl	_cursym,r9
	jbr	L764
L765:
	addl3	r11,r11,r0
	cvtbl	(r9)+,r1
	addl3	r1,r0,r11
L764:
	tstb	(r9)
	jneq	L765
L763:
	bicl3	$-2147483648,r11,r0
	divl3	$2206,r0,r1
	mull2	$2206,r1
	subl3	r1,r0,r1
	movl	r1,r11
	movl	$_symseg,r7
	jbr	L768
L769:
	tstl	(r7)
	jneq	L770
	pushl	$12
	pushl	$1103
	calls	$2,_calloc
	movl	r0,(r7)
	pushl	$4
	pushl	$2206
	calls	$2,_calloc
	movl	r0,12(r7)
	tstl	(r7)
	jeql	L772
	tstl	12(r7)
	jneq	L771
L772:
	.data	1
L773:

	.byte	0x72,0x61,0x6e,0x20,0x6f,0x75,0x74,0x20
	.byte	0x6f,0x66,0x20,0x73,0x70,0x61,0x63,0x65
	.byte	0x20,0x66,0x6f,0x72,0x20,0x73,0x79,0x6d
	.byte	0x62,0x6f,0x6c,0x20,0x74,0x61,0x62,0x6c
	.byte	0x65,0x0
	.text
	pushl	$L773
	pushl	$1
	calls	$2,_error
L771:
	addl3	$13236,(r7),4(r7)
	addl3	$8824,12(r7),16(r7)
L770:
	cmpl	r7,_csymseg
	jlequ	L774
	movl	r7,_csymseg
L774:
	addl3	r11,r11,r0
	addl2	r0,r0
	addl3	r0,12(r7),r10
	movl	$1,r6
L777:
	tstl	(r10)
	jneq	L778
	cmpl	8(r7),$1103
	jneq	L779
	jbr	L775
L779:
	movl	r10,r0
	jbr	L761
L778:
	movl	*(r10),r8
	movl	_cursym,r9
	jbr	L782
L783:
	tstb	(r9)+
	jneq	L784
	movl	r10,r0
	jbr	L761
L784:
L782:
	cmpb	(r9),(r8)+
	jeql	L783
L781:
	addl3	r6,r6,r0
	addl2	r0,r0
	addl2	r0,r10
	addl2	$2,r6
	cmpl	r10,16(r7)
	jlssu	L785
	subl2	$8824,r10
L785:
L776:
	cmpl	r6,$2206
	jlss	L777
L775:
	cmpl	r6,$2206
	jleq	L786
	.data	1
L787:

	.byte	0x68,0x61,0x73,0x68,0x20,0x74,0x61,0x62
	.byte	0x6c,0x65,0x20,0x62,0x6f,0x74,0x63,0x68
	.byte	0x0
	.text
	pushl	$L787
	pushl	$1
	calls	$2,_error
L786:
	addl2	$20,r7
L768:
	cmpl	r7,$_symseg+800
	jlssu	L769
L767:
	.data	1
L788:

	.byte	0x73,0x79,0x6d,0x62,0x6f,0x6c,0x20,0x74
	.byte	0x61,0x62,0x6c,0x65,0x20,0x6f,0x76,0x65
	.byte	0x72,0x66,0x6c,0x6f,0x77,0x0
	.text
	pushl	$L788
	pushl	$1
	calls	$2,_error
	.stabs	"i",0x40,0,4,6
	.stabs	"gp",0x40,0,40,7
	.stabs	"cp1",0x40,0,34,8
	.stabs	"cp",0x40,0,34,9
	.stabs	"hp",0x40,0,168,10
	.stabs	"sh",0x40,0,4,11
L761:
	ret
	.set	L.R27,0xfc0
	.set	L.SO27,0x0
L789:	.data
	.text
	.align	2
	.globl	_symfree
_symfree:
	.word	L.R28
	subl2	$L.SO28,sp
	.stabs	"symfree",0x24,0,1673,_symfree
	.stabs	"saved",0xa0,0,40,4
	movl	_csymseg,r11
	jbr	L793
L794:
	mull3	$12,8(r11),r0
	addl3	r0,(r11),r10
	cmpl	r10,4(ap)
	jneq	L795
	movl	r10,_nextsym
	jbr	L790
L795:
	subl2	$12,r10
	jbr	L798
L799:
	cvtwl	6(r10),r0
	clrl	*12(r11)[r0]
	decl	8(r11)
	cmpl	r10,4(ap)
	jneq	L800
	movl	r10,_nextsym
	jbr	L790
L800:
	subl2	$12,r10
L798:
	cmpl	r10,(r11)
	jgequ	L799
L797:
	subl2	$20,r11
	movl	_csymseg,r0
	subl2	$20,_csymseg
L793:
	cmpl	r11,$_symseg
	jgequ	L794
L792:
	tstl	4(ap)
	jneq	L801
	jbr	L790
L801:
	.data	1
L802:

	.byte	0x73,0x79,0x6d,0x66,0x72,0x65,0x65,0x20
	.byte	0x62,0x6f,0x74,0x63,0x68,0x0
	.text
	pushl	$L802
	pushl	$1
	calls	$2,_error
	.stabs	"sp",0x40,0,40,10
	.stabs	"gp",0x40,0,40,11
L790:
	ret
	.set	L.R28,0xc00
	.set	L.SO28,0x0
L803:	.data
	.text
	.align	2
	.globl	_slookup
_slookup:
	.word	L.R29
	subl2	$L.SO29,sp
	.stabs	"slookup",0x24,0,1700,_slookup
	.stabs	"s",0xa0,0,34,4
	movl	4(ap),_cursym
	movb	$1,_cursym+4
	clrl	_cursym+8
	calls	$0,_lookup
	jbr	L804
L804:
	ret
	.set	L.R29,0x0
	.set	L.SO29,0x0
L805:	.data
	.text
	.align	2
	.globl	_enter
_enter:
	.word	L.R30
	subl2	$L.SO30,sp
	.stabs	"enter",0x24,0,1710,_enter
	.stabs	"hp",0xa0,0,168,4
	movl	4(ap),r11
	tstl	(r11)
	jneq	L807
	movl	_csymseg,r0
	cmpl	r11,12(r0)
	jlssu	L809
	movl	_csymseg,r0
	cmpl	r11,16(r0)
	jlssu	L808
L809:
	.data	1
L810:

	.byte	0x65,0x6e,0x74,0x65,0x72,0x20,0x62,0x6f
	.byte	0x74,0x63,0x68,0x0
	.text
	pushl	$L810
	pushl	$1
	calls	$2,_error
L808:
	movl	_csymseg,r0
	mull3	$12,8(r0),r1
	addl3	r1,*_csymseg,r10
	movl	r10,_lastsym
	movl	r10,(r11)
	movl	_csymseg,r0
	incl	8(r0)
	movl	_cursym,(r10)
	movb	_cursym+4,4(r10)
	movl	_csymseg,r0
	subl3	12(r0),r11,r0
	divl3	$4,r0,r1
	movw	r1,6(r10)
	movl	_cursym+8,8(r10)
	addl3	$12,_lastsym,_nextsym
	movl	$1,r0
	jbr	L806
L807:
	movl	(r11),_lastsym
	clrl	r0
	jbr	L806
	.stabs	"sp",0x40,0,40,10
	.stabs	"hp",0x40,0,168,11
L806:
	ret
	.set	L.R30,0xc00
	.set	L.SO30,0x0
L811:	.data
	.text
	.align	2
	.globl	_symx
_symx:
	.word	L.R31
	subl2	$L.SO31,sp
	.stabs	"symx",0x24,0,1732,_symx
	.stabs	"sp",0xa0,0,40,4
	tstl	4(ap)
	jneq	L813
	clrl	r0
	jbr	L812
L813:
	movl	_csymseg,r11
	jbr	L816
L817:
	cmpl	4(ap),(r11)
	jlssu	L818
	cmpl	4(ap),4(r11)
	jgtru	L818
L819:
	subl3	$_symseg,r11,r0
	divl2	$20,r0
	mull2	$1103,r0
	mull2	$12,r0
	addl2	4(ap),r0
	subl2	(r11),r0
	divl2	$12,r0
	jbr	L812
L818:
	subl2	$20,r11
L816:
	cmpl	r11,$_symseg
	jgequ	L817
L815:
	.data	1
L820:

	.byte	0x73,0x79,0x6d,0x78,0x20,0x62,0x6f,0x74
	.byte	0x63,0x68,0x0
	.text
	pushl	$L820
	pushl	$1
	calls	$2,_error
	.stabs	"gp",0x40,0,40,11
L812:
	ret
	.set	L.R31,0x800
	.set	L.SO31,0x0
L821:	.data
	.text
	.align	2
	.globl	_symreloc
_symreloc:
	.word	L.R32
	subl2	$L.SO32,sp
	.stabs	"symreloc",0x24,0,1746,_symreloc
	tstl	_funding
	jeql	L823
	jbr	L822
L823:
	movzbl	_cursym+4,r0
	bicl2	$-16,r0
	jbr	L825
L826:
L827:
	addl2	_ctrel,_cursym+8
	jbr	L822
L828:
L829:
	addl2	_cdrel,_cursym+8
	jbr	L822
L830:
L831:
	addl2	_cbrel,_cursym+8
	jbr	L822
L832:
	jbr	L822
L833:
	bitb	$1,_cursym+4
	jeql	L834
	movb	$3,_cursym+4
L834:
	jbr	L822
L825:
	casel	r0,$1,$8
L835:
	.word	L832-L835
	.word	L833-L835
	.word	L833-L835
	.word	L826-L835
	.word	L827-L835
	.word	L828-L835
	.word	L829-L835
	.word	L830-L835
	.word	L831-L835
	jbr	L833
L824:
L822:
	ret
	.set	L.R32,0x0
	.set	L.SO32,0x0
L836:	.data
	.text
	.align	2
	.globl	_error
_error:
	.word	L.R33
	subl2	$L.SO33,sp
	.stabs	"error",0x24,0,1777,_error
	.stabs	"n",0xa0,0,4,4
	.stabs	"s",0xa0,0,34,8
	tstl	_errlev
	jneq	L838
	.data	1
L839:

	.byte	0x6c,0x64,0x3a,0x0
	.text
	pushl	$L839
	calls	$1,_printf
L838:
	tstl	_filname
	jeql	L840
	.data	1
L841:

	.byte	0x25,0x73,0x0
	.text
	pushl	_filname
	pushl	$L841
	calls	$2,_printf
	cmpl	4(ap),$-1
	jeql	L842
	tstb	_archdr
	jeql	L842
L843:
	.data	1
L844:

	.byte	0x28,0x25,0x73,0x29,0x0
	.text
	pushl	$_archdr
	pushl	$L844
	calls	$2,_printf
L842:
	.data	1
L845:

	.byte	0x3a,0x20,0x0
	.text
	pushl	$L845
	calls	$1,_printf
L840:
	.data	1
L846:

	.byte	0x25,0x73,0xa,0x0
	.text
	pushl	8(ap)
	pushl	$L846
	calls	$2,_printf
	cmpl	4(ap),$-1
	jneq	L847
	jbr	L837
L847:
	tstl	4(ap)
	jeql	L848
	calls	$0,_delexit
L848:
	movl	$2,_errlev
L837:
	ret
	.set	L.R33,0x0
	.set	L.SO33,0x0
L849:	.data
	.text
	.align	2
	.globl	_readhdr
_readhdr:
	.word	L.R34
	subl2	$L.SO34,sp
	.stabs	"readhdr",0x24,0,1797,_readhdr
	.stabs	"loc",0xa0,0,4,4
	pushl	$32
	pushl	4(ap)
	pushl	$_text
	calls	$3,_dseek
	pushl	$_text
	pushl	$32
	pushl	$_filhdr
	calls	$3,_mget
	cmpl	_filhdr,$263
	jeql	L851
	cmpl	_filhdr,$264
	jeql	L851
L853:
	cmpl	_filhdr,$267
	jeql	L851
L852:
	cmpl	_filhdr,$65381
	jneq	L854
	.data	1
L855:

	.byte	0x6f,0x6c,0x64,0x20,0x61,0x72,0x63,0x68
	.byte	0x69,0x76,0x65,0x0
	.text
	pushl	$L855
	pushl	$1
	calls	$2,_error
L854:
	.data	1
L856:

	.byte	0x62,0x61,0x64,0x20,0x6d,0x61,0x67,0x69
	.byte	0x63,0x20,0x6e,0x75,0x6d,0x62,0x65,0x72
	.byte	0x0
	.text
	pushl	$L856
	pushl	$1
	calls	$2,_error
L851:
	bitl	$1,_filhdr+4
	jneq	L858
	bitl	$1,_filhdr+8
	jeql	L857
L858:
	.data	1
L859:

	.byte	0x74,0x65,0x78,0x74,0x2f,0x64,0x61,0x74
	.byte	0x61,0x20,0x73,0x69,0x7a,0x65,0x20,0x6f
	.byte	0x64,0x64,0x0
	.text
	pushl	$L859
	pushl	$1
	calls	$2,_error
L857:
	cmpl	_filhdr,$264
	jeql	L861
	cmpl	_filhdr,$267
	jneq	L860
L861:
	pushl	$1024
	pushl	_filhdr+4
	calls	$2,_round
	mnegl	r0,_cdrel
	subl3	_filhdr+8,_cdrel,_cbrel
	jbr	L862
L860:
	cmpl	_filhdr,$263
	jneq	L863
	mnegl	_filhdr+4,_cdrel
	subl3	_filhdr+8,_cdrel,_cbrel
	jbr	L864
L863:
	.data	1
L865:

	.byte	0x62,0x61,0x64,0x20,0x66,0x6f,0x72,0x6d
	.byte	0x61,0x74,0x0
	.text
	pushl	$L865
	pushl	$1
	calls	$2,_error
L864:
L862:
L850:
	ret
	.set	L.R34,0x0
	.set	L.SO34,0x0
L866:	.data
	.text
	.align	2
	.globl	_round
_round:
	.word	L.R35
	subl2	$L.SO35,sp
	.stabs	"round",0x24,0,1821,_round
	.stabs	"v",0xa0,0,4,4
	.stabs	"r",0xa0,0,14,8
	decl	8(ap)
	addl2	8(ap),4(ap)
	mcoml	8(ap),r0
	mcoml	r0,r1
	bicl2	r1,4(ap)
	movl	4(ap),r0
	jbr	L867
L867:
	ret
	.set	L.R35,0x0
	.set	L.SO35,0x0
L868:	.data
	.comm	_savetab,4
	.comm	_saveleft,4
	.text
	.align	2
	.globl	_savestr
_savestr:
	.word	L.R36
	subl2	$L.SO36,sp
	.stabs	"savestr",0x24,0,1836,_savestr
	.stabs	"cp",0xa0,0,34,4
	movl	4(ap),r11
	pushl	r11
	calls	$1,_strlen
	addl3	$1,r0,r10
	cmpl	r10,_saveleft
	jleq	L872
	movl	$8192,_saveleft
	cmpl	r10,_saveleft
	jleq	L873
	movl	r10,_saveleft
L873:
	pushl	_saveleft
	calls	$1,_malloc
	movl	r0,_savetab
	tstl	_savetab
	jneq	L874
	.data	1
L875:

	.byte	0x72,0x61,0x6e,0x20,0x6f,0x75,0x74,0x20
	.byte	0x6f,0x66,0x20,0x6d,0x65,0x6d,0x6f,0x72
	.byte	0x79,0x20,0x28,0x73,0x61,0x76,0x65,0x73
	.byte	0x74,0x72,0x29,0x0
	.text
	pushl	$L875
	pushl	$1
	calls	$2,_error
L874:
L872:
	pushl	r10
	pushl	r11
	pushl	_savetab
	calls	$3,_strncpy
	movl	_savetab,r11
	addl2	r10,_savetab
	subl2	r10,_saveleft
	movl	r11,r0
	jbr	L871
	.stabs	"len",0x40,0,4,10
	.stabs	"cp",0x40,0,34,11
L871:
	ret
	.set	L.R36,0xc00
	.set	L.SO36,0x0
L877:	.data
	.text
	.align	2
	.globl	_bopen
_bopen:
	.word	L.R37
	subl2	$L.SO37,sp
	.stabs	"bopen",0x24,0,1857,_bopen
	.stabs	"bp",0xa0,0,40,4
	.stabs	"off",0xa0,0,4,8
	movl	4(ap),r0
	addl3	$8,4(ap),4(r0)
	divl3	$4096,8(ap),r0
	mull2	$4096,r0
	subl3	r0,8(ap),r0
	subw3	r0,$4096,*4(ap)
	movl	4(ap),r0
	movl	8(ap),4104(r0)
	movl	4(ap),r0
	movl	_biobufs,4108(r0)
	movl	4(ap),_biobufs
L878:
	ret
	.set	L.R37,0x0
	.set	L.SO37,0x0
L879:	.data
	.comm	_bwrerror,4
	.text
	.align	2
	.globl	_bwrite
_bwrite:
	.word	L.R38
	subl2	$L.SO38,sp
	.stabs	"bwrite",0x24,0,1872,_bwrite
	.stabs	"p",0xa0,0,34,4
	.stabs	"cnt",0xa0,0,4,8
	.stabs	"bp",0xa0,0,40,12
	movl	4(ap),r11
	movl	8(ap),r10
	movl	12(ap),r9
L882:
	tstl	r10
	jneq	L883
	jbr	L881
L883:
	tstw	(r9)
	jeql	L884
	cvtwl	(r9),r8
	cmpl	r8,r10
	jleq	L885
	movl	r10,r8
L885:
	movw	r8,r0
	subw2	r0,(r9)
	movl	4(r9),r7
#ASM
movc3 r8,(r11),(r7)
#ASMEND
	addl2	r8,4(r9)
	addl2	r8,r11
	subl2	r8,r10
	jbr	L882
L884:
	cmpl	r10,$4096
	jlss	L886
	addl3	$8,r9,r0
	cmpl	4(r9),r0
	jeql	L887
	pushl	r9
	calls	$1,_bflush1
L887:
	divl3	$4096,r10,r0
	mull2	$4096,r0
	subl3	r0,r10,r0
	subl3	r0,r10,r8
	cmpl	_boffset,4104(r9)
	jeql	L888
	pushl	$0
	pushl	4104(r9)
	pushl	_biofd
	calls	$3,_lseek
L888:
	pushl	r8
	pushl	r11
	pushl	_biofd
	calls	$3,_write
	cmpl	r0,r8
	jeql	L890
	movl	$1,_bwrerror
	.data	1
L891:

	.byte	0x6f,0x75,0x74,0x70,0x75,0x74,0x20,0x77
	.byte	0x72,0x69,0x74,0x65,0x20,0x65,0x72,0x72
	.byte	0x6f,0x72,0x0
	.text
	pushl	$L891
	pushl	$1
	calls	$2,_error
L890:
	addl2	r8,4104(r9)
	movl	4104(r9),_boffset
	addl2	r8,r11
	subl2	r8,r10
	jbr	L882
L886:
	pushl	r9
	calls	$1,_bflush1
	jbr	L882
	.stabs	"to",0x40,0,34,7
	.stabs	"put",0x40,0,4,8
	.stabs	"bp",0x40,0,40,9
	.stabs	"cnt",0x40,0,4,10
	.stabs	"p",0x40,0,34,11
L881:
	ret
	.set	L.R38,0xf80
	.set	L.SO38,0x0
L892:	.data
	.text
	.align	2
	.globl	_bflush
_bflush:
	.word	L.R39
	subl2	$L.SO39,sp
	.stabs	"bflush",0x24,0,1912,_bflush
	tstl	_bwrerror
	jeql	L894
	jbr	L893
L894:
	movl	_biobufs,r11
	jbr	L897
L898:
	pushl	r11
	calls	$1,_bflush1
	movl	4108(r11),r11
L897:
	tstl	r11
	jneq	L898
L896:
	.stabs	"bp",0x40,0,40,11
L893:
	ret
	.set	L.R39,0x800
	.set	L.SO39,0x0
L899:	.data
	.text
	.align	2
	.globl	_bflush1
_bflush1:
	.word	L.R40
	subl2	$L.SO40,sp
	.stabs	"bflush1",0x24,0,1923,_bflush1
	.stabs	"bp",0xa0,0,40,4
	movl	4(ap),r11
	addl3	$8,r11,r0
	subl3	r0,4(r11),r10
	tstl	r10
	jneq	L901
	jbr	L900
L901:
	cmpl	_boffset,4104(r11)
	jeql	L902
	pushl	$0
	pushl	4104(r11)
	pushl	_biofd
	calls	$3,_lseek
L902:
	pushl	r10
	addl3	$8,r11,-(sp)
	pushl	_biofd
	calls	$3,_write
	cmpl	r0,r10
	jeql	L903
	movl	$1,_bwrerror
	.data	1
L904:

	.byte	0x6f,0x75,0x74,0x70,0x75,0x74,0x20,0x77
	.byte	0x72,0x69,0x74,0x65,0x20,0x65,0x72,0x72
	.byte	0x6f,0x72,0x0
	.text
	pushl	$L904
	pushl	$1
	calls	$2,_error
L903:
	addl2	r10,4104(r11)
	movl	4104(r11),_boffset
	addl3	$8,r11,4(r11)
	movw	$4096,(r11)
	.stabs	"cnt",0x40,0,4,10
	.stabs	"bp",0x40,0,40,11
L900:
	ret
	.set	L.R40,0xc00
	.set	L.SO40,0x0
L905:	.data
	.text
	.align	2
	.globl	_bflushc
_bflushc:
	.word	L.R41
	subl2	$L.SO41,sp
	.stabs	"bflushc",0x24,0,1942,_bflushc
	.stabs	"bp",0xa0,0,40,4
	.stabs	"c",0xa0,0,4,8
	movl	4(ap),r11
	pushl	r11
	calls	$1,_bflush1
	tstw	(r11)
	jeql	L907
	decw	(r11)
	movb	8(ap),r0
	movl	4(r11),r1
	incl	4(r11)
	movb	r0,(r1)
	jbr	L908
L907:
	pushl	8(ap)
	pushl	r11
	calls	$2,_bflushc
L908:
	.stabs	"bp",0x40,0,40,11
L906:
	ret
	.set	L.R41,0x800
	.set	L.SO41,0x0
L909:	.data
	.text
L910:	.stabs	"",0x94,0,1947,L910
