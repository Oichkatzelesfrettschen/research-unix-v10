	.TITLE SPITBOL - VAX MACRO SPITBOL INTERPRETER
	.LIBRARY	"SPITMACS"
;
;	COPYRIGHT (c) 1981 under BERNE and UNIVERSAL COPYRIGHT
;	LAW by DEWAR INFORMATION SYSTEMS CORPORATION.
;
;	The software described in this document is proprietary
;	to DEWAR INFORMATION SYSTEMS CORPORATION and furnished
;	to the purchaser under a license  for use on a  single
;	computer  system and can be copied (with the inclusion
;	of DEWAR INFORMATION SYSTEMS  CORPORATIONS's copyright 
;	notice) only for use in such system.
;
;	This software is the property of:
;
;	Steven G. Duff
;	c/o Dewar Information Systems Corp.
;	221 West Lake Street
;	Oak Park, Illinois  60302
;	(312) 524-1644
;
;	and may not be used without permission.
;	Copyright 1982 - Steven G. Duff
;
	.PAGE
	.SBTTL	SPITBOL - Revision History
	IDENT	SPITBOL,D,1
;
; V42-D1 31-DEC-1983 [SGD]:
; o Revise conditional symbols for V4.2 SPITBOL/MINIMAL
;
; V36-C2 10-SEP-1983 [SGD]:
; o Change version to reflect new translation of MVW
;
; V36-C1 02-MAY-1983 [SGD]:
; o Set for V3.6 - add following definitions
;
;   .CNBT - no batch initializing code (fouls initial -CASE)
;   .CULC - define
;   .CUCF - no define
;   .CUST - no define
;   .CUEJ - define
;
; V35-B2 17-APR-1982 [SGD]:
; o Added CHAR function and fixed some bugs (see interpreter)
;
; V35-B1 11-MAR-1982 [SGD]:
; o Use version of interpreter containing BUFFERs
;
; V35-A5 10-MAR-1982 [SGD]:
; o Patch SGD13 (fix access violation on RETURN-type tracing) in SPITV35
; o CHK macro translation changed.
;
; V35-A4 17-AUG-1981 [SGD]:
; o Patch SGD12 in SPITV35
;
; V35-A3 08-AUG-1981 [SGD]:
; o Patch SGD11 in SPITV35
;
; V35-A2 01-AUG-1981 [SGD]:
; o Patch SGD10 in SPITV35
;
	.PAGE
;
;	CONDITIONAL ASSEMBLY SYMBOLS
;	----------------------------
;
;	Note that ALL conditional assembly symbols must be defined globally.
;	a zero is equivalent to a Minimal .UNDEF, any other value is
;	a .DEF .
;
	CASL==	1	;DEFINE LOWER CASE LETTERS
	CAHT==	1	;DEFINE HORIZONTAL TAB
	CAVT==	1	;DEFINE VERTICAL TAB
	CEPP==	0	;NO ADDRESS PARITY FOR ENTRIES (SISSY MACHINES)
	CNBF==	0	;DONT OMIT BUFFER TYPE
	CNBT==	1	;TAKE OUT BATCH INITIALIZING CODE
	CNEX==	0	;EXIT() CODE
	CNFN==	0	;FENCE() CODE
	CNLD==	0	;LOAD() CODE
	CNPF==	0	;&PROFILE CODE
	CNRA==	0	;LEAVE IN REAL ARITHMETIC
	CNSR==	0	;LEAVE IN SORT CODE
	CPLC==	0	;REAL MEN PREFER UPPER CASE
	CRPP==	0	;NO ODD PARITY RETURN POINTS (MICROS ONLY)
	CS16==	0	;NO 16 BIT STUFF
	CSAX==	1	;CALL SYSAX (CAN'T HURT)
	CSCI==	0	;NO REMOTE INT-STR CONVERSION (SYSCI) IT'S SLOWER!
	CSCV==	0	;NO CUL CLU CASE CONVERSION
	CSIG=	1	;IGNORE CASE OF LETTERS
	CSN6==	0	;PAD STMT NOS. NOT TO 6 CHARACTERS...
	CSN8==	1	;...BUT EIGHT.
	CTMD==	0	;TIME UNITS ARE MILLISECONDS, NOT DECISECS.
	CUCF==	0	;CFP$U - don't need
	CUEJ==	1	;Suppress needless ejects
	CULC==	1	;Case folding
	CUST==	1	;SET() code
;
;	Here are the Register Mappings from Minimal to VAX...
;
;	RA	R2	(Real Accumulator)
;	CP	R3	(Code Pointer Register)
;	IA2	R4	(For Remaindering of IA)
;	IA	R5	(Integer Accumulator)
;	WA	R6	(Minimal Work Register A)
;	WB	R7	(Minimal Work Register B)
;	WC	R8	(Minimal Work Register C)
;	XR	R9	(Minimal Index Register R)
;	XL/XT	R10	(Minimal Index Register L)
;	SR	R11	(Intra-instruction Scratch Register)
;	XS	SP	(Minimal/Vax Stack Pointer)
;
	.PAGE
