.data
.globl _strings
.align 2; _strings:.long _1
.long _2
.long _3
.long _4
.long 0
.text
_4:.ascii "while\000"
_3:.ascii "else\000"
_2:.ascii "for\000"
_1:.ascii "if\000"
.text
.globl _main
_main:.word 0x0
subl2 $48,sp
movl $0,r1
movl r1,r0
L5:ret
.globl _features
_features:.word 0x40
subl2 $144,sp
moval 4(ap),r1
moval 4(ap),r2
movl (r2),r2
movl r2,(r1)
moval 8(ap),r1
moval 8(ap),r2
movl (r2),r2
movl r2,(r1)
moval _i,r1
movl $0,r2
movl r2,(r1)
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
movl (r1),r2
addl3 r3,r2,r2
movl r2,(r1)
movl (r1),r2
addl3 r3,r2,r2
movl r2,(r1)
movl (r1),r2
movl $2,r4
addl3 r4,r2,r2
movl r2,(r1)
movl (r1),r1
ashl r4,r1,r1
moval _b,r2
addl3 r2,r1,r2
movl r3,(r2)
moval _a,r2
addl3 r2,r1,r1
movl r3,(r1)
moval _i,r1
movl (r1),r1
moval _j,r2
movl (r2),r2
subl3 r2,r1,r3
movl $2,r4
ashl r4,r3,r3
moval _a+4,r5
addl3 r5,r3,r3
movl $0,r5
movl r5,(r3)
addl3 r2,r1,r2
ashl r4,r2,r2
moval _a,r3
addl3 r3,r2,r2
movl r5,(r2)
ashl r4,r1,r1
addl3 r3,r1,r1
movl r5,(r1)
moval _n,r1
movl $10,r2
movl (r1),r3
mull3 r3,r2,r2
moval _c,r3
movb (r3),r3
cvtbl r3,r3
addl3 r3,r2,r2
movl $48,r3
subl3 r3,r2,r2
movl r2,(r1)
moval _limit,r1
moval _bsize,r2
movl (r2),r2
moval _buffer+137,r4
addl3 r4,r2,r2
movl r2,(r1)
moval _buffer+137,r2
movl r2,(r1)
moval _cp,r1
movl r2,(r1)
movl $0,r1
movl r1,0(sp)
moval _i,r1
movl (r1),r1
movl r1,4(sp)
movl $2,r2
ashl r2,r1,r1
moval _a,r2
addl3 r2,r1,r1
movl (r1),r2
addl3 r3,r2,r2
movl r2,8(sp)
movl r1,12(sp)
moval _foo,r1
calls $0,(r1)
moval _i,r1
movl $0,r2
movl r2,(r1)
L8:L9:moval _i,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval _i,r1
movl (r1),r1
movl $15,r2
cmpl r1,r2; jlss L8
L10:moval _c,r1
movb (r1),r1
cvtbl r1,r1
movl $32,r2
cmpl r1,r2; jeql L16
movl $9,r2
cmpl r1,r2; jeql L16
movl $10,r2
cmpl r1,r2; jneq L13
L16:L13:moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r3
moval _a,r4
addl3 r4,r3,r3
movl (r3),r3
movl $0,r5
cmpl r3,r5; jeql L17
moval _j,r3
movl (r3),r3
addl3 r3,r1,r6
ashl r2,r6,r6
addl3 r4,r6,r4
movl (r4),r4
cmpl r4,r5; jeql L17
subl3 r3,r1,r1
ashl r2,r1,r1
moval _a+4,r2
addl3 r2,r1,r1
movl (r1),r1
cmpl r1,r5; jeql L17
L17:moval _i,r1
movl (r1),r1
movl $1,r2
addl3 r2,r1,r1
movl $0,r2
cmpl r1,r2; jeql L19
L19:moval _getchar,r1
calls $0,(r1); movl r0,r1
moval _i,r2
movl r1,(r2)
movl $-1,r2
cmpl r1,r2; jeql L21
moval _i,r1
movl (r1),r1
movl r1,0(sp)
moval _isletter,r1
calls $0,(r1); movl r0,r1
movl $0,r2
cmpl r1,r2; jneq L21
L21:moval _c,r1
movb (r1),r2
cvtbl r2,r2
movl r2,0(sp)
moval _isletter,r2
movl r1,-124(fp)
calls $0,(r2); movl r0,r2
movl -124(fp),r1
cvtlb r2,r2
movb r2,(r1)
cvtbl r2,r1
movl $0,r2
cmpl r1,r2; jeql L23
L23:moval _i,r1
moval _j,r2
movl (r2),r2
movl r2,(r1)
movl $0,r1
cmpl r2,r1; jeql L25
L25:moval _i,r1
movl (r1),r1
movl $0,r2
cmpl r1,r2; jeql L30
moval _s1,r1
movl (r1),r1
movl r1,r1
movl $0,r2
cmpl r1,r2; jnequ L29
L30:moval _s1,r1
movl (r1),r1
movl r1,r2
movl $0,r3
cmpl r2,r3; jeqlu L27
movb (r1),r1
cvtbl r1,r1
movl $0,r2
cmpl r1,r2; jeql L27
L29:L27:moval _i,r1
movl (r1),r1
movl $5,r2
ashl r2,r1,r1
moval _nodes+8,r2
addl3 r2,r1,r2
moval _nodes+8+4,r3
addl3 r3,r1,r1
movl (r1),r1
movl r1,(r2)
moval _i,r1
movl (r1),r1
movl $5,r2
ashl r2,r1,r1
moval _nodes+8+4,r2
addl3 r2,r1,r2
movl $0,r3
movl r3,(r2)
moval _nodes+8,r2
addl3 r2,r1,r1
movl r3,(r1)
moval _p,r1
movl (r1),r1
movl $8,r2
addl3 r2,r1,r2
movl $12,r3
addl3 r3,r1,r1
movl (r1),r1
movl r1,(r2)
moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _p,r2
movl (r2),r2
movl $12,r3
addl3 r3,r2,r3
addl3 r3,r1,r3
movl $0,r4
movl r4,(r3)
movl $8,r3
addl3 r3,r2,r2
addl3 r2,r1,r1
movl r4,(r1)
moval _p,r1
movl (r1),r2
movl $32,r3
addl3 r3,r2,r2
movl r2,(r1)
movl (r1),r2
addl3 r3,r2,r2
movl r2,(r1)
movl (r1),r1
movl r1,r1
moval _q,r2
movl (r2),r2
movl r2,r2
cmpl r1,r2; jlequ L32
L32:moval _alloc,r1
calls $0,(r1); movl r0,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval _pp,r1
movl (r1),r1
movl (r1),r1
movl $4,r2
addl3 r2,r1,r1
movl (r1),r1
movl r1,0(sp)
moval _foo,r1
calls $0,(r1)
moval _pp,r1
movl (r1),r1
movl (r1),r1
movl $4,r2
addl3 r2,r1,r1
movl r1,0(sp)
moval _foo,r1
calls $0,(r1)
moval _s1,r1
movl (r1),r1
movl $0,r2
movb r2,(r1)
moval _s1,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
movl (r1),r2
addl3 r3,r2,r2
movl r2,(r1)
movl (r1),r2
addl3 r3,r2,r3
movl r3,(r1)
movl $0,r1
movb r1,(r2)
moval _s1,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r3
movl r3,(r1)
moval _c,r1
movb (r1),r1
cvtbl r1,r1
cvtlb r1,r1
movb r1,(r2)
moval _s1,r1
movl (r1),r1
movb (r1),r1
cvtbl r1,r1
movl $0,r2
cmpl r1,r2; jneq L37
L37:moval _s1,r1
movl (r1),r1
movb (r1),r1
cvtbl r1,r1
moval _s2,r2
movl (r2),r2
movb (r2),r2
cvtbl r2,r2
cmpl r1,r2; jneq L39
L39:moval _s1,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r3
movl r3,(r1)
movb (r2),r1
cvtbl r1,r1
movl $0,r2
cmpl r1,r2; jneq L41
L41:moval _s1,r1
movl (r1),r1
movl r1,r1
moval _s2,r2
movl (r2),r2
movl r2,r2
cmpl r1,r2; jlequ L44
L44:moval _s1,r1
movl (r1),r2
movl $-1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval _limit,r1
movl (r1),r4
addl3 r3,r4,r3
movl r3,(r1)
movb (r3),r1
movb r1,(r2)
cvtbl r1,r1
movl $10,r2
cmpl r1,r2; jeql L46
L46:moval _s1,r1
movl (r1),r1
movb (r1),r1
cvtbl r1,r1
movl $0,r2
cmpl r1,r2; jeql L48
movl $10,r2
cmpl r1,r2; jeql L48
L48:moval _ss,r1
moval _strings,r2
movl r2,(r1)
movl (r1),r1
movl $0,r2
movl r2,(r1)
moval _ss,r1
movl (r1),r1
movl (r1),r1
movl $0,r2
movb r2,(r1)
moval _ss,r1
movl (r1),r2
movl $4,r3
addl3 r3,r2,r2
movl r2,(r1)
moval _j,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval _i,r4
movl r2,(r4)
movl (r1),r2
addl3 r3,r2,r5
movl r5,(r1)
movl r2,(r4)
moval _s1,r1
movl (r1),r2
addl3 r3,r2,r4
movl r4,(r1)
moval _s2,r1
movl (r1),r4
addl3 r3,r4,r3
movl r3,(r1)
movl $0,r1
movb r1,(r4)
movb r1,(r2)
moval _s1,r1
movl (r1),r2
movl $-1,r3
addl3 r3,r2,r2
movl r2,(r1)
movl (r1),r4
addl3 r3,r4,r3
movl r3,(r1)
movl $0,r1
movb r1,(r3)
movb r1,(r2)
moval _inc,r1
calls $0,(r1); movl r0,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r2
movl r2,(r1)
moval _inc,r1
calls $0,(r1); movl r0,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r3
movl r3,(r1)
moval _i,r1
movl r2,(r1)
moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _af,r2
addl3 r2,r1,r1
movf (r1),r2
moval _56,r3
movf (r3),r3
addf3 r3,r2,r2
movf r2,(r1)
moval _i,r1
moval _j,r2
movl (r2),r2
movl r2,(r1)
movl r2,0(sp)
moval _n,r1
movl (r1),r2
movl $1,r3
subl3 r3,r2,r2
movl r2,(r1)
movl r2,4(sp)
moval _s1,r1
movl (r1),r2
addl3 r3,r2,r3
movl r3,(r1)
movb (r2),r1
cvtbl r1,r1
movl r1,8(sp)
moval _foo,r1
calls $0,(r1)
moval _j,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _i,r2
movl (r2),r2
movl $4,r3
ashl r3,r2,r2
moval _xg,r3
addl3 r3,r2,r2
addl3 r2,r1,r1
movl $0,r2
movl r2,(r1)
moval _j,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _i,r3
movl (r3),r3
ashl r2,r3,r2
moval _yg,r3
addl3 r3,r2,r2
movl (r2),r2
addl3 r2,r1,r1
movl $0,r2
movl r2,(r1)
moval _j,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _i,r2
movl (r2),r2
movl $4,r3
ashl r3,r2,r2
moval 4(ap),r3
movl (r3),r3
addl3 r3,r2,r2
addl3 r2,r1,r1
movl $0,r2
movl r2,(r1)
moval _j,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _i,r3
movl (r3),r3
ashl r2,r3,r2
moval 8(ap),r3
movl (r3),r3
addl3 r3,r2,r2
movl (r2),r2
addl3 r2,r1,r1
movl $0,r2
movl r2,(r1)
moval _j,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _i,r2
movl (r2),r2
movl $4,r3
ashl r3,r2,r2
moval -48(fp),r3
addl3 r3,r2,r2
addl3 r2,r1,r1
movl $0,r2
movl r2,(r1)
moval _j,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r1
moval _i,r3
movl (r3),r3
ashl r2,r3,r2
moval -60(fp),r3
addl3 r3,r2,r2
movl (r2),r2
addl3 r2,r1,r1
movl $0,r2
movl r2,(r1)
moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r2
moval _yg,r3
addl3 r3,r2,r2
movl $4,r3
ashl r3,r1,r1
moval _xg,r3
addl3 r3,r1,r1
movl r1,(r2)
moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r2
moval _yg,r3
addl3 r3,r2,r2
movl $4,r3
ashl r3,r1,r1
moval _xg,r3
addl3 r3,r1,r1
movl r1,(r2)
moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r2
moval 8(ap),r3
movl (r3),r3
addl3 r3,r2,r2
movl $4,r3
ashl r3,r1,r1
moval 4(ap),r3
movl (r3),r3
addl3 r3,r1,r1
movl r1,(r2)
moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r2
moval 8(ap),r3
movl (r3),r3
addl3 r3,r2,r2
movl $4,r3
ashl r3,r1,r1
moval 4(ap),r3
movl (r3),r3
addl3 r3,r1,r1
movl r1,(r2)
moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r2
moval -60(fp),r3
addl3 r3,r2,r2
movl $4,r3
ashl r3,r1,r1
moval -48(fp),r3
addl3 r3,r1,r1
movl r1,(r2)
moval _i,r1
movl (r1),r1
movl $2,r2
ashl r2,r1,r2
moval -60(fp),r3
addl3 r3,r2,r2
movl $4,r3
ashl r3,r1,r1
moval -48(fp),r3
addl3 r3,r1,r1
movl r1,(r2)
moval _j,r1
movl (r1),r1
movl $3,r2
cmpl r1,r2; jgeq L59
moval -64(fp),r1
movl $1,r2
movl r2,(r1)
jbr L60
L59:moval -64(fp),r1
movl $0,r2
movl r2,(r1)
L60:moval _i,r1
moval -64(fp),r2
movl (r2),r2
movl r2,(r1)
moval _i,r1
movl (r1),r2
movl $0,r3
cmpl r2,r3; jeql L62
moval _j,r2
movl (r2),r2
cmpl r2,r3; jeql L62
moval -64(fp),r2
movl $1,r3
movl r3,(r2)
jbr L63
L62:moval -64(fp),r2
movl $0,r3
movl r3,(r2)
L63:moval _i,r2
movl (r2),r2
movl $0,r3
cmpl r2,r3; jneq L66
moval _j,r2
movl (r2),r2
cmpl r2,r3; jeql L64
L66:moval -68(fp),r2
movl $1,r3
movl r3,(r2)
jbr L65
L64:moval -68(fp),r2
movl $0,r3
movl r3,(r2)
L65:moval -64(fp),r2
movl (r2),r2
moval -68(fp),r3
movl (r3),r3
addl3 r3,r2,r2
movl r2,(r1)
moval _i,r1
movl (r1),r2
movl $0,r3
cmpl r2,r3; jeql L67
moval -68(fp),r2
moval _j,r3
movl (r3),r3
movl r3,(r2)
jbr L68
L67:moval -68(fp),r2
moval _k,r3
movl (r3),r3
movl r3,(r2)
L68:moval -68(fp),r2
movl (r2),r2
movl r2,(r1)
moval _i,r1
movl (r1),r2
movl $0,r3
cmpl r2,r3; jeql L69
moval -64(fp),r2
moval _j,r3
movl (r3),r3
movl r3,(r2)
jbr L70
L69:moval _k,r2
movl (r2),r2
movl $0,r3
cmpl r2,r3; jeql L71
moval -68(fp),r2
moval _l,r3
movl (r3),r3
movl r3,(r2)
jbr L72
L71:moval -68(fp),r2
moval _m,r3
movl (r3),r3
movl r3,(r2)
L72:moval -64(fp),r2
moval -68(fp),r3
movl (r3),r3
movl r3,(r2)
L70:moval -64(fp),r2
movl (r2),r2
movl r2,(r1)
moval _i,r1
movl (r1),r2
movl $0,r3
cmpl r2,r3; jeql L73
moval _j,r2
movl (r2),r2
movl $0,r3
cmpl r2,r3; jeql L75
moval -68(fp),r2
moval _k,r3
movl (r3),r3
movl r3,(r2)
jbr L76
L75:moval -68(fp),r2
moval _l,r3
movl (r3),r3
movl r3,(r2)
L76:moval -64(fp),r2
moval -68(fp),r3
movl (r3),r3
movl r3,(r2)
jbr L74
L73:moval -64(fp),r2
moval _m,r3
movl (r3),r3
movl r3,(r2)
L74:moval -64(fp),r2
movl (r2),r2
movl r2,(r1)
moval _j,r1
movl (r1),r1
movl $0,r2
cmpl r1,r2; jeql L77
moval -68(fp),r1
movl $0,r2
movl r2,(r1)
jbr L78
L77:moval _foo,r1
calls $0,(r1); movl r0,r1
moval -68(fp),r2
movl r1,(r2)
L78:moval _i,r1
moval -68(fp),r2
movl (r2),r2
movl r2,(r1)
moval _u,r1
movl $0xffffffff,r2
movl r2,(r1)
movl (r1),r1
movl $0,r2
cmpl r1,r2; jlss L80
moval -76(fp),r2
cvtld r1,r3
movd r3,(r2)
jbr L81
L80:moval -76(fp),r2
cvtld r1,r3
moval _82,r1
movd (r1),r5
addd3 r5,r3,r3
movd r3,(r2)
L81:moval _d,r1
moval -76(fp),r2
movd (r2),r2
movd r2,(r1)
moval _u,r1
moval _d,r2
movd (r2),r2
cvtdl r2,r2
movl r2,(r1)
movl (r1),r1
movl $5,r2
xorl3 r2,r1,r1
moval _i,r1
movl (r1),r1
movl $5,r2
xorl3 r2,r1,r1
moval _c,r1
movb (r1),r1
cvtbl r1,r1
cmpl r1,r2; jneq L83
L83:moval _d,r1
movd (r1),r1
moval _87,r3
movd (r3),r3
cmpd r1,r3; jneq L85
L85:moval _f,r1
movf (r1),r1
moval _90,r2
movf (r2),r2
cmpf r1,r2; jneq L88
L88:moval _i,r1
movl (r1),r1
movl $5,r2
cmpl r1,r2; jneq L91
L91:moval _u,r1
movl (r1),r1
movl $5,r2
cmpl r1,r2; jnequ L93
L93:moval _s1,r1
moval _u,r2
movl (r2),r2
movl r2,r2
movl r2,(r1)
movl $0,r1
movl r1,0(sp)
moval _foo,r1
calls $0,(r1)
movl $1,r1
movl r1,0(sp)
moval _foo,r1
calls $0,(r1)
movl $0,r1
movl r1,0(sp)
moval _foo,r1
calls $0,(r1)
movl $1,r1
movl r1,0(sp)
moval _foo,r1
calls $0,(r1)
movl $2,r1
movl r1,0(sp)
moval _foo,r1
calls $0,(r1)
L95:moval _i,r1
movl (r1),r1
movl $0,r2
cmpl r1,r2; jeql L98
moval _i,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r3
movl r3,(r1)
moval -80(fp),r1
movl r2,(r1)
jbr L99
L98:moval _i,r1
movl (r1),r2
movl $1,r3
subl3 r3,r2,r2
movl r2,(r1)
moval -80(fp),r1
movl r2,(r1)
L99:moval -80(fp),r1
movl (r1),r1
movl r1,r0
jbr L6
L100:moval _i,r1
movl (r1),r2
movl $1,r3
addl3 r3,r2,r3
movl r3,(r1)
moval _ip,r1
movl (r1),r1
movl r2,(r1)
movl r2,r0
jbr L6
L102:moval _s1,r1
movl (r1),r1
movl r1,0(sp)
moval _strlen,r1
calls $0,(r1); movl r0,r1
movl $1,r2
addl3 r2,r1,r1
movl r1,0(sp)
moval _malloc,r1
calls $0,(r1); movl r0,r1
movl r1,r0
L6:ret
.globl _passold
_passold:.word 0x0
subl2 $80,sp
moval 4(ap),r1
moval 4(ap),r2
movl (r2),r2
cvtlb r2,r2
movb r2,(r1)
moval 16(ap),r1
moval 16(ap),r2
movd (r2),r2
cvtdf r2,r2
movf r2,(r1)
moval 4(ap),r1
movb (r1),r1
cvtbl r1,r1
movl r1,0(sp)
moval 8(ap),r1
movd (r1),r1
movd r1,4(sp)
moval 16(ap),r1
movf (r1),r1
cvtfd r1,r1
movd r1,12(sp)
moval 24(ap),r1
movl (r1),r1
movl r1,20(sp)
moval 28(ap),r1
movl (r1),r1
movl r1,24(sp)
moval 32(ap),r1
movl (r1),r1
movl r1,28(sp)
moval _passold,r1
calls $0,(r1)
L103:ret
.globl _passnew
_passnew:.word 0x0
subl2 $76,sp
moval 4(ap),r1
moval 4(ap),r2
movl (r2),r2
cvtlb r2,r2
movb r2,(r1)
moval 4(ap),r1
movb (r1),r1
cvtbl r1,r1
movl r1,0(sp)
moval 8(ap),r1
movd (r1),r1
movd r1,4(sp)
moval 16(ap),r1
movf (r1),r1
movf r1,12(sp)
moval 20(ap),r1
movl (r1),r1
movl r1,16(sp)
moval 24(ap),r1
movl (r1),r1
movl r1,20(sp)
moval 28(ap),r1
movl (r1),r1
movl r1,24(sp)
moval _passnew,r1
calls $0,(r1)
L104:ret
.globl _structvalue
_structvalue:.word 0x0
subl2 $68,sp
movl r1,-4(fp)
moval -12(fp),r1
moval 4(ap),r2
moval (r2),r2
movc3 $8,(r2),(r1)
moval 4+4(ap),r1
movl $0,r2
movl r2,(r1)
moval -12+4(fp),r1
movl $0,r2
movl r2,(r1)
moval 4(ap),r1
moval (r1),r2
movl r1,-56(fp)
movl r2,-52(fp)
movc3 $8,(r2),0(sp)
movl -56(fp),r1
movl -52(fp),r2
moval _structvalue,r2
calls $0,(r2)
moval 4(ap),r1
movl $4,r2
addl3 r2,r1,r1
movl (r1),r1
movl $0,r2
cmpl r1,r2; jeql L107
moval -4(fp),r1
movl (r1),r1
moval 4(ap),r2
moval (r2),r2
movc3 $8,(r2),(r1)
jbr L105
L107:moval 4(ap),r1
moval (r1),r1
movl r1,-56(fp)
movc3 $8,(r1),0(sp)
movl -56(fp),r1
moval _structvalue,r1
moval -4(fp),r2
movl (r2),r2
movl r1,r0
movl r2,r1
calls $0,(r0)
jbr L105
L108:L105:ret
.globl _alloc
_alloc:.word 0x0
subl2 $48,sp
L110:ret
.globl _foo
_foo:.word 0x0
subl2 $48,sp
L111:ret
.globl _inc
_inc:.word 0x0
subl2 $48,sp
L112:ret
.globl _isletter
_isletter:.word 0x0
subl2 $48,sp
L113:ret
.text
.align 2; _90:.float 0f5.00000000e+00
.align 2; _87:.double 0d5.000000000000000000e+00
.align 2; _82:.double 0d4.294967296000000000e+09
.align 2; _56:.float 0f1.00000000e+00
.data
.globl _c
_c:.space 1
.globl _d
.align 2; _d:.space 8
.globl _f
.align 2; _f:.space 4
.globl _pp
.align 2; _pp:.space 4
.globl _q
.align 2; _q:.space 4
.globl _p
.align 2; _p:.space 4
.globl _nodes
.align 2; _nodes:.space 320
.globl _u
.align 2; _u:.space 4
.globl _yg
.align 2; _yg:.space 12
.globl _xg
.align 2; _xg:.space 48
.globl _b
.align 2; _b:.space 40
.globl _a
.align 2; _a:.space 40
.globl _r
.align 2; _r:.space 4
.globl _n
.align 2; _n:.space 4
.globl _m
.align 2; _m:.space 4
.globl _l
.align 2; _l:.space 4
.globl _k
.align 2; _k:.space 4
.globl _j
.align 2; _j:.space 4
.globl _ip
.align 2; _ip:.space 4
.globl _i
.align 2; _i:.space 4
.globl _bsize
.align 2; _bsize:.space 4
.globl _ss
.align 2; _ss:.space 4
.globl _s2
.align 2; _s2:.space 4
.globl _s1
.align 2; _s1:.space 4
.globl _limit
.align 2; _limit:.space 4
.globl _cp
.align 2; _cp:.space 4
.globl _buffer
_buffer:.space 136
.globl _af
.align 2; _af:.space 40
#import _strlen
#import _malloc
#import _getchar
#end
