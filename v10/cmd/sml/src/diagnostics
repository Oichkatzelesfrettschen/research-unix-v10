hello there
[setsoftmax()]
[softmax := 23000000]
[setratio()]
[ratio := 40]
[globalhandle := false]
[dumpCore := true]
[setreducemore()]
[reducemore := 0]
[setrounds()]
[rounds := 10]
[setbodysize()]
[bodysize := 20]
[mBoot()]
signature ASSEMBLY
[closing boot/assembly.sig]
[Compiling boot/core.sml]
functor CoreFunc

[Increasing heap to 4305k]
[closing boot/core.sml]
structure Dummy
structure Core
[closing boot/dummy.sml]
signature REF
signature LIST
signature ARRAY
signature BYTEARRAY
signature BASICIO
signature IO
signature BOOL
signature STRING
signature INTEGER
signature BITS
signature REAL
signature GENERAL
[closing boot/perv.sig]
signature RUNTIMECONTROL
signature MCCONTROL
signature CGCONTROL
signature PRINTCONTROL
signature DEBUG
signature PROFILE
signature PROFILEINTERNALS
signature CONTROL
signature TIMER
signature TAGS
signature STATS
signature UNSAFE
signature SYSTEM
[closing boot/system.sig]
[Compiling boot/math.sml]
signature MATH
structure Math
boot/math.sml, line 366: Warning: match not exhaustive
        0 => ...
        1 => ...

[Increasing heap to 6289k]

[Increasing heap to 10025k]

[Increasing heap to 10425k]

[Increasing heap to 12233k]

[Increasing heap to 12673k]

[Increasing heap to 17569k]
[closing boot/math.sml]
[Compiling boot/perv.sml]
structure Initial
boot/perv.sml, line 1537: Warning: match not exhaustive
        0 => ...
        1 => ...
boot/perv.sml, line 1537: Warning: binding not exhaustive
        ref ((k,h) :: r) = ...
boot/perv.sml, line 1537: Warning: binding not exhaustive
        ref ((k,h) :: r) = ...
boot/perv.sml, line 1537: Warning: binding not exhaustive
        l' as (_,_,_,ticks) :: _ = ...
boot/perv.sml, line 1537: Warning: match not exhaustive
        8487555 => ...
        58884480 => ...

[Increasing heap to 20017k]

[Increasing heap to 21241k]

[Increasing heap to 21849k]

[Increasing heap to 21921k]

[Increasing heap to 21937k]

[Major collection... 17% used (2017320/11559504), 7480 msec]

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 17% used (2004336/11640896), 7360 msec]

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 14% used (1716672/11566880), 6080 msec]

Warning: can't increase heap
[closing boot/perv.sml]
structure Overloads
[closing boot/overloads.sml]
[Compiling boot/loader.sml]
signature Startup
functor Loader
[closing boot/loader.sml]
[Compiling util/errormsg.sig]
signature ERRORMSG
[closing util/errormsg.sig]
[Compiling util/errormsg.sml]
structure ErrorMsg
[closing util/errormsg.sml]
[Compiling util/dynamic.sml]
signature STATIC_ARRAY
signature DYNAMIC_ARRAY
functor Dynamic
[closing util/dynamic.sml]
[Compiling util/sort.sml]
structure Sort
[closing util/sort.sml]
[Compiling util/sortedlist.sml]
structure SortedList
[closing util/sortedlist.sml]
[Compiling util/binsort.sml]
structure BinSort
[closing util/binsort.sml]
[Compiling util/list2.sml]
structure List2
[closing util/list2.sml]
[Compiling util/intmap.sig]
signature INTMAP
[closing util/intmap.sig]
[Compiling util/intmap.sml]
structure Intmap
[closing util/intmap.sml]
[Compiling util/intstrmap.sig]
signature INTSTRMAP
[closing util/intstrmap.sig]
[Compiling util/intstrmap.sml]
structure IntStrMap
[closing util/intstrmap.sml]
[Compiling util/intset.sml]
structure Intset
[closing util/intset.sml]
[Compiling util/strghash.sml]
structure StrgHash
[closing util/strghash.sml]
[Compiling util/topsort.sml]
structure Topsort
[closing util/topsort.sml]
[Compiling util/union.sml]
signature UNIONFIND
structure Unionfind
signature SIBLINGS
structure Siblings
[closing util/union.sml]
[Compiling util/arrayext.sml]
signature ARRAYEXT
structure ArrayExt
[closing util/arrayext.sml]
[Compiling basics/symbol.sig]
signature SYMBOL
[closing basics/symbol.sig]
[Compiling basics/symbol.sml]
structure Symbol
[closing basics/symbol.sml]
[Compiling basics/token.sml]
signature TOKEN
structure Token
[closing basics/token.sml]
[Compiling basics/printutil.sig]
signature PRINTUTIL
[closing basics/printutil.sig]
[Compiling basics/printutil.sml]
structure PrintUtil
basics/printutil.sml, line 73: Warning: match not exhaustive
        s :: nil => ...
        a :: r => ...
[closing basics/printutil.sml]
[Compiling lex/ascii.sml]
structure Ascii
[closing lex/ascii.sml]
[Compiling lex/ml.lex.sml]
structure Mlex

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 9% used (1148408/11534984), 3630 msec]

Warning: can't increase heap
[closing lex/ml.lex.sml]
[Compiling lex/hookup.sml]
signature LEX
structure Lex
[closing lex/hookup.sml]
[Compiling basics/primop.sig]
signature PRIMOP
[closing basics/primop.sig]
[Compiling basics/access.sig]
signature ACCESS
[closing basics/access.sig]
[Compiling basics/access.sml]
structure Access
basics/access.sml, line 130: Warning: match not exhaustive
        ! => ...
        * => ...
        + => ...
        - => ...
        := => ...
        < => ...
        <= => ...
        > => ...
        >= => ...
        alength => ...
        boxed => ...
        div => ...
        cast => ...
        eql => ...
        fadd => ...
        fdiv => ...
        feql => ...
        fge => ...
        fgt => ...
        fle => ...
        flt => ...
        fmul => ...
        fneg => ...
        fneq => ...
        fsub => ...
        gethdlr => ...
        ieql => ...
        ineq => ...
        neq => ...
        makeref => ...
        ordof => ...
        profile => ...
        sethdlr => ...
        slength => ...
        callcc => ...
        throw => ...
        store => ...
        subscript => ...
        unboxedassign => ...
        unboxedupdate => ...
        update => ...
        ~ => ...
        rshift => ...
        lshift => ...
        orb => ...
        andb => ...
        xorb => ...
        notb => ...
[closing basics/access.sml]
[Compiling basics/stampset.sig]
signature STAMPSET
[closing basics/stampset.sig]
[Compiling basics/stampset.sml]
structure Stampset
[closing basics/stampset.sml]
[Compiling basics/basics.sig]
signature BASICS
[closing basics/basics.sig]
[Compiling basics/basics.sml]
structure Basics
[closing basics/basics.sml]
[Compiling basics/tuples.sml]
signature TUPLES
structure Tuples
[closing basics/tuples.sml]
[Compiling basics/basictypes.sig]
signature BASICTYPES
[closing basics/basictypes.sig]
[Compiling basics/basictypes.sml]
structure BasicTypes
basics/basictypes.sml, line 143: Warning: binding not exhaustive
        TYCON {stamp=unitTyconStamp,...} = ...
basics/basictypes.sml, line 143: Warning: binding not exhaustive
        ref (TYCON {stamp=arrowStamp,...}) = ...
[closing basics/basictypes.sml]
[Compiling basics/typesutil.sig]
signature TYPESUTIL
[closing basics/typesutil.sig]
[Compiling basics/typesutil.sml]
structure TypesUtil
basics/typesutil.sml, line 515: Warning: binding not exhaustive
        ty2 :: argTys' = ...
basics/typesutil.sml, line 515: Warning: match not exhaustive
        TYCON {eq=eq,path=path,...} => ...
basics/typesutil.sml, line 515: Warning: binding not exhaustive
        CONty (ref tyc',_) = ...
basics/typesutil.sml, line 515: Warning: binding not exhaustive
        CONty (ref tyc',_) = ...
basics/typesutil.sml, line 515: Warning: match not exhaustive
        (nil,_) => ...
        ((tv as ref (UBOUND <pat>)) :: rest,n) => ...
basics/typesutil.sml, line 515: Warning: binding not exhaustive
        TYCON {arity=arity,eq=eq,kind=kind,path=path',stamp=stamp} = ...
basics/typesutil.sml, line 515: Warning: binding not exhaustive
        STRstr {env=env,...} = ...

Warning: can't increase heap
[closing basics/typesutil.sml]
[Compiling basics/modutil.sig]
signature MODUTIL
[closing basics/modutil.sig]
[Compiling basics/modutil.sml]
structure ModUtil
basics/modutil.sml, line 151: Warning: binding not exhaustive
        STRstr {kind=SIGkind {stamps=pstamps as <pat>,...},sign=psign,stamp=pstamp,...} = ...
basics/modutil.sml, line 151: Warning: binding not exhaustive
        newenv as REL {s=s,...} = ...
[closing basics/modutil.sml]
[Compiling env/env.sig]
signature ENV
[closing env/env.sig]
[Compiling env/env.sml]
structure Env
[closing env/env.sml]
[Compiling env/namespace.sig]
signature NAMESPACE
[closing env/namespace.sig]
[Compiling env/namespace.sml]
structure NameSpace
[closing env/namespace.sml]
[Compiling env/prim.sml]
structure Prim
[closing env/prim.sml]
[Compiling env/namespace.sig]
signature NAMESPACE
[closing env/namespace.sig]
[Compiling env/namespace.sml]
structure NameSpace
[closing env/namespace.sml]
[Compiling env/envaccess.sig]
signature ENVACCESS
[closing env/envaccess.sig]
[Compiling env/envaccess.sml]
structure EnvAccess
env/envaccess.sml, line 632: Warning: binding not exhaustive
        STRvar {binding=INDstr k,...} = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        STRvar {access=PATH ap,binding=binding,...} = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        STRvar {access=SLOT n,binding=binding,...} = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        (FIXbind (FIXvar {binding=binding,...}),_) = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        (FCTbind fv,_) = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        (STRbind str,info) = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        (STRbind str,info) = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        STRbind strvar = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        (SIGbind sign,_) = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        (TYVbind tyv,_) = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        VARbind v = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        ref (TYCON {arity=arity,kind=UNDEFtyc newpath,path=id :: _,...}) = ...
env/envaccess.sml, line 632: Warning: binding not exhaustive
        TYCbind tycref = ...

Warning: can't increase heap

[Major collection... 11% used (1389516/11697780), 4760 msec]

Warning: can't increase heap

Warning: can't increase heap
[closing env/envaccess.sml]
[Compiling env/buildmod.sig]
signature BUILDMOD
[closing env/buildmod.sig]
[Compiling env/buildmod.sml]
structure BuildMod
[closing env/buildmod.sml]
[Compiling env/coreinfo.sig]
signature COREINFO
[closing env/coreinfo.sig]
[Compiling env/coreinfo.sml]
structure CoreInfo
env/coreinfo.sml, line 44: Warning: binding not exhaustive
        VARbind x = ...
env/coreinfo.sml, line 44: Warning: binding not exhaustive
        VARbind (VALvar {access=PATH p,...}) = ...
[closing env/coreinfo.sml]
[Compiling basics/printtype.sml]
signature PRINTTYPE
structure PrintType
basics/printtype.sml, line 243: Warning: binding not exhaustive
        domain :: range :: nil = ...
basics/printtype.sml, line 243: Warning: match not exhaustive
        TYCON {kind=RECORDtyc labels,...} => ...
        TYCON {kind=UNDEFtyc _,path=name :: _,...} => ...
        TYCON {kind=DEFtyc (TYFUN {body=<pat>,...}),path=path,stamp=stamp,...} => ...
        TYCON {kind=kind,path=path,stamp=stamp,...} => ...
        INDtyc i => ...
        SHRtyc p => ...
        RELtyc p => ...
basics/printtype.sml, line 243: Warning: binding not exhaustive
        TYCON {stamp=arrowStamp,...} = ...
basics/printtype.sml, line 243: Warning: match not exhaustive
        ABStyc => ...
        DEFtyc _ => ...
        DATAtyc _ => ...
        RECORDtyc _ => ...
[closing basics/printtype.sml]
[Compiling basics/printbas.sml]
structure PrintBasics
[closing basics/printbas.sml]
[Compiling basics/conrep.sml]
structure ConRep
[closing basics/conrep.sml]
[Compiling basics/lambda.sml]
signature LAMBDA
structure Lambda
basics/lambda.sml, line 89: Warning: match not exhaustive
        (DATACON {rep=TAGGED i,...},e) => ...
        (DATACON {rep=TRANSPARENT,...},e) => ...
        (DATACON {rep=TRANSU,...},e) => ...
        (DATACON {rep=TRANSB,...},e) => ...
        (DATACON {rep=REF,...},e) => ...
        (DATACON {const=true,rep=VARIABLE (PATH <pat>),...},e) => ...
        (DATACON {rep=VARIABLE (PATH <pat>),...},e) => ...
        (DATACON {rep=CONSTANT i,...},e) => ...
basics/lambda.sml, line 89: Warning: match not exhaustive
        i :: nil => ...
        a :: r => ...
[closing basics/lambda.sml]
[Compiling absyn/bareabsyn.sig]
signature BAREABSYN
[closing absyn/bareabsyn.sig]
[Compiling absyn/bareabsyn.sml]
structure BareAbsyn
[closing absyn/bareabsyn.sml]
[Compiling absyn/absyn.sml]
structure Absyn
absyn/absyn.sml, line 139: Warning: match not exhaustive
        x :: nil => ...
        a :: r => ...
[closing absyn/absyn.sml]
[Compiling absyn/printabsyn.sml]
signature PRINTABSYN
structure PrintAbsyn
[closing absyn/printabsyn.sml]
[Compiling typing/overload.sig]
signature OVERLOAD
[closing typing/overload.sig]
[Compiling typing/overload.sml]
structure Overload
[closing typing/overload.sml]
[Compiling typing/typecheck.sig]
signature TYPECHECK
[closing typing/typecheck.sig]
[Compiling typing/typecheck.sml]
structure Typecheck
typing/typecheck.sml, line 418: Warning: binding not exhaustive
        VALvar {typ=refty,...} = ...
typing/typecheck.sml, line 418: Warning: match not exhaustive
        (exp as APPexp (rator,rand),abs_rator) => ...
typing/typecheck.sml, line 418: Warning: binding not exhaustive
        VARpat (VALvar {typ=refty,...}) = ...

Warning: can't increase heap

[Major collection... 11% used (1389048/11616348), 4930 msec]

Warning: can't increase heap
[closing typing/typecheck.sml]
[Compiling typing/sharing.sig]
signature SHARING
[closing typing/sharing.sig]
[Compiling typing/sharing.sml]
structure Sharing
typing/sharing.sml, line 214: Warning: binding not exhaustive
        STRstr {stamp=s2,...} = ...
typing/sharing.sml, line 214: Warning: binding not exhaustive
        STRstr {stamp=s1,...} = ...
typing/sharing.sml, line 214: Warning: binding not exhaustive
        str2 as STRstr {stamp=s2,...} = ...
typing/sharing.sml, line 214: Warning: binding not exhaustive
        str1 as STRstr {stamp=s1,...} = ...
typing/sharing.sml, line 214: Warning: binding not exhaustive
        str as STRstr {env=env as REL <pat>,kind=kind,sign=sign,stamp=stamp,table=table} = ...
typing/sharing.sml, line 214: Warning: match not exhaustive
        REL {s=s,t=t} => ...
typing/sharing.sml, line 214: Warning: match not exhaustive
        (str1 as STRstr {env=REL <pat>,kind=k1,stamp=s1,...},str2 as STRstr {env=env2 as <pat>,kind=k2,stamp=s2,table=table,...}) => ...
typing/sharing.sml, line 214: Warning: match not exhaustive
        (p' as STRstr {stamp=p,...},q' as STRstr {stamp=q,...}) => ...
typing/sharing.sml, line 214: Warning: match not exhaustive
        (table,env as REL {s=senv,t=tenv},{strStamps=strStamps,tycStamps=tycStamps},{s=strShare,t=typeShare}) => ...
typing/sharing.sml, line 214: Warning: binding not exhaustive
        id :: rpath = ...
typing/sharing.sml, line 214: Warning: match not exhaustive
        (nil,str) => ...
        (id :: rest,STRstr {env=env,table=table,...}) => ...
[closing typing/sharing.sml]
[Compiling typing/sigmatch.sig]
signature SIGMATCH
[closing typing/sigmatch.sig]
[Compiling typing/sigmatch.sml]
structure SigMatch
typing/sigmatch.sml, line 296: Warning: binding not exhaustive
        DATACON {rep=VARIABLE access,typ=typ',...} = ...
typing/sigmatch.sml, line 296: Warning: match not exhaustive
        (REL {s=sSig,t=tSig} : Basics.strenv,REL {s=sStr,t=tStr} : Basics.strenv) => ...
typing/sigmatch.sml, line 296: Warning: binding not exhaustive
        newenv as REL {s=s,t=t} = ...
[closing typing/sigmatch.sml]
[Compiling typing/functor.sig]
signature FUNCTOR
[closing typing/functor.sig]
[Compiling typing/functor.sml]
structure Functor
typing/functor.sml, line 457: Warning: binding not exhaustive
        str as STRstr {env=env as REL <pat>,...} = ...
typing/functor.sml, line 457: Warning: binding not exhaustive
        STRkind {path=path'} = ...
typing/functor.sml, line 457: Warning: binding not exhaustive
        STRkind {path=path'} = ...
typing/functor.sml, line 457: Warning: binding not exhaustive
        STRstr {kind=SIGkind {stamps={strStamps=<pat>,tycStamps=<pat>},...},...} = ...
typing/functor.sml, line 457: Warning: binding not exhaustive
        str' as STRstr {sign=sign,...} = ...
typing/functor.sml, line 457: Warning: binding not exhaustive
        tyc as TYCON {arity=arity,eq=eq,kind=kind,path=spath,stamp=stamp} = ...

Warning: can't increase heap
[closing typing/functor.sml]
[Compiling print/printval.sig]
signature PRINTVAL
[closing print/printval.sig]
[Compiling print/printval.sml]
structure PrintVal
print/printval.sml, line 161: Warning: match not exhaustive
        (nf,l :: nil,ty :: nil) => ...
        (nf,l :: restl,ty :: restty) => ...
        (nf,nil,nil) => ...
print/printval.sml, line 161: Warning: match not exhaustive
        "nil" => ...
        "::" => ...
print/printval.sml, line 161: Warning: match not exhaustive
        CONty (_,dom :: _) => ...
        POLYty {tyfun=TYFUN {body=CONty <pat>,...},...} => ...
print/printval.sml, line 161: Warning: match not exhaustive
        (_,_,_,0,_,_) => ...
        (obj : unit,tyc as TYCON {arity=arity,...},argtys,depth : int,l : Basics.fixity,r : Basics.fixity) => ...
print/printval.sml, line 161: Warning: match not exhaustive
        ABStyc => ...
        DEFtyc _ => ...
        DATAtyc _ => ...
        RECORDtyc nil => ...
        RECORDtyc labels => ...
print/printval.sml, line 161: Warning: match not exhaustive
        (obj,TYCON {kind=DATAtyc dcons,...}) => ...
[closing print/printval.sml]
[Compiling print/printdec.sig]
signature PRINTDEC
[closing print/printdec.sig]
[Compiling print/printdec.sml]
structure PrintDec
print/printdec.sml, line 195: Warning: match not exhaustive
        VALdec vbs => ...
        VALRECdec rvbs => ...
        TYPEdec tbs => ...
        DATATYPEdec {datatycs=datatycs,withtycs=withtycs} => ...
        ABSTYPEdec {abstycs=abstycs,body=body,withtycs=withtycs} => ...
        EXCEPTIONdec ebs => ...
        STRdec strbs => ...
        FCTdec fctbs => ...
        SIGdec sigvars => ...
        LOCALdec (decIn,decOut) => ...
        SEQdec decs => ...
        OPENdec strvs => ...
        IMPORTdec _ => ...
        MARKdec (dec,a,b) => ...
print/printdec.sml, line 195: Warning: binding not exhaustive
        TYCON {arity=arity,eq=eq,kind=kind,path=name :: _,...} = ...
print/printdec.sml, line 195: Warning: match not exhaustive
        str as STRstr {env=env,kind=kind,table=table,...} => ...
print/printdec.sml, line 195: Warning: match not exhaustive
        ref (TYCON {arity=arity,kind=DATAtyc dcons,path=name :: _,...}) => ...
print/printdec.sml, line 195: Warning: match not exhaustive
        ref (TYCON {arity=arity,eq=eq,kind=ABStyc,path=name :: _,...}) => ...
print/printdec.sml, line 195: Warning: match not exhaustive
        TB {def=def,tyc=ref (TYCON {arity=<pat>,path=<pat>,...})} => ...
print/printdec.sml, line 195: Warning: match not exhaustive
        (lookup,RVB {var=VALvar {access=<pat>,name=<pat>,typ=<pat>},...}) => ...
[closing print/printdec.sml]
[Compiling parse/first.sml]
structure FirstSets

[Major collection... 10% used (1228148/11537604), 3980 msec]

Warning: can't increase heap
[closing parse/first.sml]
[Compiling parse/misc.sig]
signature MISC
[closing parse/misc.sig]
[Compiling parse/misc.sml]
structure Misc
parse/misc.sml, line 199: Warning: binding not exhaustive
        oldstrvar as STRvar {binding=binding,name=name as <pat> :: <pat>,...} = ...
parse/misc.sml, line 199: Warning: binding not exhaustive
        STRstr {env=env,table=table,...} = ...
[closing parse/misc.sml]
[Compiling parse/parse.sig]
signature PARSE
[closing parse/parse.sig]
[Compiling parse/parse.sml]
structure Parse
parse/parse.sml, line 1720: Warning: binding not exhaustive
        LVAR plvar = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        STRstr {env=env,table=table,...} = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        param as STRstr {env=env,table=table,...} = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        TYCON {kind=DATAtyc dcons,...} = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        bottom :: rest = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        STRvar {binding=INDstr k,...} = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        newenv as REL {s=s,t=t} = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        VARexp (ref (v as VALvar {typ=<pat>,...})) = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
    
Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap
    DATATYPEdec {datatycs=datatycs,withtycs=withtycs} = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        TYPEdec x = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        SOME id = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        CLAUSE {pats=p1,...} :: _ = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        _ :: rest = ...
parse/parse.sml, line 1720: Warning: binding not exhaustive
        _ :: rest = ...

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 32% used (3839968/11787352), 13110 msec]

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 28% used (3355224/11730180), 11260 msec]

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 27% used (3256376/11698692), 11040 msec]

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 16% used (1980552/11773820), 7230 msec]

Warning: can't increase heap
[closing parse/parse.sml]
[Compiling codegen/opt.sml]
structure CGoptions
signature OPT
structure Opt
codegen/opt.sml, line 520: Warning: match not exhaustive
        (FN (v,a),(f',c')) => ...
codegen/opt.sml, line 520: Warning: match not exhaustive
        FN (v,a) => ...
codegen/opt.sml, line 520: Warning: match not exhaustive
        FN (v,e) => ...
codegen/opt.sml, line 520: Warning: match not exhaustive
        v :: nil => ...
        i :: p => ...
codegen/opt.sml, line 520: Warning: match not exhaustive
        SWITCH (e,l,d) => ...
codegen/opt.sml, line 520: Warning: binding not exhaustive
        VAR w = ...
codegen/opt.sml, line 520: Warning: match not exhaustive
        v :: nil => ...
        i :: r => ...

Warning: can't increase heap

Warning: can't increase heap
[closing codegen/opt.sml]
[Compiling codegen/backpatch.sml]
signature BACKPATCH
signature JUMPS
functor Backpatch
codegen/backpatch.sml, line 105: Warning: match not exhaustive
        0 => ...
        1 => ...
        2 => ...
        3 => ...
[closing codegen/backpatch.sml]
[Compiling codegen/interp.sml]
structure Interp
codegen/interp.sml, line 221: Warning: match not exhaustive
        (n :: nl,f :: fl) => ...
        (nil,_) => ...
codegen/interp.sml, line 221: Warning: match not exhaustive
        (v :: path,answer) :: rest => ...
        nil => ...
codegen/interp.sml, line 221: Warning: match not exhaustive
        (DATAcon (DATACON {const=true,rep=VARIABLE <pat>,...}),a) => ...
        (DATAcon (DATACON {const=false,rep=VARIABLE <pat>,...}),a) => ...
codegen/interp.sml, line 221: Warning: match not exhaustive
        (REALcon i,a) => ...
codegen/interp.sml, line 221: Warning: match not exhaustive
        (INTcon i,a) => ...
codegen/interp.sml, line 221: Warning: match not exhaustive
        (STRINGcon i,a) => ...
codegen/interp.sml, line 221: Warning: match not exhaustive
        (DATAcon (DATACON {rep=<pat>,...}),ans) :: rest => ...
        (DATAcon (DATACON {rep=<pat>,...}),ans) :: rest => ...
        (DATAcon (DATACON {rep=<pat>,...}),ans) :: rest => ...
        (DATAcon (DATACON {rep=<pat>,...}),ans) :: rest => ...
        nil => ...
codegen/interp.sml, line 221: Warning: match not exhaustive
        APP (FN (v,b),a) => ...
        APP (a,b) => ...
        FN (v,b) => ...
        SELECT (i,a) => ...
        RECORD nil => ...
        RECORD (a :: b :: nil) => ...
        RECORD (a :: b :: c :: nil) => ...
        RECORD (a :: b :: c :: <pat> :: <pat>) => ...
        RECORD (a :: b :: c :: <pat> :: <pat>) => ...
        RECORD (a :: b :: c :: <pat> :: <pat>) => ...
        RECORD l => ...
        INT i => ...
        STRING s => ...
        REAL s => ...
        PRIM cast => ...
        PRIM + => ...
        PRIM - => ...
        PRIM * => ...
        PRIM div => ...
        PRIM orb => ...
        PRIM andb => ...
        PRIM xorb => ...
        PRIM rshift => ...
        PRIM lshift => ...
        PRIM ! => ...
        PRIM := => ...
        PRIM unboxedassign => ...
        PRIM makeref => ...
        PRIM ~ => ...
        PRIM ieql => ...
        PRIM ineq => ...
        PRIM > => ...
        PRIM < => ...
        PRIM >= => ...
        PRIM <= => ...
        PRIM subscript => ...
        PRIM update => ...
        PRIM unboxedupdate => ...
        PRIM alength => ...
        PRIM slength => ...
        PRIM store => ...
        PRIM ordof => ...
        PRIM fneg => ...
        PRIM fadd => ...
        PRIM fdiv => ...
        PRIM fmul => ...
        PRIM fsub => ...
        PRIM feql => ...
        PRIM fneq => ...
        PRIM fgt => ...
        PRIM fge => ...
        PRIM fle => ...
        PRIM flt => ...
        PRIM boxed => ...
        PRIM callcc => ...
        PRIM throw => ...
        PRIM _ => ...
        VAR v => ...
        HANDLE (a,b) => ...
        RAISE a => ...
        FIX (nl,fl,b) => ...
        SWITCH (e,l as (<pat>,<pat>) :: _,SOME d) => ...
        SWITCH (e,l as (<pat>,<pat>) :: _,SOME d) => ...
        SWITCH (e,l as (<pat>,<pat>) :: _,SOME d) => ...
        SWITCH (e,l as (<pat>,<pat>) :: _,SOME d) => ...
        SWITCH (e,l as (<pat>,<pat>) :: _,d) => ...
codegen/interp.sml, line 221: Warning: match not exhaustive
        (i,r,"." :: s) => ...
        (i,r,s as "E" :: _) => ...
        (i,r,d :: s) => ...
[closing codegen/interp.sml]
[Compiling translate/mcprint.sml]
signature MCprint
structure MCprint
translate/mcprint.sml, line 174: Warning: match not exhaustive
        (c,l) :: nil => ...
        (c,l) :: more => ...
translate/mcprint.sml, line 174: Warning: match not exhaustive
        (v :: nil,l :: nil) => ...
        (v :: vs,l :: ls) => ...
        (nil,nil) => ...

[Major collection... 12% used (1472732/11498124), 5020 msec]

Warning: can't increase heap
[closing translate/mcprint.sml]
[Compiling translate/mcopt.sml]
signature MCOPT
structure MCopt
translate/mcopt.sml, line 197: Warning: match not exhaustive
        (a,x :: xs) => ...
translate/mcopt.sml, line 197: Warning: match not exhaustive
        (a :: _,b) => ...
translate/mcopt.sml, line 197: Warning: match not exhaustive
        (a :: _,b) => ...
translate/mcopt.sml, line 197: Warning: match not exhaustive
        APPpat (DATACON {name=r2,...},_) => ...
        CONpat _ => ...
translate/mcopt.sml, line 197: Warning: match not exhaustive
        CONpat (DATACON {name=r2,...}) => ...
        APPpat _ => ...
translate/mcopt.sml, line 197: Warning: match not exhaustive
        INTpat j => ...
translate/mcopt.sml, line 197: Warning: match not exhaustive
        REALpat s => ...
translate/mcopt.sml, line 197: Warning: match not exhaustive
        STRINGpat t => ...
[closing translate/mcopt.sml]
[Compiling translate/mc.sml]
signature MC
structure MC
translate/mc.sml, line 488: Warning: binding not exhaustive
        ((con,lexp) :: nil,_) = ...
translate/mc.sml, line 488: Warning: binding not exhaustive
        ((DATAcon dcon,list) :: nil,_) = ...
translate/mc.sml, line 488: Warning: match not exhaustive
        INTpat j => ...
translate/mc.sml, line 488: Warning: match not exhaustive
        REALpat s => ...
translate/mc.sml, line 488: Warning: match not exhaustive
        STRINGpat t => ...

Warning: can't increase heap
[closing translate/mc.sml]
[Compiling translate/nonrec.sml]
structure Nonrec
[closing translate/nonrec.sml]
[Compiling translate/equal.sml]
signature EQUAL
structure Equal
[closing translate/equal.sml]
[Compiling translate/unboxed.sml]
structure Unboxed
[closing translate/unboxed.sml]
[Compiling translate/translate.sml]
signature TRANSLATE
structure Translate
translate/translate.sml, line 204: Warning: match not exhaustive
        VALdec vbl => ...
        a as VALRECdec rvbl => ...
        LOCALdec (localdec,visibledec) => ...
        EXCEPTIONdec ebl => ...
        SEQdec decl => ...
        DATATYPEdec _ => ...
        ABSTYPEdec {body=body,...} => ...
        TYPEdec _ => ...
        STRdec sbl => ...
        ABSdec sbl => ...
        FCTdec fbl => ...
        SIGdec _ => ...
        OPENdec _ => ...
        MARKdec (dec,a,b) => ...
translate/translate.sml, line 204: Warning: binding not exhaustive
        bogusID :: matchsym :: bindsym :: nil = ...
[closing translate/translate.sml]
[Compiling bignums/bigint.sig]
signature BIGINT
[closing bignums/bigint.sig]
[Compiling bignums/bigint.sml]
structure Bigint
[closing bignums/bigint.sml]
[Compiling bignums/realconst.sml]
signature PRIMREAL
signature REALCONST
functor RealConst
[closing bignums/realconst.sml]
[Compiling build/codes.sig]
signature CODEGENERATOR
signature ASSEMBLER
[closing build/codes.sig]
[Compiling build/prof.sml]
signature PROF
structure Prof

[Major collection... 14% used (1708292/11541668), 5480 msec]

Warning: can't increase heap
[closing build/prof.sml]
[Compiling build/process.sml]
signature PROCESSFILE
structure ProcessFile
build/process.sml, line 335: Warning: binding not exhaustive
        STRvar {binding=STRstr {table=otable,...},...} = ...
build/process.sml, line 335: Warning: binding not exhaustive
        svInitial as STRvar {access=PATH (<pat> :: <pat>),binding=strInitial as STRstr <pat>,...} = ...
build/process.sml, line 335: Warning: binding not exhaustive
        STRvar {access=PATH (lvMath :: nil),...} = ...
build/process.sml, line 335: Warning: binding not exhaustive
        svCore as STRvar {access=PATH (<pat> :: <pat>),...} = ...
build/process.sml, line 335: Warning: match not exhaustive
        sb as STRB {strvar=STRvar {access=<pat>,name=<pat>,...},...} => ...
build/process.sml, line 335: Warning: match not exhaustive
        sb as STRB {strvar=STRvar {access=<pat>,name=<pat>,...},...} => ...
build/process.sml, line 335: Warning: match not exhaustive
        fb as FCTB {fctvar=FCTvar {access=<pat>,name=<pat>,...},...} => ...
build/process.sml, line 335: Warning: binding not exhaustive
        FCTB {fctvar=FCTvar {access=LVAR <pat>,...},...} = ...
build/process.sml, line 335: Warning: binding not exhaustive
        STRB {strvar=STRvar {access=LVAR <pat>,...},...} = ...
build/process.sml, line 335: Warning: binding not exhaustive
        STRstr {table=table,...} = ...
build/process.sml, line 335: Warning: binding not exhaustive
        firstId :: rest = ...
build/process.sml, line 335: Warning: binding not exhaustive
        STRvar {access=SLOT n,binding=binding,...} = ...
build/process.sml, line 335: Warning: match not exhaustive
        (nil,str) => ...
        (id :: rest,STRstr {env=env,table=table,...}) => ...
[closing build/process.sml]
[Compiling build/batch.sml]
functor Batch
[closing build/batch.sml]
[Compiling sepcomp/filepaths.sig]
signature FILEPATHS
[closing sepcomp/filepaths.sig]
[Compiling sepcomp/filepaths.sml]
functor UnixPaths
[closing sepcomp/filepaths.sml]
[Compiling sepcomp/moduleComp.sig]
signature MODULE_COMPILER
[closing sepcomp/moduleComp.sig]
[Compiling sepcomp/moduleComp.sml]
functor ModuleComp
[closing sepcomp/moduleComp.sml]
[Compiling sepcomp/importer.sig]
signature IMPORTER
[closing sepcomp/importer.sig]
[Compiling sepcomp/importer.sml]
functor Importer

Warning: can't increase heap
[closing sepcomp/importer.sml]
[Compiling build/interact.sml]
functor Interact
[closing build/interact.sml]
[Compiling cps/cps.sml]
signature CPS
structure CPS
[closing cps/cps.sml]
[Compiling cps/size.sml]
structure CPSsize
[closing cps/size.sml]
[Compiling cps/profile.sml]
structure Profile
[closing cps/profile.sml]
[Compiling cps/cpsprint.sml]
structure CPSprint
[closing cps/cpsprint.sml]
[Compiling cps/freemap.sml]
signature FREEMAP
structure FreeMap

[Major collection... 13% used (1538504/11569500), 4980 msec]

Warning: can't increase heap
[closing cps/freemap.sml]
[Compiling cps/reorder.sml]
structure Reorder
cps/reorder.sml, line 83: Warning: match not exhaustive
        x :: y :: nil => ...
[closing cps/reorder.sml]
[Compiling cps/convert.sml]
structure Convert
cps/convert.sml, line 420: Warning: match not exhaustive
        ((e,l as (<pat>,<pat>) :: _,d),c) => ...
cps/convert.sml, line 420: Warning: match not exhaustive
        (n,1,1) => ...
        (n,0,1) => ...
        (n,0,2) => ...
cps/convert.sml, line 420: Warning: match not exhaustive
        (f :: fl,FN (v,b) :: el) => ...
        (nil,nil) => ...
cps/convert.sml, line 420: Warning: match not exhaustive
        (INTcon j,a) => ...
cps/convert.sml, line 420: Warning: match not exhaustive
        (STRINGcon s,x) :: r => ...
        nil => ...
cps/convert.sml, line 420: Warning: binding not exhaustive
        p1 :: p2 :: nil = ...
cps/convert.sml, line 420: Warning: match not exhaustive
        (STRINGcon j,e) => ...
cps/convert.sml, line 420: Warning: match not exhaustive
        (STRINGcon s,_) => ...
cps/convert.sml, line 420: Warning: binding not exhaustive
        (low,_) :: r = ...
cps/convert.sml, line 420: Warning: match not exhaustive
        x :: nil => ...
        _ :: r => ...
cps/convert.sml, line 420: Warning: match not exhaustive
        (0,_,_) => ...
        (n,i,l as (j,b) :: r) => ...
cps/convert.sml, line 420: Warning: binding not exhaustive
        c2 as (l,_,_,_) :: r = ...
cps/convert.sml, line 420: Warning: match not exhaustive
        stuff as (l,u,n,x) :: r => ...

Warning: can't increase heap

Warning: can't increase heap
[closing cps/convert.sml]
[Compiling cps/hoist.sml]
structure Hoist
cps/hoist.sml, line 145: Warning: match not exhaustive
        RECORD' (vl,w,e,_) => ...
        SELECT' (i,v,w,e,_) => ...
        PRIMOP' (i,vl,wl,el) => ...
        SWITCH' (v,el) => ...
        APP' (f,vl) => ...
        FIX' (l,_,e,_) => ...
cps/hoist.sml, line 145: Warning: match not exhaustive
        RECORD' (vl,w,e,v3) => ...
        SELECT' (i,v,w,e,v3) => ...
        PRIMOP' (i,vl,wl,(e,_) :: nil) => ...
        PRIMOP' (i,vl,wl,el) => ...
        SWITCH' (v,el) => ...
        e as APP' (f,vl) => ...
        FIX' (m,v3,e',v4) => ...
cps/hoist.sml, line 145: Warning: match not exhaustive
        RECORD (vl,w,e) => ...
        SELECT (i,v,w,e) => ...
        PRIMOP (i,vl,wl,e :: nil) => ...
        PRIMOP (i,vl,wl,el) => ...
        APP (f,vl) => ...
        SWITCH (v,el) => ...
        FIX (l,e) => ...
[closing cps/hoist.sml]
[Compiling cps/cpsopt.sml]
functor CPSopt
cps/cpsopt.sml, line 682: Warning: binding not exhaustive
        (v,OFFp 0) = ...
cps/cpsopt.sml, line 682: Warning: match not exhaustive
        Arg {escape=ref esc,record=ref rl,savings=ref save} => ...
        Sel {savings=ref save} => ...
cps/cpsopt.sml, line 682: Warning: match not exhaustive
        RECORD (vl,w,ce) => ...
        SELECT (i,v,w,ce) => ...
        APP (v,vl) => ...
        FIX (l,ce) => ...
        SWITCH (v,l) => ...
        PRIMOP (i,vl,wl,ce) => ...
cps/cpsopt.sml, line 682: Warning: match not exhaustive
        RECORD (vl,w,ce) => ...
        SELECT (i,v,w,ce) => ...
        APP (v,vl) => ...
        FIX (l,ce) => ...
        SWITCH (v,l) => ...
        PRIMOP (i,vl,wl,ce) => ...
cps/cpsopt.sml, line 682: Warning: match not exhaustive
        RECORD (vl,w,e) => ...
        SELECT (i,v,w,e) => ...
        APP (f,vl) => ...
        FIX (l,e) => ...
        SWITCH (v,el) => ...
        PRIMOP (args as (boxed,_,_,_)) => ...
        PRIMOP (args as (<,_,_,_)) => ...
        PRIMOP (args as (<=,_,_,_)) => ...
        PRIMOP (args as (>,_,_,_)) => ...
        PRIMOP (args as (>=,_,_,_)) => ...
        PRIMOP (args as (ieql,_,_,_)) => ...
        PRIMOP (args as (ineq,_,_,_)) => ...
        PRIMOP (args as (*,_,_,_)) => ...
        PRIMOP (args as (div,_,_,_)) => ...
        PRIMOP (args as (+,_,_,_)) => ...
        PRIMOP (args as (-,_,_,_)) => ...
        PRIMOP (args as (rshift,_,_,_)) => ...
        PRIMOP (args as (slength,_,_,_)) => ...
        PRIMOP (args as (ordof,_,_,_)) => ...
        PRIMOP (args as (~,_,_,_)) => ...
        PRIMOP (args as (lshift,_,_,_)) => ...
        PRIMOP (args as (orb,_,_,_)) => ...
        PRIMOP (args as (xorb,_,_,_)) => ...
        PRIMOP (args as (notb,_,_,_)) => ...
        PRIMOP (args as (andb,_,_,_)) => ...
        PRIMOP (_,vl,wl,el) => ...
cps/cpsopt.sml, line 682: Warning: match not exhaustive
        Fun {size=size,...} => ...
cps/cpsopt.sml, line 682: Warning: binding not exhaustive
        {escape=ref esc,info=RECinfo (_,ref fl),...} = ...
cps/cpsopt.sml, line 682: Warning: binding not exhaustive
        (x,OFFp 0) = ...
cps/cpsopt.sml, line 682: Warning: match not exhaustive
        (x,OFFp 0) => ...
cps/cpsopt.sml, line 682: Warning: binding not exhaustive
        {info=RECinfo (wl,_),...} = ...
cps/cpsopt.sml, line 682: Warning: match not exhaustive
        {escape=ref 0,info=FNinfo {arity=arity as ref <pat>,reduce_ok=reduce_ok,...},used=ref i,...} => ...
        {info=FNinfo {reduce_ok=reduce_ok,...},...} => ...
cps/cpsopt.sml, line 682: Warning: match not exhaustive
        RECORD (vl,w,e) => ...
        SELECT (i,v,w,e) => ...
        APP (f,vl) => ...
        SWITCH (v,el) => ...
        PRIMOP (i,vl,wl,el) => ...
        FIX (l,e) => ...

[Major collection... 15% used (1853224/11594552), 7210 msec]

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 23% used (2719784/11695304), 9480 msec]

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap
[closing cps/cpsopt.sml]
[Compiling cps/globalfix.sml]
signature GLOBALFIX
structure GlobalFix
[closing cps/globalfix.sml]
[Compiling cps/spill.sml]
signature SPILL
functor Spill
cps/spill.sml, line 268: Warning: match not exhaustive
        e as APP (f,vl) => ...
        SWITCH (v,l) => ...
        RECORD (l,w,c) => ...
        SELECT (i,v,w,c) => ...
        OFFSET (i,v,w,c) => ...
        PRIMOP (i,a,w,l) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        (v :: nil,nil,l) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        (v :: nil,w :: nil,c :: nil) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        (v :: nil,w :: nil,c :: nil) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        (f :: vl,nil,nil) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        SWITCH (v,l) => ...
        RECORD (l,w,c) => ...
        SELECT (i,v,w,c) => ...
        OFFSET (i,v,w,c) => ...
        PRIMOP (i,a,r,cl) => ...
        APP (f,vl) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        (v,(w,SELp (<pat>,<pat>))) :: nil => ...
        (v,(w,SELp (<pat>,<pat>))) :: _ => ...
        nil => ...
cps/spill.sml, line 268: Warning: binding not exhaustive
        SOME (l,sv) = ...
cps/spill.sml, line 268: Warning: match not exhaustive
        SWITCH (v,l) => ...
        RECORD (l,w,c) => ...
        SELECT (i,v,w,c) => ...
        OFFSET (i,v,w,c) => ...
        PRIMOP (i,a,nil,cl) => ...
        PRIMOP (i,a,res :: nil,cl) => ...
        APP (f,vl) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        SWITCH (v,l) => ...
        RECORD (l,w,c) => ...
        SELECT (i,v,w,c) => ...
        OFFSET (i,v,w,c) => ...
        PRIMOP (i,a,nil,cl) => ...
        PRIMOP (i,a,res :: nil,cl) => ...
        APP (f,vl) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        SWITCH (v,l) => ...
        RECORD (_,w,_) => ...
        SELECT (_,_,w,_) => ...
        OFFSET (_,_,w,_) => ...
        PRIMOP (_,_,w :: _,_) => ...
        PRIMOP (_,vl,_,_) => ...
        APP (f,vl) => ...
cps/spill.sml, line 268: Warning: match not exhaustive
        (nil,nil) => ...
        (nil,next) => ...
        (SWITCH (v,l) :: r,next) => ...
        (RECORD (l,w,c) :: r,next) => ...
        (SELECT (i,v,w,c) :: r,next) => ...
        (OFFSET (i,v,w,c) :: r,next) => ...
        (PRIMOP (i,a,w,cl) :: r,next) => ...
        (APP (v,vl) :: r,next) => ...

[Major collection... 16% used (1878148/11701764), 6420 msec]

Warning: can't increase heap
[closing cps/spill.sml]
[Compiling cps/cmachine.sig]
signature CMACHINE
[closing cps/cmachine.sig]
[Compiling cps/generic.sml]
functor CPSgen
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: nil,w :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: nil,w :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: nil,w :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (i :: v :: nil,w :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (v :: w :: nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (a :: i :: v :: nil,nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (a :: i :: v :: nil,nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (a :: nil,w :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (a :: nil,w :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (s :: i :: v :: nil,nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (s :: i :: nil,v :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (x :: nil,y :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (SOME i,SOME v) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (index :: incr :: nil,nil,c :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (x :: nil,nil,a :: b :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (nil,x :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (x :: nil,nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (x :: y :: nil,z :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (x :: y :: nil,z :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (x :: y :: nil,z :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (x :: y :: nil,z :: nil,e :: nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        + => ...
        orb => ...
        andb => ...
        xorb => ...
        notb => ...
        lshift => ...
        rshift => ...
        - => ...
        * => ...
        div => ...
        ! => ...
        := => ...
        unboxedassign => ...
        ~ => ...
        makeref => ...
        delay => ...
        ieql => ...
        ineq => ...
        > => ...
        >= => ...
        < => ...
        <= => ...
        subscript => ...
        update => ...
        unboxedupdate => ...
        alength => ...
        slength => ...
        store => ...
        ordof => ...
        fneg => ...
        profile => ...
        boxed => ...
        gethdlr => ...
        sethdlr => ...
        fmul => ...
        fdiv => ...
        fadd => ...
        fsub => ...
        feql => ...
        fneq => ...
        fgt => ...
        flt => ...
        fge => ...
        fle => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        ((branch,test),(v :: w :: nil,nil,d :: e :: nil)) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (args',KNOWN (_,ref (SOME <pat>))) => ...
        (args',KNOWN ((vl,cexp),r as ref <pat>)) => ...
        (args' as _ :: _ :: nil,STANDARD (ref NONE)) => ...
        (args' as _ :: _ :: <pat> :: <pat>,STANDARD (ref NONE)) => ...
        (args' as _ :: _ :: nil,STANDARD (ref (SOME _))) => ...
        (args' as _ :: _ :: <pat> :: <pat>,STANDARD (ref (SOME _))) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (lab :: labs,e :: es) => ...
        (nil,nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        RECORD (vl,w,e) => ...
        SELECT (i,v,w,e) => ...
        OFFSET (i,v,w,e) => ...
        APP (f,args) => ...
        SWITCH (v,l) => ...
        PRIMOP (i,vl,wl,el) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (_,STANDARD (ref NONE)) => ...
        (lab,STANDARD (r as ref (SOME <pat>))) => ...
        (lab,STANDARD (r as ref (SOME <pat>))) => ...
        (_,STANDARD _) => ...
        (_,KNOWN _) => ...
        (lab,CONSTfrag (REALconst r)) => ...
        (lab,CONSTfrag (STRINGconst s)) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (RECORD (fields,_,exp'),max) => ...
        (SELECT (_,_,_,exp'),max) => ...
        (OFFSET (_,_,_,exp'),max) => ...
        (APP _,max) => ...
        (SWITCH (_,lst),max) => ...
        (PRIMOP (makeref,_,_,exp' :: nil),max) => ...
        (PRIMOP (delay,_,_,exp' :: nil),max) => ...
        (PRIMOP (update,_,_,exp' :: nil),max) => ...
        (PRIMOP (:=,_,_,exp' :: nil),max) => ...
        (PRIMOP (fadd,_,_,exp' :: nil),max) => ...
        (PRIMOP (fsub,_,_,exp' :: nil),max) => ...
        (PRIMOP (fmul,_,_,exp' :: nil),max) => ...
        (PRIMOP (fdiv,_,_,exp' :: nil),max) => ...
        (PRIMOP (fneg,_,_,exp' :: nil),max) => ...
        (PRIMOP (_,_,_,exp' :: nil),max) => ...
        (PRIMOP (_,_,_,lst),max) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        (already,a :: ar,b :: br) => ...
        (l,nil,nil) => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        KNOWN (_,ref (SOME fmls)) => ...
        KNOWN (_,ref NONE) => ...
        STANDARD _ => ...
cps/generic.sml, line 551: Warning: binding not exhaustive
        APP (f,wl) = ...
cps/generic.sml, line 551: Warning: match not exhaustive
        RECORD (_,_,e) => ...
        SELECT (_,_,_,e) => ...
        OFFSET (_,_,_,e) => ...
        SWITCH (_,e :: _) => ...
        PRIMOP (_,_,_,e :: _) => ...
        e as APP _ => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        SOME i => ...
cps/generic.sml, line 551: Warning: match not exhaustive
        SOME i => ...
cps/generic.sml, line 551: Warning: binding not exhaustive
        notastandardformal :: _ = ...

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 19% used (2245352/11650964), 7750 msec]

Warning: can't increase heap
[closing cps/generic.sml]
[Compiling cps/closure.sml]
signature CLOSURE
functor Closure
cps/closure.sml, line 706: Warning: binding not exhaustive
        Closure {contents=contents,functions=functions,...} = ...
cps/closure.sml, line 706: Warning: binding not exhaustive
        Closure {contents=contents,...} = ...
cps/closure.sml, line 706: Warning: binding not exhaustive
        n :: t = ...
cps/closure.sml, line 706: Warning: match not exhaustive
        (nil,nil,seen) => ...
        (nil,next,seen) => ...
        ((Closure {contents=<pat>,functions=<pat>,offset=<pat>,stamp=<pat>},p) :: m,next,seen) => ...

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

Warning: can't increase heap

[Major collection... 19% used (2273052/11593256), 7430 msec]

Warning: can't increase heap
[closing cps/closure.sml]
[Compiling cps/cpscomp.sml]
functor CPScomp
[closing cps/cpscomp.sml]
[Compiling cps/shareglue.sml]
functor IntShare
[closing cps/shareglue.sml]
[Compiling cps/nullglue.sml]
structure IntNull
[closing cps/nullglue.sml]
[Compiling vax/vaxcoder.sig]
signature VAXCODER
signature VAXMCODER
[closing vax/vaxcoder.sig]
[Compiling vax/vaxascode.sml]
structure VaxAssem
structure VaxAsCode
[closing vax/vaxascode.sml]
[Compiling vax/vaxmcode.sml]
structure VaxMCode
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        (arg,address lab) => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        address lab => ...
        displace (k,reg 15) => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        displace (i,reg 15) => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        displace (i,reg 15) => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        (immed 0,arg,address lab) => ...
        (arg1,arg2,address lab) => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        (immed 0,arg,address lab) => ...
        (arg1,arg2,address lab) => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        address lab => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        1 => ...
        2 => ...
        4 => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        1 => ...
        2 => ...
        4 => ...
vax/vaxmcode.sml, line 302: Warning: match not exhaustive
        direct (reg r) => ...
        autoinc (reg r) => ...
        autodec (reg r) => ...
        immed i => ...
        displace (i,reg r) => ...
        deferred (i,reg r) => ...
        index (ea,reg r) => ...
        address lab => ...
[closing vax/vaxmcode.sml]
[Compiling vax/vax.sml]
functor VaxCM
vax/vax.sml, line 179: Warning: match not exhaustive
        (i,direct r,s) => ...
vax/vax.sml, line 179: Warning: match not exhaustive
        (i,direct r,s) => ...
        (0,a,s) => ...
vax/vax.sml, line 179: Warning: match not exhaustive
        immedlab lab => ...
vax/vax.sml, line 179: Warning: match not exhaustive
        (i,immedlab lab) => ...
vax/vax.sml, line 179: Warning: binding not exhaustive
        arithtemp as direct arithtemp' = ...
vax/vax.sml, line 179: Warning: binding not exhaustive
        dataptr as direct dataptr' = ...
[closing vax/vax.sml]
[Compiling vax/vaxglue.sml]
structure VaxMC
structure VaxAC
structure IntVax
structure CompVax
[closing vax/vaxglue.sml]
[Compiling m68/m68coder.sig]
signature M68CODER
signature M68MCODER
[closing m68/m68coder.sig]
[Compiling m68/m68ascode.sml]
structure M68Assem
structure M68AsCode
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as (src,dest as Direct (FloatReg <pat>)) => ...
        arg as (src as Direct (FloatReg <pat>),dest) => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
        arg as Displace (AddrReg _,_) => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
        arg as Displace (AddrReg a,i) => ...
        arg as Index _ => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        (_,Direct (AddrReg _)) => ...
        (_,Immed _) => ...
        (src as Direct (DataReg d),dest) => ...
        (src as Immed i,dest) => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        (src,dest as Immed i) => ...
        (src,dest as Direct (DataReg d)) => ...
        (src,dest as Direct (AddrReg a)) => ...
        (src as Immed i,dest) => ...
        (src as PostInc (AddrReg y),dest as PostInc (AddrReg x)) => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        (_,Immed _) => ...
        (src as Immed i,dest as Direct (AddrReg a)) => ...
        (src,dest as Direct (AddrReg a)) => ...
        (src as Immed i,dest) => ...
        (src,dest as Direct (DataReg d)) => ...
        (src as Direct (DataReg d),dest) => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        (_,Immed _) => ...
        (src as Immed i,dest as Direct (AddrReg a)) => ...
        (src,dest as Direct (AddrReg a)) => ...
        (src as Immed i,dest) => ...
        (src,dest as Direct (DataReg d)) => ...
        (src as Direct (DataReg d),dest) => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        arg as (Direct (AddrReg a),Direct (AddrReg b)) => ...
        arg as (Direct (DataReg a),Direct (DataReg b)) => ...
        arg as (Direct (AddrReg b),Direct (DataReg a)) => ...
        arg as (Direct (DataReg a),Direct (AddrReg b)) => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        Immed i => ...
        Abs i => ...
        Direct r => ...
        Displace (ra as AddrReg _,0) => ...
        PostInc ra => ...
        PreDec ra => ...
        Displace (r as DataReg _,i) => ...
        Displace (r as AddrReg _,i) => ...
        Index (ra,disp,r,s) => ...
        Address lab => ...
m68/m68ascode.sml, line 365: Warning: match not exhaustive
        DataReg 0 => ...
        DataReg 1 => ...
        DataReg 2 => ...
        DataReg 3 => ...
        DataReg 4 => ...
        DataReg 5 => ...
        DataReg 6 => ...
        DataReg 7 => ...
        AddrReg 0 => ...
        AddrReg 1 => ...
        AddrReg 2 => ...
        AddrReg 3 => ...
        AddrReg 4 => ...
        AddrReg 5 => ...
        AddrReg 6 => ...
        AddrReg 7 => ...
        FloatReg 0 => ...
        FloatReg 1 => ...
        FloatReg 2 => ...
        FloatReg 3 => ...
        FloatReg 4 => ...
        FloatReg 5 => ...
        FloatReg 6 => ...
        FloatReg 7 => ...
        PC => ...

Warning: can't increase heap

[Major collection... 18% used (2134704/11500816), 6830 msec]

Warning: can't increase heap
[closing m68/m68ascode.sml]
[Compiling m68/m68mcode.sml]
structure M68MCode
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (src,dest as Direct (FloatReg f)) => ...
        (src as Direct (FloatReg f),dest) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
        dest as Displace (AddrReg _,_) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
        arg as Displace (AddrReg _,_) => ...
        arg as Index _ => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (_,Direct (AddrReg _)) => ...
        (_,Immed _) => ...
        (Direct (DataReg d),dest) => ...
        (Immed i,dest) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (_,Immed _) => ...
        (src,Direct (DataReg d)) => ...
        (src,Direct (AddrReg a)) => ...
        (Immed i,dest) => ...
        (PostInc (AddrReg y),PostInc (AddrReg x)) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (src,Direct (DataReg d)) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (src,Direct (DataReg d)) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (_,Immed _) => ...
        (src as Immed i,dest as Direct (AddrReg a)) => ...
        (src,Direct (AddrReg a)) => ...
        (src as Immed i,dest) => ...
        (src,Direct (DataReg d)) => ...
        (Direct (DataReg d),dest) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (_,Immed _) => ...
        (src as Immed i,dest as Direct (AddrReg a)) => ...
        (src,Direct (AddrReg a)) => ...
        (src as Immed i,dest) => ...
        (src,Direct (DataReg d)) => ...
        (Direct (DataReg d),dest) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (Direct (DataReg a),Direct (DataReg b)) => ...
        (Direct (AddrReg a),Direct (AddrReg b)) => ...
        (Direct (DataReg a),Direct (AddrReg b)) => ...
        (Direct (AddrReg a),Direct (DataReg b)) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (Direct (AddrReg a),Direct (AddrReg b)) => ...
        (Direct (DataReg a),Direct (DataReg b)) => ...
        (Direct (AddrReg b),Direct (DataReg a)) => ...
        (Direct (DataReg a),Direct (AddrReg b)) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (opcode,Direct (FloatReg a),Direct (FloatReg b)) => ...
        (opcode,src,Direct (FloatReg f)) => ...
        (opcode,Direct (FloatReg f),dest) => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Immed i => ...
        Abs i => ...
        Direct _ => ...
        PostInc _ => ...
        PreDec _ => ...
        Displace (AddrReg _,0) => ...
        Displace (AddrReg _,i) => ...
        Displace (DataReg d,0) => ...
        Displace (DataReg d,i) => ...
        Index (_,disp,DataReg d,s) => ...
        Index (_,disp,AddrReg d,s) => ...
        Address lab => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Direct (DataReg _) => ...
        Direct (AddrReg _) => ...
        Displace (AddrReg _,0) => ...
        PostInc (AddrReg _) => ...
        PreDec (AddrReg _) => ...
        Displace (AddrReg _,_) => ...
        Displace (DataReg _,_) => ...
        Index (PC,_,_,_) => ...
        Index (AddrReg _,_,_,_) => ...
        Abs _ => ...
        Immed _ => ...
        Address _ => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        Direct (DataReg d) => ...
        Direct (AddrReg a) => ...
        PostInc (AddrReg a) => ...
        PreDec (AddrReg a) => ...
        Displace (AddrReg a,_) => ...
        Displace (DataReg a,_) => ...
        Index (PC,_,_,_) => ...
        Index (AddrReg a,_,_,_) => ...
        Abs i => ...
        Immed _ => ...
        Address _ => ...
m68/m68mcode.sml, line 527: Warning: match not exhaustive
        (Jcc opcode,2,s,d) => ...
        (Jcc opcode,4,s,d) => ...
        (Jcc opcode,6,s,d) => ...
        (LABPTR i,_,s,d) => ...
        (LEA opcode,4,s,d) => ...
        (LEA opcode,8,s,d) => ...
        (FJcc cond,4,s,d) => ...
        (FJcc cond,6,s,d) => ...
        (MODE,2,s,d) => ...

Warning: can't increase heap

Warning: can't increase heap
[closing m68/m68mcode.sml]
[Compiling m68/m68.sml]
functor M68CM
m68/m68.sml, line 320: Warning: match not exhaustive
        (x,y,Immed 1) => ...
        (x,Direct y,Immed k) => ...
        (x,Direct y,Direct z) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        (Direct x,y,Immed k) => ...
        (Direct x,y,Direct z) => ...
        (Immedlab lab,y,Direct z) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        (x,Direct y) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        (Direct x,y) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        (i,Direct r,s) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        (i,Direct r,s) => ...
        (0,a,s) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        (s as Immed k,r,d as Direct (DataReg _)) => ...
        (s as Direct (DataReg _),r,d) => ...
        (s as Immed k,r,d) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        (s as Immed k,r,d as Direct (DataReg _)) => ...
        (s as Direct (DataReg _),r,d) => ...
        (s as Immed k,r,d) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        Immedlab lab => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        (i,Immedlab lab) => ...
m68/m68.sml, line 320: Warning: match not exhaustive
        Direct r => ...
m68/m68.sml, line 320: Warning: binding not exhaustive
        ptrtemp as Direct ptrtemp' = ...
m68/m68.sml, line 320: Warning: binding not exhaustive
        arithtemp as Direct arithtemp' = ...
m68/m68.sml, line 320: Warning: binding not exhaustive
        dataptr as Direct dataptr' = ...

[Major collection... 20% used (2317380/11529656), 7370 msec]

Warning: can't increase heap
[closing m68/m68.sml]
[Compiling m68/m68glue.sml]
structure M68MC
structure M68AC
structure IntM68
structure CompM68
[closing m68/m68glue.sml]
[Compiling coder/emitter.sig]
signature EMITTER
[closing coder/emitter.sig]
[Compiling coder/basecoder.sml]
signature BASECODER
structure BaseCoder
[closing coder/basecoder.sml]
[Compiling coder/machinstr.sig]
signature MACHINSTR
[closing coder/machinstr.sig]
[Compiling coder/coder.sml]
signature CODER
functor Coder
coder/coder.sml, line 509: Warning: binding not exhaustive
        (rest,b as CODEBLK (cl,bl)) = ...
coder/coder.sml, line 509: Warning: binding not exhaustive
        SOME e = ...
coder/coder.sml, line 509: Warning: match not exhaustive
        0 => ...
        1 => ...
        2 => ...
        3 => ...

Warning: can't increase heap
[closing coder/coder.sml]
[Compiling coder/ieeereal.sml]
functor IEEEReal
[closing coder/ieeereal.sml]
[Compiling sparc/sparcinstr.sml]
structure SparcInstr
sparc/sparcinstr.sml, line 332: Warning: match not exhaustive
        (SetBaseAddr (ref false,_,_,_),0) => ...
        (SetBaseAddr (ref true,contReg,labexp,_),8) => ...
        (SetBaseAddr (ref true,contReg,LABELexp {base=<pat>,dst=<pat>,offset=<pat>},_),12) => ...
        (SetBaseAddr (ref true,contReg,labexp,tmpR),16) => ...
        (LoadAddr (labexp,dst,_),4) => ...
        (LoadAddr (labexp,dst,tmpR),12) => ...
        (Load (labexp,dst,_),4) => ...
        (Load (labexp,dst,tmpR),12) => ...
        (LoadF (labexp as LABELexp <pat>,FREG i,_),8) => ...
        (LoadF (labexp,FREG i,tmpR),20) => ...
[closing sparc/sparcinstr.sml]
[Compiling sparc/sparcmc.sml]
structure SparcMCode
structure SparcMCEmit
[closing sparc/sparcmc.sml]
[Compiling sparc/sparcas.sml]
structure SparcAsCode
structure SparcAsEmit
[closing sparc/sparcas.sml]
[Compiling sparc/sparc.sml]
functor SparcCM

Warning: can't increase heap

[Major collection... 19% used (2274460/11676340), 7780 msec]

Warning: can't increase heap
[closing sparc/sparc.sml]
[Compiling sparc/sparcglue.sml]
structure SparcMC
structure SparcAC
structure IntSparc
structure CompSparc
[closing sparc/sparcglue.sml]
[Compiling ns32/ns32coder.sig]
signature NS32CODER
signature NS32MCODER
[closing ns32/ns32coder.sig]
[Compiling ns32/ns32ascode.sml]
structure NS32Assem
structure NS32AsCode
[closing ns32/ns32ascode.sml]
[Compiling ns32/ns32mcode.sml]
structure NS32MCode
ns32/ns32mcode.sml, line 379: Warning: match not exhaustive
        OffAddress (lab,i) => ...
        Displace (k,PC) => ...
ns32/ns32mcode.sml, line 379: Warning: match not exhaustive
        OffAddress (lab,i) => ...
ns32/ns32mcode.sml, line 379: Warning: match not exhaustive
        OffAddress (lab,i) => ...
ns32/ns32mcode.sml, line 379: Warning: match not exhaustive
        OffAddress (lab,i) => ...
[closing ns32/ns32mcode.sml]
[Compiling ns32/ns32.sml]
functor NS32CM
ns32/ns32.sml, line 221: Warning: match not exhaustive
        (x,y,Immed 1) => ...
        (x,Direct y,Immed k) => ...
        (x,Direct y,Direct z) => ...
ns32/ns32.sml, line 221: Warning: match not exhaustive
        (Direct x,y,Immed k) => ...
        (Direct x,y,Direct z) => ...
        (Immedlab lab,y,Direct z) => ...
ns32/ns32.sml, line 221: Warning: match not exhaustive
        (s,r,d as Direct (Genreg _)) => ...
ns32/ns32.sml, line 221: Warning: match not exhaustive
        (i,Direct r,s) => ...
ns32/ns32.sml, line 221: Warning: match not exhaustive
        (i,Direct r,s) => ...
        (0,a,s) => ...
ns32/ns32.sml, line 221: Warning: match not exhaustive
        Immedlab lab => ...
ns32/ns32.sml, line 221: Warning: match not exhaustive
        (i,Immedlab lab) => ...
ns32/ns32.sml, line 221: Warning: binding not exhaustive
        arithtemp as Direct arithtemp' = ...
ns32/ns32.sml, line 221: Warning: binding not exhaustive
        dataptr as Direct dataptr' = ...
[closing ns32/ns32.sml]
[Compiling ns32/ns32glue.sml]
structure NS32MC
structure NS32AC
structure IntNS32
structure CompNS32
[closing ns32/ns32glue.sml]
[summary()]
27043 lines
parse, 526.1000000s
translate, 36.620000s
codeopt, 127.560000s
convert, 39.620000s
cpsopt, 1312.360000s
closure, 283.500000s
globalfix, 7.250000s
spill, 261.240000s
codegen, 657.250000s
freemap, 29.730000s
execution, 0.0s
garbagetime, 658.240000s
total 4026.680000s
collections: 878 minor, 22 major
250087 collected from 6639085 possible (3%)
1662 knowngen
1137 knowncl
12923 stdgen
[globalhandle := true]
[dumpCore := false]
[Exporting to upto.all]

[Major collection... 24% used (1827456/7355416), 5750 msec]

Warning: can't increase heap

[Major collection... 99% used (1830612/1831476), 5760 msec]

Warning: can't increase heap
hello there
