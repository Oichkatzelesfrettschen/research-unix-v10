Mbasic	basic.c	?^main(argc,argv,envp)$?
__end	stop.c	?^__end()$?
__goto	goto.c	?^__goto()$?
__if	if.c	?^__if()$?
__input	input.c	?^__input()$?
__print	print.c	?^__print()$?
__read	read.c	?^__read()$?
__return	gosub.c	?^__return()$?
__seek	bseek.c	?^__seek()$?
_closef	bfiles.c	?^_closef()$?
_common	common.c	?^_common()$?
_else	belse.c	?^_else()$?
_endif	belse.c	?^_endif()$?
_for	for.c	?^_for()$?
_int	evalx.c	?^double _int(num)$?
_random	random.c	?^_random()$?
absolute	evalx.c	?^double absolute(num)$?
abt	bsys.c	?^abt(s)$?
agetvar	avars.c	?^agetvar(vstr, value)$?
alloc	variable.c	?^alloc(datadr, numbyts)$?
alpha	class.c	?^alpha(c)$?
any	class.c	?^any(c, as)$?
append	bfiles.c	?^append()$?
aputvar	avars.c	?^aputvar(vstr, value)$?
asc	asc.c	?^asc(s)$?
atof1	atof1.c	?^double atof1(s)$?
autnum	auto.c	?^autnum()$?
bed	bed.c	?^bed(fp)$?
bof	bseek.c	?^bof(fd)$?
brake	for.c	?^brake() /*set the break flag */$?
breseq	reseq.c	?^breseq(begin,end)$?
bsys	bsys.c	?^bsys()$?
buspr	print.c	?^buspr()$?
call	call.c	?^call()$?
callsys	bsys.c	?^callsys(string)$?
carcat	strcat.c	?^char *carcat(s,t)$?
ch	call.c	?^ch()$?
check	reseq.c	?^check(begin,end)$?
chksec	chksec.c	?^chksec(s)$?
chr	chr.c	?^char *chr(num)$?
cklist	reseq.c	?^cklist(code)$?
clall	bfiles.c	?^clall()$?
class	class.c	?^class(sptr, field)$?
cleanup	evalx.c	?^cleanup(nstack,ostack,n,o)$?
clear	clear.c	?^clear()$?
clrtab	expunge.c	?^clrtab(table)$?
con	sing.c	?^con()$?
cont	for.c	?^cont() /* set the continue flag */$?
copen	copen.c	?^copen(s,mode)$?
corleft	corleft.c	?^corleft()$?
cover	cover.c	?^cover(f,t)$?
cpychr	class.c	?^#define cpychr()	{*fptr++ = **sptr ; *sptr += 1; }?
cpyprn	print.c	?^cpyprn(numbuf,txtptr,n)$?
delete	delete.c	?^delete()$?
dim	dim.c	?^dim()$?
encode	encode.c	?^encode(s)$?
equal	equal.c	?^equal(ptr,string)$?
error	error.c	?^error(line,num)$?
error2	error.c	?^error2(line,num,c)$?
evals	evals.c	?^evals(exps,result)$?
evalx	evalx.c	?^evalx(exps)$?
expand	list.c	?^char *expand()$?
expunge	expunge.c	?^expunge()$?
ext	ext.c	?^char *ext(args)$?
f	f.c	?^f()$?
fact	fact.c	?^fact(n)$?
fetch	fetch.c	?^fetch(i,ptr)$?
fgetlin	more.c	?^fgetlin(tmpbuf,fnum)$?
getaddr	avars.c	?^getaddr(vstr, addr)$?
getdims	getdims.c	?^getdims(afield,arname,numdim,dimlist)$?
getflot	dim.c	?^getflot(valptr,ptr)$?
getfnam	getfnam.c	?^getfnam()$?
getmore	more.c	?^getmore(fd,tmpbuf)$?
getnext	read.c	?^getnext()$?
getout	run.c	?^#define getout(X)\\$?
getpath	pathopen.c	?^getpath(field,s)$?
getvar	variable.c	?^getvar(vstr,valptr)$?
goaway	encode.c	?^goaway()$?
gosub	gosub.c	?^gosub()$?
if	print.c	?^	if(contin && !(busflg)) /* if continuation off$?
ifnul	sub.c	?^ifnul(work)$?
initvar	variable.c	?^initvar()$?
iprintf	iprintf.c	?^iprintf()$?
isprintf	iprintf.c	?^isprintf(s)$?
isthere	isthere.c	?^char *isthere(s,t,flg)$?
left	left.c	?^left(args)$?
legdlm	class.c	?^#define legdlm(X) ((any(X," ^*+/-)")  || (X>='\\0' ?
len	len.c	?^len(exp)$?
let	let.c	?^let()$?
lineseek	bseek.c	?^lineseek(fd, offset, mode)$?
list	list.c	?^list(opt)$?
lnpars	lnpars.c	?^lnpars()$?
load	load.c	?^load()$?
loc	up-lo.c	?^loc(str)$?
lookfree	savars.c	?^lookfree(size)$?
mathcall	evalx.c	?^mathcall(s)$?
minus	minus.c	?^minus()$?
more	more.c	?^more(fnum)$?
mov	reseq.c	?^mov()$?
ndim	dim.c	?^ndim()$?
new	new.c	?^new()$?
next	for.c	?^next()$?
no_op	no_op.c	?^no_op()$?
nocode	basic.c	?^nocode(code)$?
num	class.c	?^num(c)$?
old	old.c	?^old()$?
on	on.c	?^on()$?
onew	new.c	?^onew()$?
openi	bfiles.c	?^openi()$?
openo	bfiles.c	?^openo()$?
outit	save.c	?^outit(fp)$?
pathopen	pathopen.c	?^pathopen(name)$?
pause	pause.c	?^pause()$?
postb	postb.c	?^postb(name)$?
precid	evalx.c	?^precid(c)$?
prguts	print.c	?^prguts(busflg)$?
prin	list.c	?^prin()$?
prncpy	read.c	?^char *prncpy(to,from)$?
put	put.c	?^put()$?
putflot	dim.c	?^putflot(value,ptr)$?
putvar	variable.c	?^putvar(vstr,value)$?
quit	basic.c	?^quit()$?
quot	isthere.c	?^char *quot(t)$?
rand	rand.c	?^rand()$?
replace	reseq.c	?^replace()$?
reseq	reseq.c	?^reseq()$?
restore	read.c	?^restore()$?
retrn	list.c	?^#define retrn(x) {signal(2,quit);stpflg=0;return(x?
rewin	bs.c	?^rewin()$?
right	right.c	?^right(args)$?
rndgen	evalx.c	?^double rndgen(num)$?
run	run.c	?^run()$?
sagetvar	savars.c	?^sagetvar(sname,sptr)$?
saputvar	savars.c	?^saputvar(sname,sptr)$?
save	save.c	?^save()$?
savefree	savars.c	?^savefree(addr)$?
scanfld	bfiles.c	?^scanfld(ptr,field,dlm)$?
sdim	dim.c	?^sdim()$?
setfile	bfiles.c	?^setfile(modnum,modchar)$?
setflg	for.c	?^setflg(flg)$?
sgetaddr	savars.c	?^sgetaddr(vstr, addr)$?
sgetvar	svars.c	?^sgetvar(sname,sptr)$?
shrink	isthere.c	?^shrink(ptr)$?
sing	sing.c	?^sing()$?
singex	sing.c	?^singex()$?
singwt	sing.c	?^singwt()$?
skip00	class.c	?^#define	skip00()	{}	/* skip00 does nothing */$?
skipline	bseek.c	?^skipline(fd)$?
sputvar	svars.c	?^sputvar(sname,sptr)$?
sqroot	evalx.c	?^double sqroot(num)$?
srand	rand.c	?^srand(x)$?
stackop	evalx.c	?^stackop(op,nstack,ostack,n,o)$?
stop	stop.c	?^stop()$?
stopl	list.c	?^stopl()$?
str	str.c	?^str(exp)$?
strcall	evals.c	?^strcall(strexp,result)$?
strcat	strcat.c	?^char *strcat(s,t)$?
string	string.c	?^string(args)$?
strlen	savars.c	?^static	strlen(s)$?
sub	sub.c	?^sub()$?
sysls	sysls.c	?^sysls()$?
sysrm	sysrm.c	?^sysrm()$?
undo	sub.c	?^undo()$?
unstack	evalx.c	?^unstack(nstack,ostack,n,o)$?
untilcod	untilcod.c	?^untilcod(endcod,execflg)$?
upc	up-lo.c	?^upc(str)$?
update	update.c	?^update()$?
val	val.c	?^val(exp)$?
