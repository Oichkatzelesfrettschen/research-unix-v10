# makefile generated by mkold

all : libstring.a testIt test1 test2 test3 test4 test5 test6 test7 \
		test8 test10 test11 test12 test13 test14 test16 test17 test18

libstring.a : string.o sysfns.o stringCtor.o Memcpy.o error.o rep.o list.o \
		generic.o voidP_list.o voidP_out.o list_sort.o Regexp.o
	 ar ru libstring.a $(?) ; \
	 ranlib libstring.a

string.o : string.c String.h
	 $(CC) $(CFLAGS) -c string.c

sysfns.o : sysfns.c String.h
	 $(CC) $(CFLAGS) -c sysfns.c

stringCtor.o : stringCtor.c String.h
	 $(CC) $(CFLAGS) -c stringCtor.c

Memcpy.o : Memcpy.c
	 $(CC) $(CFLAGS) -c Memcpy.c

error.o : error.c String.h
	 $(CC) $(CFLAGS) -c error.c

rep.o : rep.c String.h
	 $(CC) $(CFLAGS) -c rep.c

list.o : list.c list.h
	 $(CC) $(CFLAGS) -c list.c

generic.o : generic.c
	 $(CC) $(CFLAGS) -c generic.c

voidP_list.o : voidP_list.c list.h
	 $(CC) $(CFLAGS) -c voidP_list.c

voidP_out.o : voidP_out.c list.h
	 $(CC) $(CFLAGS) -c voidP_out.c

list_sort.o : list_sort.c list.h
	 $(CC) $(CFLAGS) -c list_sort.c

Regexp.o : Regexp.c Regexp.h
	 $(CC) $(CFLAGS) -c Regexp.c

testIt : testIt.o pair_list.o libstring.a
	 $(CC) $(CFLAGS) -o testIt testIt.o pair_list.o libstring.a

testIt.o : testIt.c pair_list.h list.h String.h
	 $(CC) $(CFLAGS) -c testIt.c

pair_list.o : pair_list.c pair_list.h list.h String.h
	 $(CC) $(CFLAGS) -c pair_list.c

test1 : test1.o libstring.a
	 $(CC) $(CFLAGS) -o test1 test1.o libstring.a

test1.o : test1.c String.h
	 $(CC) $(CFLAGS) -c test1.c

test2 : test2.o libstring.a
	 $(CC) $(CFLAGS) -o test2 test2.o libstring.a

test2.o : test2.c String.h
	 $(CC) $(CFLAGS) -c test2.c

test3 : test3.o pairST_list.o libstring.a
	 $(CC) $(CFLAGS) -o test3 test3.o pairST_list.o libstring.a

test3.o : test3.c pair.h list.h String.h
	 $(CC) $(CFLAGS) -c test3.c

pairST_list.o : pairST_list.c pair.h list.h String.h
	 $(CC) $(CFLAGS) -c pairST_list.c

test4 : test4.o string_list.o s_l_o.o libstring.a
	 $(CC) $(CFLAGS) -o test4 test4.o string_list.o s_l_o.o libstring.a

test4.o : test4.c list.h String.h
	 $(CC) $(CFLAGS) -c test4.c

string_list.o : string_list.c list.h String.h
	 $(CC) $(CFLAGS) -c string_list.c

s_l_o.o : s_l_o.c list.h String.h
	 $(CC) $(CFLAGS) -c s_l_o.c

test5 : test5.o string_list.o s_l_o.o libstring.a
	 $(CC) $(CFLAGS) -o test5 test5.o string_list.o s_l_o.o libstring.a

test5.o : test5.c list.h String.h
	 $(CC) $(CFLAGS) -c test5.c

test6 : test6.o string_list.o s_l_o.o libstring.a
	 $(CC) $(CFLAGS) -o test6 test6.o string_list.o s_l_o.o libstring.a

test6.o : test6.c list.h String.h
	 $(CC) $(CFLAGS) -c test6.c

test7 : test7.o string_list.o s_l_o.o libstring.a
	 $(CC) $(CFLAGS) -o test7 test7.o string_list.o s_l_o.o libstring.a

test7.o : test7.c list.h String.h
	 $(CC) $(CFLAGS) -c test7.c

test8 : test8.o string_list.o s_l_o.o libstring.a
	 $(CC) $(CFLAGS) -o test8 test8.o string_list.o s_l_o.o libstring.a

test8.o : test8.c list.h String.h
	 $(CC) $(CFLAGS) -c test8.c

test10 : test10.o string_list.o libstring.a
	 $(CC) $(CFLAGS) -o test10 test10.o string_list.o libstring.a

test10.o : test10.c list.h String.h
	 $(CC) $(CFLAGS) -c test10.c

test11 : test11.o string_list.o libstring.a
	 $(CC) $(CFLAGS) -o test11 test11.o string_list.o libstring.a

test11.o : test11.c list.h String.h
	 $(CC) $(CFLAGS) -c test11.c

test12 : test12.o pair_list.o libstring.a
	 $(CC) $(CFLAGS) -o test12 test12.o pair_list.o libstring.a

test12.o : test12.c pair_list.h list.h String.h
	 $(CC) $(CFLAGS) -c test12.c

test13 : test13.o pairST_list.o libstring.a
	 $(CC) $(CFLAGS) -o test13 test13.o pairST_list.o libstring.a

test13.o : test13.c pair.h list.h String.h
	 $(CC) $(CFLAGS) -c test13.c

test14 : test14.o libstring.a
	 $(CC) $(CFLAGS) -o test14 test14.o libstring.a

test14.o : test14.c pair.h list.h String.h
	 $(CC) $(CFLAGS) -c test14.c

test16 : test16.o libstring.a
	 $(CC) $(CFLAGS) -o test16 test16.o libstring.a

test16.o : test16.c pair.h list.h String.h
	 $(CC) $(CFLAGS) -c test16.c

test17 : test17.o libstring.a
	 $(CC) $(CFLAGS) -o test17 test17.o libstring.a

test17.o : test17.c pair.h list.h
	 $(CC) $(CFLAGS) -c test17.c

test18 : test18.o libstring.a
	 $(CC) $(CFLAGS) -o test18 test18.o libstring.a

test18.o : test18.c pair.h String.h
	 $(CC) $(CFLAGS) -c test18.c

cpio :
	 echo Makefile makefile String.h list.h plist.h string.c stringComp.c stringCtor.c Memcpy.c error.c rep.c lst.c generic.c voidP_list.c voidP_out.c testIt.c pair_list.h pair_list.c test1.c test2.c pair.h test3.c pairST_list.c test4.c string_list.c s_l_o.c test5.c string_list.c s_l_o.c test6.c string_list.c s_l_o.c test7.c string_list.c s_l_o.c test8.c string_list.c s_l_o.c test10.c string_list.c test11.c string_list.c test12.c pair_list.h pair_list.c test13.c test14.c test16.c test17.c test18.c Regexp.c Regexp.h | tr ' ' '\012' | sort -u | $(CPIO) $(CPIOFLAGS) -ocv > libstring.cpio

print :
	 $(PR) $(PRFLAGS) Makefile makefile String.h list.h plist.h string.c stringComp.c stringCtor.c Memcpy.c error.c rep.c lst.c generic.c voidP_list.c voidP_out.c testIt.c pair_list.h pair_list.c test1.c test2.c test3.c pairST_list.c pair.h test4.c string_list.c s_l_o.c test5.c string_list.c s_l_o.c test6.c string_list.c s_l_o.c test7.c string_list.c s_l_o.c test8.c string_list.c s_l_o.c test10.c string_list.c test11.c string_list.c test12.c pair_list.h pair_list.c test13.c test14.c test16.c test17.c test18.c Regexp.c Regexp.h | $(LP) $(LPFLAGS)

clean :
	 rm -f testIt.o pair_list.o test1.o test2.o test3.o pairST_list.o test4.o string_list.o s_l_o.o test5.o string_list.o s_l_o.o test6.o string_list.o s_l_o.o test7.o string_list.o s_l_o.o test8.o string_list.o s_l_o.o test10.o string_list.o test11.o string_list.o test12.o pair_list.o test13.o test14.o test16.o test17.o test18.o

clobber : clean
	 rm -f libstring.a testIt test1 test2 test3 test4 test5 test6 test7 test8 test10 test11 test12 test13 test14 test16 test17 test18
