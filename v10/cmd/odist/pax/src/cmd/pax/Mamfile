note # # make abstract machine file generated from Makefile # #
setv AS as
setv ASFLAGS
setv AR ar
setv ARFLAGS cr
setv CC cc
setv CCFLAGS "-O"
setv CPP "$CC -E"
setv CPIO cpio
setv CPIOFLAGS
setv F77 f77
setv INSTALLROOT $HOME
setv LD ld
setv LDFLAGS 
setv LEX lex
setv LEXFLAGS
setv LPR lpr
setv LPRFLAGS
setv M4FLAGS 
setv MAKE nmake
setv MAKEFLAGS
setv PR pr
setv PRFLAGS
setv TAR tar
setv YACC yacc
setv YACCFLAGS -d
make install
make all
make pax
make bio.o
make bio.c
attr perm
attr scan
make FEATURE/bcopy
exec : generate local FEATURE information for bcopy
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for bcopy */'
.... case "bcopy" in
.... *.*)	f=bcopy
.... 	i=bcopy
.... 	;;
.... *)	f=bcopy
.... 	i=bcopy
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/bcopy
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/bcopy
make FEATURE/mtio
exec : generate local FEATURE information for mtio
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for mtio */'
.... case "mtio" in
.... *.*)	f=mtio
.... 	i=mtio
.... 	;;
.... *)	f=mtio
.... 	i=mtio
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/mtio
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/mtio
make pax.h
attr perm
attr scan
attr impl
make ../../../include/tar.h
attr perm
attr scan
attr impl
done ../../../include/tar.h
make ../../../include/align.h
attr perm
attr scan
attr impl
done ../../../include/align.h
make ../../../include/swap.h
attr perm
attr scan
attr impl
done ../../../include/swap.h
make /usr/include/time.h
attr perm
attr scan
attr impl
done /usr/include/time.h
make ../../../include/error.h
attr perm
attr scan
attr impl
done ../../../include/error.h
make ../../../include/re.h
attr perm
attr scan
attr impl
done ../../../include/re.h
make ../../../include/hash.h
attr perm
attr scan
attr impl
done ../../../include/hash.h
make ../../../include/limits.h
attr perm
attr scan
attr impl
done ../../../include/limits.h
make /usr/include/ctype.h
attr perm
attr scan
attr impl
done /usr/include/ctype.h
make ../../../include/ftwalk.h
attr perm
attr scan
attr impl
done ../../../include/ftwalk.h
make ../../../include/sig.h
attr perm
attr scan
attr impl
done ../../../include/sig.h
make ../../../include/ls.h
attr perm
attr scan
attr impl
done ../../../include/ls.h
done pax.h
done bio.c
prev bio.c
setv DEBUG -DDEBUG
exec $CC $CCFLAGS -I. -I../../../include "$DEBUG" -c bio.c
done bio.o
make convert.o
make convert.c
attr perm
attr scan
prev pax.h
done convert.c
prev convert.c
exec $CC $CCFLAGS -I. -I../../../include "$DEBUG" -c convert.c
done convert.o
make copy.o
make copy.c
attr perm
attr scan
prev pax.h
done copy.c
prev copy.c
exec $CC $CCFLAGS -I. -I../../../include "$DEBUG" -c copy.c
done copy.o
make pax.o
make pax.c
attr perm
attr scan
prev pax.h
done pax.c
prev pax.c
exec $CC $CCFLAGS -I. -I../../../include "$DEBUG" -c pax.c
done pax.o
make delta.o
make delta.c
attr perm
attr scan
prev pax.h
done delta.c
prev delta.c
exec $CC $CCFLAGS -I. -I../../../include "$DEBUG" -c delta.c
done delta.o
make file.o
make file.c
attr perm
attr scan
prev pax.h
done file.c
prev file.c
exec $CC $CCFLAGS -I. -I../../../include "$DEBUG" -c file.c
done file.o
make format.o
make format.c
attr perm
attr scan
prev pax.h
done format.c
prev format.c
setv SYSTEM -DSYSTEM="\"bsd \""
exec $CC $CCFLAGS -I. -I../../../include "$SYSTEM" "$DEBUG" -c format.c
done format.o
make misc.o
make misc.c
attr perm
attr scan
prev pax.h
done misc.c
prev misc.c
exec $CC $CCFLAGS -I. -I../../../include "$DEBUG" -c misc.c
done misc.o
make ../../../lib/libodelta.a
attr arch
attr perm
done ../../../lib/libodelta.a
make ../../../lib/libx.a
attr arch
attr perm
done ../../../lib/libx.a
exec $CC $CCFLAGS "$DEBUG" "$SYSTEM"  $LDFLAGS  "$DEBUG" "$SYSTEM" -o pax bio.o convert.o copy.o pax.o delta.o file.o format.o misc.o ../../../lib/libodelta.a ../../../lib/libx.a 
done pax
make cpio
make cpio.sh
attr perm
attr scan
done cpio.sh
prev cpio.sh
exec case '' in
.... "")	cp cpio.sh cpio
.... 	;;
.... *)	{
.... 	i=`(read x; echo $x) < cpio.sh`
.... 	case $i in
.... 	\#!*)	echo $i ;;
.... 	esac
.... 	echo 
.... 	cat cpio.sh
.... 	} > cpio
.... 	;;
.... esac
.... chmod u+w,+x cpio
done cpio
make tar
make tar.sh
attr perm
attr scan
done tar.sh
prev tar.sh
exec case '' in
.... "")	cp tar.sh tar
.... 	;;
.... *)	{
.... 	i=`(read x; echo $x) < tar.sh`
.... 	case $i in
.... 	\#!*)	echo $i ;;
.... 	esac
.... 	echo 
.... 	cat tar.sh
.... 	} > tar
.... 	;;
.... esac
.... chmod u+w,+x tar
done tar
done all
make $INSTALLROOT/bin
exec if	 test ! -d $INSTALLROOT/bin
.... then	rm -rf $INSTALLROOT/bin && mkdir  $INSTALLROOT/bin  		    		    || { rm -rf $INSTALLROOT && mkdir  $INSTALLROOT && mkdir  $INSTALLROOT/bin  		    		    ;} || true
.... fi
done $INSTALLROOT/bin
make $INSTALLROOT/bin/pax
prev pax
exec { cp pax $INSTALLROOT/bin/pax 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/bin/pax
make $INSTALLROOT/man/man1
exec if	 test ! -d $INSTALLROOT/man/man1
.... then	rm -rf $INSTALLROOT/man/man1 && mkdir  $INSTALLROOT/man/man1  		    		    || { rm -rf $INSTALLROOT/man && mkdir  $INSTALLROOT/man && mkdir  $INSTALLROOT/man/man1  		    		    ;} || true
.... fi
done $INSTALLROOT/man/man1
make $INSTALLROOT/man/man1/pax.1
make pax.1
attr perm
done pax.1
exec { cp pax.1 $INSTALLROOT/man/man1/pax.1 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/man/man1/pax.1
done install
