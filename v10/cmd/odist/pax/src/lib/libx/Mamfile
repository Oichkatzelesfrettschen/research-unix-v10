note # # make abstract machine file generated from Makefile # #
setv AS as
setv ASFLAGS
setv AR ar
setv ARFLAGS cr
setv CC cc
setv CCFLAGS "-O"
setv CPP "$CC -E"
setv CPIO cpio
setv CPIOFLAGS
setv F77 f77
setv INSTALLROOT $HOME
setv LD ld
setv LDFLAGS 
setv LEX lex
setv LEXFLAGS
setv LPR lpr
setv LPRFLAGS
setv M4FLAGS 
setv MAKE nmake
setv MAKEFLAGS
setv PR pr
setv PRFLAGS
setv TAR tar
setv YACC yacc
setv YACCFLAGS -d
make install
make all
make libx.a
attr arch
make opendir.o
make dir/opendir.c
attr perm
attr scan
make /usr/include/errno.h
attr perm
attr scan
attr impl
make /usr/include/sys/errno.h
attr perm
attr scan
attr impl
done /usr/include/sys/errno.h
done /usr/include/errno.h
make dir/dirlib.h
attr perm
attr scan
attr impl
make include/hash.h
attr perm
attr scan
attr impl
done include/hash.h
make limits.h
make mkhdr
make port/mkhdr.sh
attr perm
attr scan
done port/mkhdr.sh
prev port/mkhdr.sh
exec case '' in
.... "")	cp port/mkhdr.sh mkhdr
.... 	;;
.... *)	{
.... 	i=`(read x; echo $x) < port/mkhdr.sh`
.... 	case $i in
.... 	\#!*)	echo $i ;;
.... 	esac
.... 	echo 
.... 	cat port/mkhdr.sh
.... 	} > mkhdr
.... 	;;
.... esac
.... chmod u+w,+x mkhdr
done mkhdr
make genhdr
make genhdr.o
make port/genhdr.c
attr perm
attr scan
make lclstdio.h
prev mkhdr
exec mkhdr lclstdio "" "$CC" $CCFLAGS   > lclstdio.h
attr scan
attr impl
done lclstdio.h
make lcldirent.h
prev mkhdr
exec mkhdr lcldirent "" "$CC" $CCFLAGS   > lcldirent.h
attr scan
attr impl
done lcldirent.h
make lclparam.h
prev mkhdr
exec mkhdr lclparam "" "$CC" $CCFLAGS   > lclparam.h
attr scan
attr impl
done lclparam.h
make lcllimits.h
prev mkhdr
exec mkhdr lcllimits "" "$CC" $CCFLAGS   > lcllimits.h
attr scan
attr impl
done lcllimits.h
make FEATURE/getdents
exec : generate local FEATURE information for getdents
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for getdents */'
.... case "getdents" in
.... *.*)	f=getdents
.... 	i=getdents
.... 	;;
.... *)	f=getdents
.... 	i=getdents
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/getdents
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/getdents
make FEATURE/dir
exec : generate local FEATURE information for dir
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for dir */'
.... case "dir" in
.... *.*)	f=dir
.... 	i=dir
.... 	;;
.... *)	f=dir
.... 	i=dir
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/dir
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/dir
done port/genhdr.c
prev port/genhdr.c
exec $CC $CCFLAGS -I.  -c port/genhdr.c
done genhdr.o
exec $CC $CCFLAGS  $LDFLAGS   -o genhdr genhdr.o 
done genhdr
exec mkhdr limits " genhdr" "$CC" $CCFLAGS   > limits.h
attr scan
attr impl
prev lcllimits.h
done limits.h
make dirent.h
prev mkhdr
prev genhdr
exec mkhdr dirent " genhdr" "$CC" $CCFLAGS   > dirent.h
attr scan
attr impl
prev lcldirent.h
done dirent.h
make fsinfo.h
prev mkhdr
prev genhdr
exec mkhdr fsinfo " genhdr" "$CC" $CCFLAGS   > fsinfo.h
attr scan
attr impl
done fsinfo.h
prev lclparam.h
make preroot.h
prev mkhdr
exec mkhdr preroot "" "$CC" $CCFLAGS   > preroot.h
attr scan
attr impl
done preroot.h
done dir/dirlib.h
done dir/opendir.c
prev dir/opendir.c
exec $CC $CCFLAGS -I. -Idir -Iinclude  -c dir/opendir.c
done opendir.o
make readdir.o
make dir/readdir.c
attr perm
attr scan
prev dir/dirlib.h
done dir/readdir.c
prev dir/readdir.c
exec $CC $CCFLAGS -I. -Idir -Iinclude  -c dir/readdir.c
done readdir.o
make rewinddir.o
make dir/rewinddir.c
attr perm
attr scan
prev dir/dirlib.h
done dir/rewinddir.c
prev dir/rewinddir.c
exec $CC $CCFLAGS -I. -Idir -Iinclude  -c dir/rewinddir.c
done rewinddir.o
make seekdir.o
make dir/seekdir.c
attr perm
attr scan
prev dir/dirlib.h
done dir/seekdir.c
prev dir/seekdir.c
exec $CC $CCFLAGS -I. -Idir -Iinclude  -c dir/seekdir.c
done seekdir.o
make telldir.o
make dir/telldir.c
attr perm
attr scan
prev dir/dirlib.h
done dir/telldir.c
prev dir/telldir.c
exec $CC $CCFLAGS -I. -Idir -Iinclude  -c dir/telldir.c
done telldir.o
make getcwd.o
make misc/getcwd.c
attr perm
attr scan
prev limits.h
prev /usr/include/errno.h
prev dirent.h
make /usr/include/sys/stat.h
done /usr/include/sys/stat.h
make /usr/include/sys/types.h
done /usr/include/sys/types.h
done misc/getcwd.c
prev misc/getcwd.c
exec $CC $CCFLAGS -I.  -c misc/getcwd.c
done getcwd.o
make setcwd.o
make misc/setcwd.c
attr perm
attr scan
prev /usr/include/errno.h
prev limits.h
done misc/setcwd.c
prev misc/setcwd.c
setv DEBUG -UDEBUG
exec $CC $CCFLAGS -I. "$DEBUG" -c misc/setcwd.c
done setcwd.o
make getshell.o
make misc/getshell.c
attr perm
attr scan
done misc/getshell.c
prev misc/getshell.c
exec $CC $CCFLAGS   -c misc/getshell.c
done getshell.o
make hashalloc.o
make hash/hashalloc.c
attr perm
attr scan
make hash/hashlib.h
attr perm
attr scan
attr impl
prev include/hash.h
prev limits.h
done hash/hashlib.h
done hash/hashalloc.c
prev hash/hashalloc.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/hashalloc.c
done hashalloc.o
make hashdump.o
make hash/hashdump.c
attr perm
attr scan
prev hash/hashlib.h
make include/stdio.h
done include/stdio.h
done hash/hashdump.c
prev hash/hashdump.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/hashdump.c
done hashdump.o
make hashfree.o
make hash/hashfree.c
attr perm
attr scan
prev hash/hashlib.h
done hash/hashfree.c
prev hash/hashfree.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/hashfree.c
done hashfree.o
make hashlook.o
make hash/hashlook.c
attr perm
attr scan
prev hash/hashlib.h
done hash/hashlook.c
prev hash/hashlook.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/hashlook.c
done hashlook.o
make hashscan.o
make hash/hashscan.c
attr perm
attr scan
prev hash/hashlib.h
done hash/hashscan.c
prev hash/hashscan.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/hashscan.c
done hashscan.o
make hashsize.o
make hash/hashsize.c
attr perm
attr scan
prev hash/hashlib.h
done hash/hashsize.c
prev hash/hashsize.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/hashsize.c
done hashsize.o
make hashwalk.o
make hash/hashwalk.c
attr perm
attr scan
prev hash/hashlib.h
done hash/hashwalk.c
prev hash/hashwalk.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/hashwalk.c
done hashwalk.o
make memhash.o
make hash/memhash.c
attr perm
attr scan
prev hash/hashlib.h
done hash/memhash.c
prev hash/memhash.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/memhash.c
done memhash.o
make memsum.o
make hash/memsum.c
attr perm
attr scan
prev hash/hashlib.h
done hash/memsum.c
prev hash/memsum.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/memsum.c
done memsum.o
make strhash.o
make hash/strhash.c
attr perm
attr scan
prev hash/hashlib.h
done hash/strhash.c
prev hash/strhash.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/strhash.c
done strhash.o
make strsum.o
make hash/strsum.c
attr perm
attr scan
prev hash/hashlib.h
done hash/strsum.c
prev hash/strsum.c
exec $CC $CCFLAGS -I. -Ihash -Iinclude  -c hash/strsum.c
done strsum.o
make cvtatoe.o
make misc/cvtatoe.c
attr perm
attr scan
done misc/cvtatoe.c
prev misc/cvtatoe.c
exec $CC $CCFLAGS   -c misc/cvtatoe.c
done cvtatoe.o
make cvtetoa.o
make misc/cvtetoa.c
attr perm
attr scan
done misc/cvtetoa.c
prev misc/cvtetoa.c
exec $CC $CCFLAGS   -c misc/cvtetoa.c
done cvtetoa.o
make chresc.o
make string/chresc.c
attr perm
attr scan
done string/chresc.c
prev string/chresc.c
exec $CC $CCFLAGS   -c string/chresc.c
done chresc.o
make ctoi.o
make string/ctoi.c
attr perm
attr scan
prev limits.h
done string/ctoi.c
prev string/ctoi.c
exec $CC $CCFLAGS -I.  -c string/ctoi.c
done ctoi.o
make streval.o
make string/streval.c
attr perm
attr scan
make /usr/include/ctype.h
attr perm
attr scan
attr impl
done /usr/include/ctype.h
done string/streval.c
prev string/streval.c
exec $CC $CCFLAGS   -c string/streval.c
done streval.o
make strmatch.o
make string/strmatch.c
attr perm
attr scan
prev /usr/include/ctype.h
done string/strmatch.c
prev string/strmatch.c
exec $CC $CCFLAGS   -c string/strmatch.c
done strmatch.o
make strcopy.o
make string/strcopy.c
attr perm
attr scan
done string/strcopy.c
prev string/strcopy.c
exec $CC $CCFLAGS   -c string/strcopy.c
done strcopy.o
make strmode.o
make string/strmode.c
attr perm
attr scan
make string/modelib.h
attr perm
attr scan
attr impl
done string/modelib.h
done string/strmode.c
prev string/strmode.c
exec $CC $CCFLAGS -Istring  -c string/strmode.c
done strmode.o
make stresc.o
make string/stresc.c
attr perm
attr scan
done string/stresc.c
prev string/stresc.c
exec $CC $CCFLAGS   -c string/stresc.c
done stresc.o
make stropt.o
make string/stropt.c
attr perm
attr scan
prev /usr/include/ctype.h
make include/namval.h
attr perm
attr scan
attr impl
done include/namval.h
done string/stropt.c
prev string/stropt.c
exec $CC $CCFLAGS -Iinclude  -c string/stropt.c
done stropt.o
make strtape.o
make string/strtape.c
attr perm
attr scan
prev include/stdio.h
done string/strtape.c
prev string/strtape.c
exec $CC $CCFLAGS -Iinclude  -c string/strtape.c
done strtape.o
make tok.o
make string/tok.c
attr perm
attr scan
done string/tok.c
prev string/tok.c
exec $CC $CCFLAGS   -c string/tok.c
done tok.o
make pathaccess.o
make misc/pathaccess.c
attr perm
attr scan
prev /usr/include/sys/stat.h
prev /usr/include/sys/types.h
prev limits.h
done misc/pathaccess.c
prev misc/pathaccess.c
exec $CC $CCFLAGS -I.  -c misc/pathaccess.c
done pathaccess.o
make pathcanon.o
make misc/pathcanon.c
attr perm
attr scan
done misc/pathcanon.c
prev misc/pathcanon.c
exec $CC $CCFLAGS   -c misc/pathcanon.c
done pathcanon.o
make pathcheck.o
make misc/pathcheck.c
attr perm
attr scan
done misc/pathcheck.c
prev misc/pathcheck.c
exec $CC $CCFLAGS   -c misc/pathcheck.c
done pathcheck.o
make pathpath.o
make misc/pathpath.c
attr perm
attr scan
done misc/pathpath.c
prev misc/pathpath.c
exec $CC $CCFLAGS   -c misc/pathpath.c
done pathpath.o
make pathkey.o
make misc/pathkey.c
attr perm
attr scan
prev include/stdio.h
prev preroot.h
prev /usr/include/ctype.h
prev limits.h
done misc/pathkey.c
prev misc/pathkey.c
exec $CC $CCFLAGS -I. -Iinclude  -c misc/pathkey.c
done pathkey.o
make pathprobe.o
make misc/pathprobe.c
attr perm
attr scan
make include/ls.h
attr perm
attr scan
attr impl
prev fsinfo.h
done include/ls.h
prev limits.h
done misc/pathprobe.c
prev misc/pathprobe.c
exec $CC $CCFLAGS -I. -Iinclude  -c misc/pathprobe.c
done pathprobe.o
make pathtemp.o
make misc/pathtemp.c
attr perm
attr scan
done misc/pathtemp.c
prev misc/pathtemp.c
exec $CC $CCFLAGS   -c misc/pathtemp.c
done pathtemp.o
make cmdargs.o
make misc/cmdargs.c
attr perm
attr scan
make include/option.h
attr perm
attr scan
attr impl
done include/option.h
done misc/cmdargs.c
prev misc/cmdargs.c
exec $CC $CCFLAGS -Iinclude  -c misc/cmdargs.c
done cmdargs.o
make fs3d.o
make misc/fs3d.c
attr perm
attr scan
done misc/fs3d.c
prev misc/fs3d.c
exec $CC $CCFLAGS   -c misc/fs3d.c
done fs3d.o
make ftwalk.o
make misc/ftwalk.c
attr perm
attr scan
make include/ftwalk.h
attr perm
attr scan
attr impl
done include/ftwalk.h
prev /usr/include/errno.h
prev limits.h
prev dirent.h
prev /usr/include/sys/stat.h
prev /usr/include/sys/types.h
done misc/ftwalk.c
prev misc/ftwalk.c
exec $CC $CCFLAGS -I. -Iinclude  -c misc/ftwalk.c
done ftwalk.o
make perror.o
make misc/perror.c
attr perm
attr scan
make FEATURE/strerror
exec : generate local FEATURE information for strerror
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strerror */'
.... case "strerror" in
.... *.*)	f=strerror
.... 	i=strerror
.... 	;;
.... *)	f=strerror
.... 	i=strerror
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strerror
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strerror
prev include/stdio.h
done misc/perror.c
prev misc/perror.c
exec $CC $CCFLAGS -I. -Iinclude  -c misc/perror.c
done perror.o
make putenv.o
make misc/putenv.c
attr perm
attr scan
done misc/putenv.c
prev misc/putenv.c
exec $CC $CCFLAGS   -c misc/putenv.c
done putenv.o
make calloc.o
make misc/calloc.c
attr perm
attr scan
make FEATURE/bzero
exec : generate local FEATURE information for bzero
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for bzero */'
.... case "bzero" in
.... *.*)	f=bzero
.... 	i=bzero
.... 	;;
.... *)	f=bzero
.... 	i=bzero
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/bzero
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/bzero
done misc/calloc.c
prev misc/calloc.c
exec $CC $CCFLAGS -I.  -c misc/calloc.c
done calloc.o
make malloc.o
make misc/malloc.c
attr perm
attr scan
make FEATURE/bcopy
exec : generate local FEATURE information for bcopy
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for bcopy */'
.... case "bcopy" in
.... *.*)	f=bcopy
.... 	i=bcopy
.... 	;;
.... *)	f=bcopy
.... 	i=bcopy
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/bcopy
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/bcopy
done misc/malloc.c
prev misc/malloc.c
exec $CC $CCFLAGS -I. "$DEBUG" -c misc/malloc.c
done malloc.o
make getnamval.o
make misc/getnamval.c
attr perm
attr scan
prev include/namval.h
done misc/getnamval.c
prev misc/getnamval.c
exec $CC $CCFLAGS -Iinclude  -c misc/getnamval.c
done getnamval.o
make optget.o
make misc/optget.c
attr perm
attr scan
done misc/optget.c
prev misc/optget.c
exec $CC $CCFLAGS   -c misc/optget.c
done optget.o
make hsort.o
make misc/hsort.c
attr perm
attr scan
done misc/hsort.c
prev misc/hsort.c
exec $CC $CCFLAGS   -c misc/hsort.c
done hsort.o
make query.o
make misc/query.c
attr perm
attr scan
prev include/stdio.h
done misc/query.c
prev misc/query.c
exec $CC $CCFLAGS -Iinclude  -c misc/query.c
done query.o
make error.o
make misc/error.c
attr perm
attr scan
make include/sfio.h
done include/sfio.h
make sig.h
prev mkhdr
exec mkhdr sig "" "$CC" $CCFLAGS   > sig.h
attr scan
attr impl
done sig.h
prev include/namval.h
make include/error.h
attr perm
attr scan
attr impl
done include/error.h
prev /usr/include/ctype.h
done misc/error.c
prev misc/error.c
exec $CC $CCFLAGS -I. -Iinclude  -c misc/error.c
done error.o
make liberror.o
make misc/liberror.c
attr perm
attr scan
prev include/error.h
done misc/liberror.c
prev misc/liberror.c
exec $CC $CCFLAGS -Iinclude  -c misc/liberror.c
done liberror.o
make strerror.o
make string/strerror.c
attr perm
attr scan
prev FEATURE/strerror
done string/strerror.c
prev string/strerror.c
exec $CC $CCFLAGS -I. -Iinclude  -c string/strerror.c
done strerror.o
make strsignal.o
make string/strsignal.c
attr perm
attr scan
prev include/stdio.h
done string/strsignal.c
prev string/strsignal.c
exec $CC $CCFLAGS -Iinclude  -c string/strsignal.c
done strsignal.o
make fmtelapsed.o
make string/fmtelapsed.c
attr perm
attr scan
prev include/stdio.h
done string/fmtelapsed.c
prev string/fmtelapsed.c
exec $CC $CCFLAGS -Iinclude  -c string/fmtelapsed.c
done fmtelapsed.o
make fmtls.o
make string/fmtls.c
attr perm
attr scan
prev include/stdio.h
make include/tm.h
attr perm
attr scan
attr impl
done include/tm.h
prev include/ls.h
done string/fmtls.c
prev string/fmtls.c
exec $CC $CCFLAGS -I. -Iinclude  -c string/fmtls.c
done fmtls.o
make fmtmode.o
make string/fmtmode.c
attr perm
attr scan
prev string/modelib.h
done string/fmtmode.c
prev string/fmtmode.c
exec $CC $CCFLAGS -Istring  -c string/fmtmode.c
done fmtmode.o
make fmtperm.o
make string/fmtperm.c
attr perm
attr scan
prev include/ls.h
done string/fmtperm.c
prev string/fmtperm.c
exec $CC $CCFLAGS -I. -Iinclude  -c string/fmtperm.c
done fmtperm.o
make fmtuid.o
make string/fmtuid.c
attr perm
attr scan
make /usr/include/pwd.h
attr perm
attr scan
attr impl
done /usr/include/pwd.h
prev include/hash.h
prev include/stdio.h
done string/fmtuid.c
prev string/fmtuid.c
exec $CC $CCFLAGS -Iinclude  -c string/fmtuid.c
done fmtuid.o
make fmtgid.o
make string/fmtgid.c
attr perm
attr scan
make /usr/include/grp.h
attr perm
attr scan
attr impl
done /usr/include/grp.h
prev include/hash.h
prev include/stdio.h
done string/fmtgid.c
prev string/fmtgid.c
exec $CC $CCFLAGS -Iinclude  -c string/fmtgid.c
done fmtgid.o
make strelapsed.o
make string/strelapsed.c
attr perm
attr scan
prev /usr/include/ctype.h
done string/strelapsed.c
prev string/strelapsed.c
exec $CC $CCFLAGS   -c string/strelapsed.c
done strelapsed.o
make strperm.o
make string/strperm.c
attr perm
attr scan
prev include/ls.h
done string/strperm.c
prev string/strperm.c
exec $CC $CCFLAGS -I. -Iinclude  -c string/strperm.c
done strperm.o
make struid.o
make string/struid.c
attr perm
attr scan
prev /usr/include/pwd.h
prev include/hash.h
done string/struid.c
prev string/struid.c
exec $CC $CCFLAGS -Iinclude  -c string/struid.c
done struid.o
make strgid.o
make string/strgid.c
attr perm
attr scan
prev /usr/include/grp.h
prev /usr/include/pwd.h
prev include/hash.h
done string/strgid.c
prev string/strgid.c
exec $CC $CCFLAGS -Iinclude  -c string/strgid.c
done strgid.o
make stack.o
make misc/stack.c
attr perm
attr scan
make include/stack.h
attr perm
attr scan
attr impl
done include/stack.h
done misc/stack.c
prev misc/stack.c
exec $CC $CCFLAGS -Iinclude  -c misc/stack.c
done stack.o
make stak.o
make misc/stak.c
attr perm
attr scan
make include/stak.h
attr perm
attr scan
attr impl
done include/stak.h
done misc/stak.c
prev misc/stak.c
exec $CC $CCFLAGS -Iinclude  -c misc/stak.c
done stak.o
make memswap.o
make string/memswap.c
attr perm
attr scan
make include/swap.h
attr perm
attr scan
attr impl
done include/swap.h
done string/memswap.c
prev string/memswap.c
exec $CC $CCFLAGS -Iinclude  -c string/memswap.c
done memswap.o
make gethalf.o
make string/gethalf.c
attr perm
attr scan
prev limits.h
prev include/swap.h
done string/gethalf.c
prev string/gethalf.c
exec $CC $CCFLAGS -I. -Iinclude  -c string/gethalf.c
done gethalf.o
make getlong.o
make string/getlong.c
attr perm
attr scan
prev limits.h
prev include/swap.h
done string/getlong.c
prev string/getlong.c
exec $CC $CCFLAGS -I. -Iinclude  -c string/getlong.c
done getlong.o
make puthalf.o
make string/puthalf.c
attr perm
attr scan
prev limits.h
prev include/swap.h
done string/puthalf.c
prev string/puthalf.c
exec $CC $CCFLAGS -I. -Iinclude  -c string/puthalf.c
done puthalf.o
make putlong.o
make string/putlong.c
attr perm
attr scan
prev limits.h
prev include/swap.h
done string/putlong.c
prev string/putlong.c
exec $CC $CCFLAGS -I. -Iinclude  -c string/putlong.c
done putlong.o
make fgetline.o
make misc/fgetline.c
attr perm
attr scan
prev include/stdio.h
done misc/fgetline.c
prev misc/fgetline.c
exec $CC $CCFLAGS -Iinclude  -c misc/fgetline.c
done fgetline.o
make sigcrit.o
make misc/sigcrit.c
attr perm
attr scan
make FEATURE/sigsetmask
exec : generate local FEATURE information for sigsetmask
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for sigsetmask */'
.... case "sigsetmask" in
.... *.*)	f=sigsetmask
.... 	i=sigsetmask
.... 	;;
.... *)	f=sigsetmask
.... 	i=sigsetmask
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/sigsetmask
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/sigsetmask
prev sig.h
done misc/sigcrit.c
prev misc/sigcrit.c
exec $CC $CCFLAGS -I.  -c misc/sigcrit.c
done sigcrit.o
make sigunblock.o
make comp/sigunblock.c
attr perm
attr scan
prev sig.h
make FEATURE/sigunblock
exec : generate local FEATURE information for sigunblock
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for sigunblock */'
.... case "sigunblock" in
.... *.*)	f=sigunblock
.... 	i=sigunblock
.... 	;;
.... *)	f=sigunblock
.... 	i=sigunblock
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/sigunblock
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/sigunblock
done comp/sigunblock.c
prev comp/sigunblock.c
exec $CC $CCFLAGS -I.  -c comp/sigunblock.c
done sigunblock.o
make cmdopen.o
make misc/cmdopen.c
attr perm
attr scan
make misc/cmdlib.h
attr perm
attr scan
attr impl
prev /usr/include/errno.h
prev include/stdio.h
prev limits.h
done misc/cmdlib.h
done misc/cmdopen.c
prev misc/cmdopen.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/cmdopen.c
done cmdopen.o
make cmdclose.o
make misc/cmdclose.c
attr perm
attr scan
prev misc/cmdlib.h
done misc/cmdclose.c
prev misc/cmdclose.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/cmdclose.c
done cmdclose.o
make cmdrun.o
make misc/cmdrun.c
attr perm
attr scan
done misc/cmdrun.c
prev misc/cmdrun.c
exec $CC $CCFLAGS   -c misc/cmdrun.c
done cmdrun.o
make cmdwait.o
make misc/cmdwait.c
attr perm
attr scan
prev misc/cmdlib.h
done misc/cmdwait.c
prev misc/cmdwait.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/cmdwait.c
done cmdwait.o
make cmdkill.o
make misc/cmdkill.c
attr perm
attr scan
prev misc/cmdlib.h
done misc/cmdkill.c
prev misc/cmdkill.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/cmdkill.c
done cmdkill.o
make recomp.o
make re/recomp.c
attr perm
attr scan
make re/relib.h
attr perm
attr scan
attr impl
prev limits.h
make include/re.h
attr perm
attr scan
attr impl
done include/re.h
done re/relib.h
done re/recomp.c
prev re/recomp.c
exec $CC $CCFLAGS -I. -Ire -Iinclude "$DEBUG" -c re/recomp.c
done recomp.o
make reerror.o
make re/reerror.c
attr perm
attr scan
prev include/error.h
prev include/re.h
done re/reerror.c
prev re/reerror.c
exec $CC $CCFLAGS -Iinclude  -c re/reerror.c
done reerror.o
make reexec.o
make re/reexec.c
attr perm
attr scan
prev /usr/include/ctype.h
prev re/relib.h
done re/reexec.c
prev re/reexec.c
exec $CC $CCFLAGS -I. -Ire -Iinclude "$DEBUG" -c re/reexec.c
done reexec.o
make resub.o
make re/resub.c
attr perm
attr scan
prev /usr/include/ctype.h
prev re/relib.h
done re/resub.c
prev re/resub.c
exec $CC $CCFLAGS -I. -Ire -Iinclude  -c re/resub.c
done resub.o
make tmdate.o
make tm/tmdate.c
attr perm
attr scan
prev /usr/include/ctype.h
prev include/tm.h
done tm/tmdate.c
prev tm/tmdate.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmdate.c
done tmdate.o
make tmfix.o
make tm/tmfix.c
attr perm
attr scan
prev include/tm.h
done tm/tmfix.c
prev tm/tmfix.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmfix.c
done tmfix.o
make tmform.o
make tm/tmform.c
attr perm
attr scan
prev include/stdio.h
prev include/tm.h
done tm/tmform.c
prev tm/tmform.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmform.c
done tmform.o
make tmgoff.o
make tm/tmgoff.c
attr perm
attr scan
prev /usr/include/ctype.h
prev include/tm.h
done tm/tmgoff.c
prev tm/tmgoff.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmgoff.c
done tmgoff.o
make tminit.o
make tm/tminit.c
attr perm
attr scan
prev include/namval.h
prev /usr/include/ctype.h
prev include/tm.h
done tm/tminit.c
prev tm/tminit.c
exec $CC $CCFLAGS -Iinclude  -c tm/tminit.c
done tminit.o
make tmleap.o
make tm/tmleap.c
attr perm
attr scan
prev include/tm.h
done tm/tmleap.c
prev tm/tmleap.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmleap.c
done tmleap.o
make tmlex.o
make tm/tmlex.c
attr perm
attr scan
prev /usr/include/ctype.h
prev include/tm.h
done tm/tmlex.c
prev tm/tmlex.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmlex.c
done tmlex.o
make tmmake.o
make tm/tmmake.c
attr perm
attr scan
prev include/tm.h
done tm/tmmake.c
prev tm/tmmake.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmmake.c
done tmmake.o
make tmpoff.o
make tm/tmpoff.c
attr perm
attr scan
prev include/stdio.h
prev include/tm.h
done tm/tmpoff.c
prev tm/tmpoff.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmpoff.c
done tmpoff.o
make tmtime.o
make tm/tmtime.c
attr perm
attr scan
prev include/tm.h
done tm/tmtime.c
prev tm/tmtime.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmtime.c
done tmtime.o
make tmtype.o
make tm/tmtype.c
attr perm
attr scan
prev include/tm.h
done tm/tmtype.c
prev tm/tmtype.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmtype.c
done tmtype.o
make tmword.o
make tm/tmword.c
attr perm
attr scan
prev /usr/include/ctype.h
prev include/tm.h
done tm/tmword.c
prev tm/tmword.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmword.c
done tmword.o
make tmzone.o
make tm/tmzone.c
attr perm
attr scan
prev include/tm.h
done tm/tmzone.c
prev tm/tmzone.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmzone.c
done tmzone.o
make vecargs.o
make vec/vecargs.c
attr perm
attr scan
prev /usr/include/ctype.h
done vec/vecargs.c
prev vec/vecargs.c
exec $CC $CCFLAGS   -c vec/vecargs.c
done vecargs.o
make vecfile.o
make vec/vecfile.c
attr perm
attr scan
prev /usr/include/sys/stat.h
prev /usr/include/sys/types.h
done vec/vecfile.c
prev vec/vecfile.c
exec $CC $CCFLAGS   -c vec/vecfile.c
done vecfile.o
make vecfree.o
make vec/vecfree.c
attr perm
attr scan
done vec/vecfree.c
prev vec/vecfree.c
exec $CC $CCFLAGS   -c vec/vecfree.c
done vecfree.o
make vecload.o
make vec/vecload.c
attr perm
attr scan
done vec/vecload.c
prev vec/vecload.c
exec $CC $CCFLAGS   -c vec/vecload.c
done vecload.o
make vecstring.o
make vec/vecstring.c
attr perm
attr scan
done vec/vecstring.c
prev vec/vecstring.c
exec $CC $CCFLAGS   -c vec/vecstring.c
done vecstring.o
make getsymlink.o
make misc/getsymlink.c
attr perm
attr scan
make misc/univlib.h
attr perm
attr scan
attr impl
prev /usr/include/errno.h
prev limits.h
make FEATURE/universe
exec : generate local FEATURE information for universe
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for universe */'
.... case "universe" in
.... *.*)	f=universe
.... 	i=universe
.... 	;;
.... *)	f=universe
.... 	i=universe
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/universe
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/universe
done misc/univlib.h
done misc/getsymlink.c
prev misc/getsymlink.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/getsymlink.c
done getsymlink.o
make putsymlink.o
make misc/putsymlink.c
attr perm
attr scan
prev misc/univlib.h
done misc/putsymlink.c
prev misc/putsymlink.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/putsymlink.c
done putsymlink.o
make univdata.o
make misc/univdata.c
attr perm
attr scan
prev misc/univlib.h
done misc/univdata.c
prev misc/univdata.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/univdata.c
done univdata.o
make getuniv.o
make misc/getuniv.c
attr perm
attr scan
prev misc/univlib.h
done misc/getuniv.c
prev misc/getuniv.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/getuniv.c
done getuniv.o
make setuniv.o
make misc/setuniv.c
attr perm
attr scan
prev misc/univlib.h
done misc/setuniv.c
prev misc/setuniv.c
exec $CC $CCFLAGS -I. -Imisc -Iinclude  -c misc/setuniv.c
done setuniv.o
make winsize.o
make port/winsize.c
attr perm
attr scan
make FEATURE/jioctl
exec : generate local FEATURE information for jioctl
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for jioctl */'
.... case "jioctl" in
.... *.*)	f=jioctl
.... 	i=jioctl
.... 	;;
.... *)	f=jioctl
.... 	i=jioctl
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/jioctl
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/jioctl
make ttyinfo.h
prev mkhdr
exec mkhdr ttyinfo "" "$CC" $CCFLAGS   > ttyinfo.h
attr scan
attr impl
done ttyinfo.h
done port/winsize.c
prev port/winsize.c
exec $CC $CCFLAGS -I.  -c port/winsize.c
done winsize.o
make fclex.o
make port/fclex.c
attr perm
attr scan
make /usr/include/fcntl.h
attr perm
attr scan
attr impl
done /usr/include/fcntl.h
prev /usr/include/errno.h
done port/fclex.c
prev port/fclex.c
exec $CC $CCFLAGS   -c port/fclex.c
done fclex.o
make sigdata.o
make port/sigdata.c
attr perm
attr scan
make sigdata.h
prev mkhdr
prev genhdr
exec mkhdr sigdata " genhdr" "$CC" $CCFLAGS   > sigdata.h
attr scan
attr impl
done sigdata.h
done port/sigdata.c
prev port/sigdata.c
exec $CC $CCFLAGS -I.  -c port/sigdata.c
done sigdata.o
make touch.o
make port/touch.c
attr perm
attr scan
make FEATURE/utime
exec : generate local FEATURE information for utime
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for utime */'
.... case "utime" in
.... *.*)	f=utime
.... 	i=utime
.... 	;;
.... *)	f=utime
.... 	i=utime
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/utime
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/utime
prev /usr/include/errno.h
prev /usr/include/sys/stat.h
prev /usr/include/sys/types.h
done port/touch.c
prev port/touch.c
exec $CC $CCFLAGS -I.  -c port/touch.c
done touch.o
make lpstat.o
make misc/lpstat.c
attr perm
attr scan
prev /usr/include/sys/stat.h
prev /usr/include/sys/types.h
done misc/lpstat.c
prev misc/lpstat.c
exec $CC $CCFLAGS   -c misc/lpstat.c
done lpstat.o
make memcmp.o
make comp/memcmp.c
attr perm
attr scan
make FEATURE/memcmp
exec : generate local FEATURE information for memcmp
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for memcmp */'
.... case "memcmp" in
.... *.*)	f=memcmp
.... 	i=memcmp
.... 	;;
.... *)	f=memcmp
.... 	i=memcmp
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/memcmp
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/memcmp
done comp/memcmp.c
prev comp/memcmp.c
exec $CC $CCFLAGS -I.  -c comp/memcmp.c
done memcmp.o
make memcpy.o
make comp/memcpy.c
attr perm
attr scan
make FEATURE/bcopy
done FEATURE/bcopy
make FEATURE/memcpy
exec : generate local FEATURE information for memcpy
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for memcpy */'
.... case "memcpy" in
.... *.*)	f=memcpy
.... 	i=memcpy
.... 	;;
.... *)	f=memcpy
.... 	i=memcpy
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/memcpy
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/memcpy
done comp/memcpy.c
prev comp/memcpy.c
exec $CC $CCFLAGS -I.  -c comp/memcpy.c
done memcpy.o
make memdup.o
make string/memdup.c
attr perm
attr scan
make FEATURE/memdup
exec : generate local FEATURE information for memdup
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for memdup */'
.... case "memdup" in
.... *.*)	f=memdup
.... 	i=memdup
.... 	;;
.... *)	f=memdup
.... 	i=memdup
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/memdup
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/memdup
done string/memdup.c
prev string/memdup.c
exec $CC $CCFLAGS -I.  -c string/memdup.c
done memdup.o
make memset.o
make comp/memset.c
attr perm
attr scan
make FEATURE/memset
exec : generate local FEATURE information for memset
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for memset */'
.... case "memset" in
.... *.*)	f=memset
.... 	i=memset
.... 	;;
.... *)	f=memset
.... 	i=memset
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/memset
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/memset
done comp/memset.c
prev comp/memset.c
exec $CC $CCFLAGS -I.  -c comp/memset.c
done memset.o
make mkdir.o
make comp/mkdir.c
attr perm
attr scan
make FEATURE/mkdir
exec : generate local FEATURE information for mkdir
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for mkdir */'
.... case "mkdir" in
.... *.*)	f=mkdir
.... 	i=mkdir
.... 	;;
.... *)	f=mkdir
.... 	i=mkdir
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/mkdir
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/mkdir
done comp/mkdir.c
prev comp/mkdir.c
exec $CC $CCFLAGS -I.  -c comp/mkdir.c
done mkdir.o
make rmdir.o
make comp/rmdir.c
attr perm
attr scan
make FEATURE/rmdir
exec : generate local FEATURE information for rmdir
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for rmdir */'
.... case "rmdir" in
.... *.*)	f=rmdir
.... 	i=rmdir
.... 	;;
.... *)	f=rmdir
.... 	i=rmdir
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/rmdir
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/rmdir
done comp/rmdir.c
prev comp/rmdir.c
exec $CC $CCFLAGS -I.  -c comp/rmdir.c
done rmdir.o
make remove.o
make comp/remove.c
attr perm
attr scan
make FEATURE/remove
exec : generate local FEATURE information for remove
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for remove */'
.... case "remove" in
.... *.*)	f=remove
.... 	i=remove
.... 	;;
.... *)	f=remove
.... 	i=remove
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/remove
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/remove
done comp/remove.c
prev comp/remove.c
exec $CC $CCFLAGS -I.  -c comp/remove.c
done remove.o
make rename.o
make comp/rename.c
attr perm
attr scan
make FEATURE/rename
exec : generate local FEATURE information for rename
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for rename */'
.... case "rename" in
.... *.*)	f=rename
.... 	i=rename
.... 	;;
.... *)	f=rename
.... 	i=rename
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/rename
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/rename
done comp/rename.c
prev comp/rename.c
exec $CC $CCFLAGS -I.  -c comp/rename.c
done rename.o
make link.o
make comp/link.c
attr perm
attr scan
make FEATURE/link
exec : generate local FEATURE information for link
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for link */'
.... case "link" in
.... *.*)	f=link
.... 	i=link
.... 	;;
.... *)	f=link
.... 	i=link
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/link
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/link
done comp/link.c
prev comp/link.c
exec $CC $CCFLAGS -I.  -c comp/link.c
done link.o
make unlink.o
make comp/unlink.c
attr perm
attr scan
make FEATURE/unlink
exec : generate local FEATURE information for unlink
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for unlink */'
.... case "unlink" in
.... *.*)	f=unlink
.... 	i=unlink
.... 	;;
.... *)	f=unlink
.... 	i=unlink
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/unlink
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/unlink
done comp/unlink.c
prev comp/unlink.c
exec $CC $CCFLAGS -I.  -c comp/unlink.c
done unlink.o
make strtok.o
make comp/strtok.c
attr perm
attr scan
make FEATURE/strtok
exec : generate local FEATURE information for strtok
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strtok */'
.... case "strtok" in
.... *.*)	f=strtok
.... 	i=strtok
.... 	;;
.... *)	f=strtok
.... 	i=strtok
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strtok
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strtok
done comp/strtok.c
prev comp/strtok.c
exec $CC $CCFLAGS -I.  -c comp/strtok.c
done strtok.o
make strspn.o
make comp/strspn.c
attr perm
attr scan
make FEATURE/strspn
exec : generate local FEATURE information for strspn
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strspn */'
.... case "strspn" in
.... *.*)	f=strspn
.... 	i=strspn
.... 	;;
.... *)	f=strspn
.... 	i=strspn
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strspn
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strspn
done comp/strspn.c
prev comp/strspn.c
exec $CC $CCFLAGS -I.  -c comp/strspn.c
done strspn.o
make strpbrk.o
make comp/strpbrk.c
attr perm
attr scan
make FEATURE/strpbrk
exec : generate local FEATURE information for strpbrk
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strpbrk */'
.... case "strpbrk" in
.... *.*)	f=strpbrk
.... 	i=strpbrk
.... 	;;
.... *)	f=strpbrk
.... 	i=strpbrk
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strpbrk
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strpbrk
done comp/strpbrk.c
prev comp/strpbrk.c
exec $CC $CCFLAGS -I.  -c comp/strpbrk.c
done strpbrk.o
make strdup.o
make string/strdup.c
attr perm
attr scan
make FEATURE/strdup
exec : generate local FEATURE information for strdup
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strdup */'
.... case "strdup" in
.... *.*)	f=strdup
.... 	i=strdup
.... 	;;
.... *)	f=strdup
.... 	i=strdup
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strdup
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strdup
done string/strdup.c
prev string/strdup.c
exec $CC $CCFLAGS -I.  -c string/strdup.c
done strdup.o
make strchr.o
make comp/strchr.c
attr perm
attr scan
make FEATURE/index
exec : generate local FEATURE information for index
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for index */'
.... case "index" in
.... *.*)	f=index
.... 	i=index
.... 	;;
.... *)	f=index
.... 	i=index
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/index
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/index
make FEATURE/strchr
exec : generate local FEATURE information for strchr
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strchr */'
.... case "strchr" in
.... *.*)	f=strchr
.... 	i=strchr
.... 	;;
.... *)	f=strchr
.... 	i=strchr
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strchr
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strchr
done comp/strchr.c
prev comp/strchr.c
exec $CC $CCFLAGS -I.  -c comp/strchr.c
done strchr.o
make strrchr.o
make comp/strrchr.c
attr perm
attr scan
make FEATURE/rindex
exec : generate local FEATURE information for rindex
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for rindex */'
.... case "rindex" in
.... *.*)	f=rindex
.... 	i=rindex
.... 	;;
.... *)	f=rindex
.... 	i=rindex
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/rindex
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/rindex
make FEATURE/strrchr
exec : generate local FEATURE information for strrchr
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strrchr */'
.... case "strrchr" in
.... *.*)	f=strrchr
.... 	i=strrchr
.... 	;;
.... *)	f=strrchr
.... 	i=strrchr
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strrchr
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strrchr
done comp/strrchr.c
prev comp/strrchr.c
exec $CC $CCFLAGS -I.  -c comp/strrchr.c
done strrchr.o
make strtod.o
make comp/strtod.c
attr perm
attr scan
make FEATURE/strtod
exec : generate local FEATURE information for strtod
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strtod */'
.... case "strtod" in
.... *.*)	f=strtod
.... 	i=strtod
.... 	;;
.... *)	f=strtod
.... 	i=strtod
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strtod
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strtod
done comp/strtod.c
prev comp/strtod.c
exec $CC $CCFLAGS -I.  -c comp/strtod.c
done strtod.o
make strtol.o
make comp/strtol.c
attr perm
attr scan
make FEATURE/strtol
exec : generate local FEATURE information for strtol
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for strtol */'
.... case "strtol" in
.... *.*)	f=strtol
.... 	i=strtol
.... 	;;
.... *)	f=strtol
.... 	i=strtol
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/strtol
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/strtol
done comp/strtol.c
prev comp/strtol.c
exec $CC $CCFLAGS -I.  -c comp/strtol.c
done strtol.o
make strton.o
make string/strton.c
attr perm
attr scan
done string/strton.c
prev string/strton.c
exec $CC $CCFLAGS   -c string/strton.c
done strton.o
make sigsetmask.o
make comp/sigsetmask.c
attr perm
attr scan
prev FEATURE/sigsetmask
done comp/sigsetmask.c
prev comp/sigsetmask.c
exec $CC $CCFLAGS -I.  -c comp/sigsetmask.c
done sigsetmask.o
make mktemp.o
make comp/mktemp.c
attr perm
attr scan
make FEATURE/mktemp
exec : generate local FEATURE information for mktemp
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for mktemp */'
.... case "mktemp" in
.... *.*)	f=mktemp
.... 	i=mktemp
.... 	;;
.... *)	f=mktemp
.... 	i=mktemp
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/mktemp
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/mktemp
done comp/mktemp.c
prev comp/mktemp.c
exec $CC $CCFLAGS -I.  -c comp/mktemp.c
done mktemp.o
make tmpnam.o
make comp/tmpnam.c
attr perm
attr scan
make FEATURE/tmpnam
exec : generate local FEATURE information for tmpnam
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for tmpnam */'
.... case "tmpnam" in
.... *.*)	f=tmpnam
.... 	i=tmpnam
.... 	;;
.... *)	f=tmpnam
.... 	i=tmpnam
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/tmpnam
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/tmpnam
done comp/tmpnam.c
prev comp/tmpnam.c
exec $CC $CCFLAGS -I. -Iinclude  -c comp/tmpnam.c
done tmpnam.o
make vfork.o
make comp/vfork.c
attr perm
attr scan
make FEATURE/vfork
exec : generate local FEATURE information for vfork
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for vfork */'
.... case "vfork" in
.... *.*)	f=vfork
.... 	i=vfork
.... 	;;
.... *)	f=vfork
.... 	i=vfork
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/vfork
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/vfork
done comp/vfork.c
prev comp/vfork.c
exec $CC $CCFLAGS -I.  -c comp/vfork.c
done vfork.o
make killpg.o
make comp/killpg.c
attr perm
attr scan
make FEATURE/killpg
exec : generate local FEATURE information for killpg
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for killpg */'
.... case "killpg" in
.... *.*)	f=killpg
.... 	i=killpg
.... 	;;
.... *)	f=killpg
.... 	i=killpg
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/killpg
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/killpg
done comp/killpg.c
prev comp/killpg.c
exec $CC $CCFLAGS -I.  -c comp/killpg.c
done killpg.o
make lstat.o
make comp/lstat.c
attr perm
attr scan
make FEATURE/lstat
exec : generate local FEATURE information for lstat
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for lstat */'
.... case "lstat" in
.... *.*)	f=lstat
.... 	i=lstat
.... 	;;
.... *)	f=lstat
.... 	i=lstat
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/lstat
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/lstat
done comp/lstat.c
prev comp/lstat.c
exec $CC $CCFLAGS -I.  -c comp/lstat.c
done lstat.o
make readlink.o
make comp/readlink.c
attr perm
attr scan
make FEATURE/readlink
exec : generate local FEATURE information for readlink
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for readlink */'
.... case "readlink" in
.... *.*)	f=readlink
.... 	i=readlink
.... 	;;
.... *)	f=readlink
.... 	i=readlink
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/readlink
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/readlink
done comp/readlink.c
prev comp/readlink.c
exec $CC $CCFLAGS -I.  -c comp/readlink.c
done readlink.o
make symlink.o
make comp/symlink.c
attr perm
attr scan
make FEATURE/symlink
exec : generate local FEATURE information for symlink
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for symlink */'
.... case "symlink" in
.... *.*)	f=symlink
.... 	i=symlink
.... 	;;
.... *)	f=symlink
.... 	i=symlink
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/symlink
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/symlink
done comp/symlink.c
prev comp/symlink.c
exec $CC $CCFLAGS -I.  -c comp/symlink.c
done symlink.o
make setpgid.o
make comp/setpgid.c
attr perm
attr scan
make FEATURE/setpgid
exec : generate local FEATURE information for setpgid
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for setpgid */'
.... case "setpgid" in
.... *.*)	f=setpgid
.... 	i=setpgid
.... 	;;
.... *)	f=setpgid
.... 	i=setpgid
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/setpgid
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/setpgid
done comp/setpgid.c
prev comp/setpgid.c
exec $CC $CCFLAGS -I.  -c comp/setpgid.c
done setpgid.o
make atexit.o
make comp/atexit.c
attr perm
attr scan
make FEATURE/_cleanup
exec : generate local FEATURE information for _cleanup
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for _cleanup */'
.... case "_cleanup" in
.... *.*)	f=_cleanup
.... 	i=_cleanup
.... 	;;
.... *)	f=_cleanup
.... 	i=_cleanup
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/_cleanup
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/_cleanup
make FEATURE/on_exit
exec : generate local FEATURE information for on_exit
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for on_exit */'
.... case "on_exit" in
.... *.*)	f=on_exit
.... 	i=on_exit
.... 	;;
.... *)	f=on_exit
.... 	i=on_exit
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/on_exit
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/on_exit
make FEATURE/onexit
exec : generate local FEATURE information for onexit
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for onexit */'
.... case "onexit" in
.... *.*)	f=onexit
.... 	i=onexit
.... 	;;
.... *)	f=onexit
.... 	i=onexit
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/onexit
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/onexit
make FEATURE/atexit
exec : generate local FEATURE information for atexit
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for atexit */'
.... case "atexit" in
.... *.*)	f=atexit
.... 	i=atexit
.... 	;;
.... *)	f=atexit
.... 	i=atexit
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/atexit
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/atexit
done comp/atexit.c
prev comp/atexit.c
exec $CC $CCFLAGS -I.  -c comp/atexit.c
done atexit.o
make getdents.o
make comp/getdents.c
attr perm
attr scan
prev FEATURE/dir
make FEATURE/readdir
exec : generate local FEATURE information for readdir
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for readdir */'
.... case "readdir" in
.... *.*)	f=readdir
.... 	i=readdir
.... 	;;
.... *)	f=readdir
.... 	i=readdir
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/readdir
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/readdir
make FEATURE/dirread
exec : generate local FEATURE information for dirread
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for dirread */'
.... case "dirread" in
.... *.*)	f=dirread
.... 	i=dirread
.... 	;;
.... *)	f=dirread
.... 	i=dirread
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/dirread
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/dirread
make FEATURE/getdirentries
exec : generate local FEATURE information for getdirentries
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for getdirentries */'
.... case "getdirentries" in
.... *.*)	f=getdirentries
.... 	i=getdirentries
.... 	;;
.... *)	f=getdirentries
.... 	i=getdirentries
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/getdirentries
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/getdirentries
prev dirent.h
prev fsinfo.h
prev FEATURE/getdents
done comp/getdents.c
prev comp/getdents.c
exec $CC $CCFLAGS -I.  -c comp/getdents.c
done getdents.o
make getwd.o
make misc/getwd.c
attr perm
attr scan
prev limits.h
done misc/getwd.c
prev misc/getwd.c
exec $CC $CCFLAGS -I.  -c misc/getwd.c
done getwd.o
make copy.o
make port/copy.c
attr perm
attr scan
make FEATURE/mmap
exec : generate local FEATURE information for mmap
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for mmap */'
.... case "mmap" in
.... *.*)	f=mmap
.... 	i=mmap
.... 	;;
.... *)	f=mmap
.... 	i=mmap
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/mmap
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/mmap
done port/copy.c
prev port/copy.c
exec $CC $CCFLAGS -I.  -c port/copy.c
done copy.o
make dup2.o
make comp/dup2.c
attr perm
attr scan
make FEATURE/dup2
exec : generate local FEATURE information for dup2
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for dup2 */'
.... case "dup2" in
.... *.*)	f=dup2
.... 	i=dup2
.... 	;;
.... *)	f=dup2
.... 	i=dup2
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/dup2
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/dup2
done comp/dup2.c
prev comp/dup2.c
exec $CC $CCFLAGS -I.  -c comp/dup2.c
done dup2.o
make errno.o
make comp/errno.c
attr perm
attr scan
done comp/errno.c
prev comp/errno.c
exec $CC $CCFLAGS   -c comp/errno.c
done errno.o
make sgetl.o
make comp/sgetl.c
attr perm
attr scan
prev limits.h
make FEATURE/sgetl
exec : generate local FEATURE information for sgetl
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for sgetl */'
.... case "sgetl" in
.... *.*)	f=sgetl
.... 	i=sgetl
.... 	;;
.... *)	f=sgetl
.... 	i=sgetl
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/sgetl
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/sgetl
done comp/sgetl.c
prev comp/sgetl.c
exec $CC $CCFLAGS -I.  -c comp/sgetl.c
done sgetl.o
make sputl.o
make comp/sputl.c
attr perm
attr scan
prev limits.h
make FEATURE/sputl
exec : generate local FEATURE information for sputl
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for sputl */'
.... case "sputl" in
.... *.*)	f=sputl
.... 	i=sputl
.... 	;;
.... *)	f=sputl
.... 	i=sputl
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/sputl
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/sputl
done comp/sputl.c
prev comp/sputl.c
exec $CC $CCFLAGS -I.  -c comp/sputl.c
done sputl.o
make getpreroot.o
make preroot/getpreroot.c
attr perm
attr scan
prev limits.h
prev dirent.h
prev preroot.h
done preroot/getpreroot.c
prev preroot/getpreroot.c
exec $CC $CCFLAGS -I. -Iinclude  -c preroot/getpreroot.c
done getpreroot.o
make ispreroot.o
make preroot/ispreroot.c
attr perm
attr scan
prev preroot.h
done preroot/ispreroot.c
prev preroot/ispreroot.c
exec $CC $CCFLAGS -I.  -c preroot/ispreroot.c
done ispreroot.o
make realopen.o
make preroot/realopen.c
attr perm
attr scan
prev limits.h
prev preroot.h
done preroot/realopen.c
prev preroot/realopen.c
exec $CC $CCFLAGS -I.  -c preroot/realopen.c
done realopen.o
make setpreroot.o
make preroot/setpreroot.c
attr perm
attr scan
prev limits.h
prev preroot.h
done preroot/setpreroot.c
prev preroot/setpreroot.c
exec $CC $CCFLAGS -I. -Iinclude  -c preroot/setpreroot.c
done setpreroot.o
make mount.o
make comp/mount.c
attr perm
attr scan
make FEATURE/mount
exec : generate local FEATURE information for mount
.... set -
.... if	test ! -d FEATURE
.... then	rm -rf FEATURE
.... 	mkdir FEATURE
.... fi
.... {
.... echo '/* local info for mount */'
.... case "mount" in
.... *.*)	f=mount
.... 	i=mount
.... 	;;
.... *)	f=mount
.... 	i=mount
.... 	echo "#undef $i
.... 		int $i;" > x.${!-$$}.c
.... 	cmd=:
.... 	opt=
.... 	if	$CC $CCFLAGS   -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	$CC $CCFLAGS   -Bstatic -o x.${!-$$}.x x.${!-$$}.c > /dev/null 2>&1
.... 		then	opt=-Bstatic
.... 		else	cmd=x.${!-$$}.x
.... 		fi
.... 	fi
.... 	echo "#undef $i
.... 		extern int $i();static int ((*i)())=$i;main(){exit(i==(int((*)()))0);}" > x.${!-$$}.c
.... 	if	$CC $CCFLAGS   $opt -c x.${!-$$}.c > /dev/null 2>&1
.... 	then	if	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_lib_$i 1	/* $i() in default lib(s) */"
.... 		elif	{ $CC $CCFLAGS   $opt -o x.${!-$$}.x x.${!-$$}.o -lm && $cmd ;} > /dev/null 2>&1
.... 		then	echo "#define	_mth_$i 1	/* $i() in math lib */"
.... 		fi
.... 	fi
.... 	;;
.... esac
.... echo "#include \"$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_hdr_$i 1	/* #include \"$f.h\" ok */"
.... fi
.... echo "#include \"sys/$f.h\"" > x.${!-$$}.c
.... if	$CC $CCFLAGS   -E x.${!-$$}.c > /dev/null 2>&1
.... then	echo "#define	_sys_$i 1	/* #include \"sys/$f.h\" ok */"
.... fi
.... for j in / /usr/
.... do	for i in bin etc ucb
.... 	do	if	test -f $j$i/$f
.... 		then	echo "#define	_bin_$f 1	/* $f in ?(/usr)/(bin|etc|ucb) */"
.... 			break 2
.... 		fi
.... 	done
.... done
.... } > FEATURE/mount
.... rm -rf x.${!-$$}.c x.${!-$$}.o x.${!-$$}.x
attr scan
attr impl
done FEATURE/mount
done comp/mount.c
prev comp/mount.c
exec $CC $CCFLAGS -I.  -c comp/mount.c
done mount.o
make popen.o
make comp/popen.c
attr perm
attr scan
prev include/stdio.h
done comp/popen.c
prev comp/popen.c
exec $CC $CCFLAGS -Iinclude  -c comp/popen.c
done popen.o
make system.o
make comp/system.c
attr perm
attr scan
done comp/system.c
prev comp/system.c
exec $CC $CCFLAGS   -c comp/system.c
done system.o
make iblocks.o
make port/iblocks.c
attr perm
attr scan
prev fsinfo.h
prev lclparam.h
done port/iblocks.c
prev port/iblocks.c
exec $CC $CCFLAGS -I.  -c port/iblocks.c
done iblocks.o
make modedata.o
make string/modedata.c
attr perm
attr scan
prev /usr/include/sys/stat.h
prev /usr/include/sys/types.h
prev string/modelib.h
done string/modedata.c
prev string/modedata.c
exec $CC $CCFLAGS -Istring  -c string/modedata.c
done modedata.o
make tmdata.o
make tm/tmdata.c
attr perm
attr scan
prev include/tm.h
done tm/tmdata.c
prev tm/tmdata.c
exec $CC $CCFLAGS -Iinclude  -c tm/tmdata.c
done tmdata.o
make sfclose.o
make sfio/sfclose.c
attr perm
attr scan
make sfio/sfhdr.h
attr perm
attr scan
attr impl
make FEATURE/on_exit
done FEATURE/on_exit
make FEATURE/onexit
done FEATURE/onexit
prev FEATURE/atexit
prev FEATURE/bcopy
done sfio/sfhdr.h
done sfio/sfclose.c
prev sfio/sfclose.c
setv LIBX -DLIBX
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfclose.c
done sfclose.o
make sfclrlock.o
make sfio/sfclrlock.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfclrlock.c
prev sfio/sfclrlock.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfclrlock.c
done sfclrlock.o
make sfcvt.o
make sfio/sfcvt.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfcvt.c
prev sfio/sfcvt.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfcvt.c
done sfcvt.o
make sfdlen.o
make sfio/sfdlen.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfdlen.c
prev sfio/sfdlen.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfdlen.c
done sfdlen.o
make sfdopen.o
make sfio/sfdopen.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfdopen.c
prev sfio/sfdopen.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfdopen.c
done sfdopen.o
make sfexcept.o
make sfio/sfexcept.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfexcept.c
prev sfio/sfexcept.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfexcept.c
done sfexcept.o
make sfextern.o
make sfio/sfextern.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfextern.c
prev sfio/sfextern.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfextern.c
done sfextern.o
make sffilbuf.o
make sfio/sffilbuf.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sffilbuf.c
prev sfio/sffilbuf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sffilbuf.c
done sffilbuf.o
make sfflsbuf.o
make sfio/sfflsbuf.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfflsbuf.c
prev sfio/sfflsbuf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfflsbuf.c
done sfflsbuf.o
make sfgetd.o
make sfio/sfgetd.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfgetd.c
prev sfio/sfgetd.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfgetd.c
done sfgetd.o
make sfgetl.o
make sfio/sfgetl.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfgetl.c
prev sfio/sfgetl.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfgetl.c
done sfgetl.o
make sfgets.o
make sfio/sfgets.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfgets.c
prev sfio/sfgets.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfgets.c
done sfgets.o
make sfgetu.o
make sfio/sfgetu.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfgetu.c
prev sfio/sfgetu.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfgetu.c
done sfgetu.o
make sfllen.o
make sfio/sfllen.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfllen.c
prev sfio/sfllen.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfllen.c
done sfllen.o
make sfmode.o
make sfio/sfmode.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfmode.c
prev sfio/sfmode.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfmode.c
done sfmode.o
make sfmove.o
make sfio/sfmove.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfmove.c
prev sfio/sfmove.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfmove.c
done sfmove.o
make sfnew.o
make sfio/sfnew.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfnew.c
prev sfio/sfnew.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfnew.c
done sfnew.o
make sfnotify.o
make sfio/sfnotify.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfnotify.c
prev sfio/sfnotify.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfnotify.c
done sfnotify.o
make sfnputc.o
make sfio/sfnputc.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfnputc.c
prev sfio/sfnputc.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfnputc.c
done sfnputc.o
make sfopen.o
make sfio/sfopen.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfopen.c
prev sfio/sfopen.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfopen.c
done sfopen.o
make sfpeek.o
make sfio/sfpeek.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfpeek.c
prev sfio/sfpeek.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfpeek.c
done sfpeek.o
make sfpool.o
make sfio/sfpool.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfpool.c
prev sfio/sfpool.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfpool.c
done sfpool.o
make sfpopen.o
make sfio/sfpopen.c
attr perm
attr scan
prev FEATURE/vfork
prev sfio/sfhdr.h
done sfio/sfpopen.c
prev sfio/sfpopen.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfpopen.c
done sfpopen.o
make sfprintf.o
make sfio/sfprintf.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfprintf.c
prev sfio/sfprintf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfprintf.c
done sfprintf.o
make sfputd.o
make sfio/sfputd.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfputd.c
prev sfio/sfputd.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfputd.c
done sfputd.o
make sfputl.o
make sfio/sfputl.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfputl.c
prev sfio/sfputl.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfputl.c
done sfputl.o
make sfputs.o
make sfio/sfputs.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfputs.c
prev sfio/sfputs.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfputs.c
done sfputs.o
make sfputu.o
make sfio/sfputu.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfputu.c
prev sfio/sfputu.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfputu.c
done sfputu.o
make sfread.o
make sfio/sfread.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfread.c
prev sfio/sfread.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfread.c
done sfread.o
make sfscanf.o
make sfio/sfscanf.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfscanf.c
prev sfio/sfscanf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfscanf.c
done sfscanf.o
make sfseek.o
make sfio/sfseek.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfseek.c
prev sfio/sfseek.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfseek.c
done sfseek.o
make sfsetbuf.o
make sfio/sfsetbuf.c
attr perm
attr scan
prev fsinfo.h
prev sfio/sfhdr.h
done sfio/sfsetbuf.c
prev sfio/sfsetbuf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfsetbuf.c
done sfsetbuf.o
make sfsetdisc.o
make sfio/sfsetdisc.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfsetdisc.c
prev sfio/sfsetdisc.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfsetdisc.c
done sfsetdisc.o
make sfset.o
make sfio/sfset.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfset.c
prev sfio/sfset.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfset.c
done sfset.o
make sfstack.o
make sfio/sfstack.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfstack.c
prev sfio/sfstack.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfstack.c
done sfstack.o
make sfstrtod.o
make sfio/sfstrtod.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfstrtod.c
prev sfio/sfstrtod.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfstrtod.c
done sfstrtod.o
make sfsync.o
make sfio/sfsync.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfsync.c
prev sfio/sfsync.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfsync.c
done sfsync.o
make sftable.o
make sfio/sftable.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sftable.c
prev sfio/sftable.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sftable.c
done sftable.o
make sftell.o
make sfio/sftell.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sftell.c
prev sfio/sftell.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sftell.c
done sftell.o
make sftmpfile.o
make sfio/sftmpfile.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sftmpfile.c
prev sfio/sftmpfile.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sftmpfile.c
done sftmpfile.o
make sfungetc.o
make sfio/sfungetc.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfungetc.c
prev sfio/sfungetc.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfungetc.c
done sfungetc.o
make sfvprintf.o
make sfio/sfvprintf.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfvprintf.c
prev sfio/sfvprintf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfvprintf.c
done sfvprintf.o
make sfvscanf.o
make sfio/sfvscanf.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfvscanf.c
prev sfio/sfvscanf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfvscanf.c
done sfvscanf.o
make sfwrite.o
make sfio/sfwrite.c
attr perm
attr scan
prev sfio/sfhdr.h
done sfio/sfwrite.c
prev sfio/sfwrite.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/sfwrite.c
done sfwrite.o
make _sfclearerr.o
make sfio/_sfclearerr.c
attr perm
attr scan
make sfio/_sfhdr.h
attr perm
attr scan
attr impl
prev sfio/sfhdr.h
done sfio/_sfhdr.h
done sfio/_sfclearerr.c
prev sfio/_sfclearerr.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfclearerr.c
done _sfclearerr.o
make _sffileno.o
make sfio/_sffileno.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sffileno.c
prev sfio/_sffileno.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sffileno.c
done _sffileno.o
make _sforigin.o
make sfio/_sforigin.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sforigin.c
prev sfio/_sforigin.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sforigin.c
done _sforigin.o
make _sfputl.o
make sfio/_sfputl.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfputl.c
prev sfio/_sfputl.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfputl.c
done _sfputl.o
make _sftmp.o
make sfio/_sftmp.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sftmp.c
prev sfio/_sftmp.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sftmp.c
done _sftmp.o
make _sfecvt.o
make sfio/_sfecvt.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfecvt.c
prev sfio/_sfecvt.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfecvt.c
done _sfecvt.o
make _sfgetc.o
make sfio/_sfgetc.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfgetc.c
prev sfio/_sfgetc.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfgetc.c
done _sfgetc.o
make _sfpeek.o
make sfio/_sfpeek.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfpeek.c
prev sfio/_sfpeek.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfpeek.c
done _sfpeek.o
make _sfputu.o
make sfio/_sfputu.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfputu.c
prev sfio/_sfputu.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfputu.c
done _sfputu.o
make _sfulen.o
make sfio/_sfulen.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfulen.c
prev sfio/_sfulen.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfulen.c
done _sfulen.o
make _sfeof.o
make sfio/_sfeof.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfeof.c
prev sfio/_sfeof.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfeof.c
done _sfeof.o
make _sfgetl.o
make sfio/_sfgetl.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfgetl.c
prev sfio/_sfgetl.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfgetl.c
done _sfgetl.o
make _sfpushed.o
make sfio/_sfpushed.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfpushed.c
prev sfio/_sfpushed.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfpushed.c
done _sfpushed.o
make _sfslen.o
make sfio/_sfslen.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfslen.c
prev sfio/_sfslen.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfslen.c
done _sfslen.o
make _sferror.o
make sfio/_sferror.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sferror.c
prev sfio/_sferror.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sferror.c
done _sferror.o
make _sfgetu.o
make sfio/_sfgetu.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfgetu.c
prev sfio/_sfgetu.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfgetu.c
done _sfgetu.o
make _sfputc.o
make sfio/_sfputc.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfputc.c
prev sfio/_sfputc.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfputc.c
done _sfputc.o
make _sffcvt.o
make sfio/_sffcvt.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sffcvt.c
prev sfio/_sffcvt.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sffcvt.c
done _sffcvt.o
make _sfputd.o
make sfio/_sfputd.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfputd.c
prev sfio/_sfputd.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfputd.c
done _sfputd.o
make _sfsync.o
make sfio/_sfsync.c
attr perm
attr scan
prev sfio/_sfhdr.h
done sfio/_sfsync.c
prev sfio/_sfsync.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c sfio/_sfsync.c
done _sfsync.o
make stdgets.o
make stdio/stdgets.c
attr perm
attr scan
prev include/stdio.h
prev sfio/sfhdr.h
done stdio/stdgets.c
prev stdio/stdgets.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/stdgets.c
done stdgets.o
make stdprintf.o
make stdio/stdprintf.c
attr perm
attr scan
prev include/stdio.h
prev sfio/sfhdr.h
done stdio/stdprintf.c
prev stdio/stdprintf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/stdprintf.c
done stdprintf.o
make stdscanf.o
make stdio/stdscanf.c
attr perm
attr scan
prev include/stdio.h
prev sfio/sfhdr.h
done stdio/stdscanf.c
prev stdio/stdscanf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/stdscanf.c
done stdscanf.o
make stdsetvbuf.o
make stdio/stdsetvbuf.c
attr perm
attr scan
prev include/stdio.h
prev sfio/sfhdr.h
done stdio/stdsetvbuf.c
prev stdio/stdsetvbuf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/stdsetvbuf.c
done stdsetvbuf.o
make stdsprintf.o
make stdio/stdsprintf.c
attr perm
attr scan
prev include/stdio.h
prev sfio/sfhdr.h
done stdio/stdsprintf.c
prev stdio/stdsprintf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/stdsprintf.c
done stdsprintf.o
make stdvsprintf.o
make stdio/stdvsprintf.c
attr perm
attr scan
prev sfio/sfhdr.h
done stdio/stdvsprintf.c
prev stdio/stdvsprintf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/stdvsprintf.c
done stdvsprintf.o
make stdvsscanf.o
make stdio/stdvsscanf.c
attr perm
attr scan
prev sfio/sfhdr.h
done stdio/stdvsscanf.c
prev stdio/stdvsscanf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/stdvsscanf.c
done stdvsscanf.o
make sprintf.o
make stdio/sprintf.c
attr perm
attr scan
prev stdio/stdsprintf.c
prev include/stdio.h
prev sfio/sfhdr.h
done stdio/sprintf.c
prev stdio/sprintf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/sprintf.c
done sprintf.o
make vsprintf.o
make stdio/vsprintf.c
attr perm
attr scan
prev stdio/stdvsprintf.c
prev include/stdio.h
prev sfio/sfhdr.h
done stdio/vsprintf.c
prev stdio/vsprintf.c
exec $CC $CCFLAGS -I. -Isfio -Iinclude "$LIBX" -c stdio/vsprintf.c
done vsprintf.o
exec $AR cr libx.a opendir.o readdir.o rewinddir.o seekdir.o telldir.o getcwd.o setcwd.o getshell.o hashalloc.o hashdump.o hashfree.o hashlook.o hashscan.o hashsize.o hashwalk.o memhash.o memsum.o strhash.o strsum.o cvtatoe.o cvtetoa.o chresc.o ctoi.o streval.o strmatch.o strcopy.o strmode.o stresc.o stropt.o strtape.o tok.o pathaccess.o pathcanon.o pathcheck.o pathpath.o pathkey.o pathprobe.o pathtemp.o cmdargs.o fs3d.o ftwalk.o perror.o putenv.o calloc.o malloc.o getnamval.o optget.o hsort.o query.o error.o liberror.o strerror.o strsignal.o fmtelapsed.o fmtls.o fmtmode.o fmtperm.o fmtuid.o fmtgid.o strelapsed.o strperm.o struid.o strgid.o stack.o stak.o memswap.o gethalf.o getlong.o puthalf.o putlong.o fgetline.o sigcrit.o sigunblock.o cmdopen.o cmdclose.o cmdrun.o cmdwait.o cmdkill.o recomp.o reerror.o reexec.o resub.o tmdate.o tmfix.o tmform.o tmgoff.o tminit.o tmleap.o tmlex.o tmmake.o tmpoff.o tmtime.o tmtype.o tmword.o tmzone.o vecargs.o vecfile.o vecfree.o vecload.o vecstring.o getsymlink.o putsymlink.o univdata.o getuniv.o setuniv.o winsize.o fclex.o sigdata.o touch.o lpstat.o memcmp.o memcpy.o memdup.o memset.o mkdir.o rmdir.o remove.o rename.o link.o unlink.o strtok.o strspn.o strpbrk.o strdup.o strchr.o strrchr.o strtod.o strtol.o strton.o sigsetmask.o mktemp.o tmpnam.o vfork.o killpg.o lstat.o readlink.o symlink.o setpgid.o atexit.o getdents.o getwd.o copy.o dup2.o errno.o sgetl.o sputl.o getpreroot.o ispreroot.o realopen.o setpreroot.o mount.o popen.o system.o iblocks.o modedata.o tmdata.o sfclose.o sfclrlock.o sfcvt.o sfdlen.o sfdopen.o sfexcept.o sfextern.o sffilbuf.o sfflsbuf.o sfgetd.o sfgetl.o sfgets.o sfgetu.o sfllen.o sfmode.o sfmove.o sfnew.o sfnotify.o sfnputc.o sfopen.o sfpeek.o sfpool.o sfpopen.o sfprintf.o sfputd.o sfputl.o sfputs.o sfputu.o sfread.o sfscanf.o sfseek.o sfsetbuf.o sfsetdisc.o sfset.o sfstack.o sfstrtod.o sfsync.o sftable.o sftell.o sftmpfile.o sfungetc.o sfvprintf.o sfvscanf.o sfwrite.o _sfclearerr.o _sffileno.o _sforigin.o _sfputl.o _sftmp.o _sfecvt.o _sfgetc.o _sfpeek.o _sfputu.o _sfulen.o _sfeof.o _sfgetl.o _sfpushed.o _sfslen.o _sferror.o _sfgetu.o _sfputc.o _sffcvt.o _sfputd.o _sfsync.o stdgets.o stdprintf.o stdscanf.o stdsetvbuf.o stdsprintf.o stdvsprintf.o stdvsscanf.o sprintf.o vsprintf.o
exec (ranlib libx.a) >/dev/null 2>&1 || true
done libx.a
prev mkhdr
prev genhdr
done all
make $INSTALLROOT/lib
exec if	 test ! -d $INSTALLROOT/lib
.... then	rm -rf $INSTALLROOT/lib && mkdir  $INSTALLROOT/lib  		    		    || { rm -rf $INSTALLROOT && mkdir  $INSTALLROOT && mkdir  $INSTALLROOT/lib  		    		    ;} || true
.... fi
done $INSTALLROOT/lib
make $INSTALLROOT/lib/libx.a
attr arch
prev libx.a
exec { cp libx.a $INSTALLROOT/lib/libx.a 2>/dev/null  		    		    ;} || true
exec (ranlib $INSTALLROOT/lib/libx.a) >/dev/null 2>&1 || true
done $INSTALLROOT/lib/libx.a
make $INSTALLROOT/man/man3
exec if	 test ! -d $INSTALLROOT/man/man3
.... then	rm -rf $INSTALLROOT/man/man3 && mkdir  $INSTALLROOT/man/man3  		    		    || { rm -rf $INSTALLROOT/man && mkdir  $INSTALLROOT/man && mkdir  $INSTALLROOT/man/man3  		    		    ;} || true
.... fi
done $INSTALLROOT/man/man3
make $INSTALLROOT/man/man3/hash.3
make man/hash.3
attr perm
done man/hash.3
exec { cp man/hash.3 $INSTALLROOT/man/man3/hash.3 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/man/man3/hash.3
make $INSTALLROOT/man/man3/ftwalk.3
make man/ftwalk.3
attr perm
done man/ftwalk.3
exec { cp man/ftwalk.3 $INSTALLROOT/man/man3/ftwalk.3 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/man/man3/ftwalk.3
make $INSTALLROOT/man/man3/re.3
make man/re.3
attr perm
done man/re.3
exec { cp man/re.3 $INSTALLROOT/man/man3/re.3 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/man/man3/re.3
make $INSTALLROOT/man/man3/sfio.3
make man/sfio.3
attr perm
done man/sfio.3
exec { cp man/sfio.3 $INSTALLROOT/man/man3/sfio.3 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/man/man3/sfio.3
make $INSTALLROOT/man/man3/stak.3
make man/stak.3
attr perm
done man/stak.3
exec { cp man/stak.3 $INSTALLROOT/man/man3/stak.3 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/man/man3/stak.3
make $INSTALLROOT/man/man3/tm.3
make man/tm.3
attr perm
done man/tm.3
exec { cp man/tm.3 $INSTALLROOT/man/man3/tm.3 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/man/man3/tm.3
make $INSTALLROOT/include
exec if	 test ! -d $INSTALLROOT/include
.... then	rm -rf $INSTALLROOT/include && mkdir  $INSTALLROOT/include  		    		    || { rm -rf $INSTALLROOT && mkdir  $INSTALLROOT && mkdir  $INSTALLROOT/include  		    		    ;} || true
.... fi
done $INSTALLROOT/include
make $INSTALLROOT/include/error.h
prev include/error.h
exec { cp include/error.h $INSTALLROOT/include/error.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/error.h
make $INSTALLROOT/include/ftwalk.h
prev include/ftwalk.h
exec { cp include/ftwalk.h $INSTALLROOT/include/ftwalk.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/ftwalk.h
make $INSTALLROOT/include/hash.h
prev include/hash.h
exec { cp include/hash.h $INSTALLROOT/include/hash.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/hash.h
make $INSTALLROOT/include/hashpart.h
exec { cp include/hashpart.h $INSTALLROOT/include/hashpart.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/hashpart.h
make $INSTALLROOT/include/ls.h
exec { cp include/ls.h $INSTALLROOT/include/ls.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/ls.h
make $INSTALLROOT/include/namval.h
prev include/namval.h
exec { cp include/namval.h $INSTALLROOT/include/namval.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/namval.h
make $INSTALLROOT/include/option.h
exec { cp include/option.h $INSTALLROOT/include/option.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/option.h
make $INSTALLROOT/include/re.h
prev include/re.h
exec { cp include/re.h $INSTALLROOT/include/re.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/re.h
make $INSTALLROOT/include/sfio.h
exec { cp include/sfio.h $INSTALLROOT/include/sfio.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/sfio.h
make $INSTALLROOT/include/stack.h
prev include/stack.h
exec { cp include/stack.h $INSTALLROOT/include/stack.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/stack.h
make $INSTALLROOT/include/stak.h
prev include/stak.h
exec { cp include/stak.h $INSTALLROOT/include/stak.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/stak.h
make $INSTALLROOT/include/stdio.h
prev include/stdio.h
exec { cp include/stdio.h $INSTALLROOT/include/stdio.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/stdio.h
make $INSTALLROOT/include/swap.h
prev include/swap.h
exec { cp include/swap.h $INSTALLROOT/include/swap.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/swap.h
make $INSTALLROOT/include/tar.h
make include/tar.h
attr perm
done include/tar.h
exec { cp include/tar.h $INSTALLROOT/include/tar.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/tar.h
make $INSTALLROOT/include/tm.h
prev include/tm.h
exec { cp include/tm.h $INSTALLROOT/include/tm.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/tm.h
make $INSTALLROOT/include/align.h
make align.h
prev mkhdr
prev genhdr
exec mkhdr align " genhdr" "$CC" $CCFLAGS   > align.h
done align.h
exec { cp align.h $INSTALLROOT/include/align.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/align.h
make $INSTALLROOT/include/dirent.h
prev dirent.h
exec { cp dirent.h $INSTALLROOT/include/dirent.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/dirent.h
make $INSTALLROOT/include/fsinfo.h
prev fsinfo.h
exec { cp fsinfo.h $INSTALLROOT/include/fsinfo.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/fsinfo.h
make $INSTALLROOT/include/limits.h
prev limits.h
exec { cp limits.h $INSTALLROOT/include/limits.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/limits.h
make $INSTALLROOT/include/sigdata.h
prev sigdata.h
exec { cp sigdata.h $INSTALLROOT/include/sigdata.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/sigdata.h
make $INSTALLROOT/include/lcldirent.h
prev lcldirent.h
exec { cp lcldirent.h $INSTALLROOT/include/lcldirent.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/lcldirent.h
make $INSTALLROOT/include/lcllimits.h
prev lcllimits.h
exec { cp lcllimits.h $INSTALLROOT/include/lcllimits.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/lcllimits.h
make $INSTALLROOT/include/lclparam.h
prev lclparam.h
exec { cp lclparam.h $INSTALLROOT/include/lclparam.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/lclparam.h
make $INSTALLROOT/include/lclstdio.h
prev lclstdio.h
exec { cp lclstdio.h $INSTALLROOT/include/lclstdio.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/lclstdio.h
make $INSTALLROOT/include/preroot.h
prev preroot.h
exec { cp preroot.h $INSTALLROOT/include/preroot.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/preroot.h
make $INSTALLROOT/include/sig.h
prev sig.h
exec { cp sig.h $INSTALLROOT/include/sig.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/sig.h
make $INSTALLROOT/include/ttyinfo.h
prev ttyinfo.h
exec { cp ttyinfo.h $INSTALLROOT/include/ttyinfo.h 2>/dev/null  		    		    ;} || true
done $INSTALLROOT/include/ttyinfo.h
done install
