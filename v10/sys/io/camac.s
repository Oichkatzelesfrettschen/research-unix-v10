L11:	.stabs	"camac.c",0x64,0,0,L11
	.stabs	"vaxpcc2",0xf0,0,17665,780003333
	.data
	.comm	_zvms,40
	.comm	_buf,4
	.comm	_buffers,4
	.comm	_nbuf,4
	.comm	_swsize,4
	.comm	_swpf,4
	.comm	_bfreelist,132
	.comm	_bswlist,44
	.comm	_bclnlist,4
	.comm	_nswdevt,4
	.comm	_qs,256
	.comm	_whichqs,4
	.align	2
	.globl	_camcdev
_camcdev:
	.long	_camopen
	.long	_camclose
	.long	_camread
	.long	_camwrite
	.long	_camioctl
	.long	_nulldev
	.long	0
	.align	2
	.globl	_camdebug
_camdebug:
	.long	0
	.comm	_regs,4
	.comm	_intvector,4
	.comm	_BASE,4
	.text
	.align	2
	.globl	_camopen
_camopen:
	.word	L.R1
	subl2	$L.SO1,sp
	.stabs	"camopen",0x24,0,59,_camopen
	.stabs	"d",0xa0,0,4,4
	.stabs	"f",0xa0,0,4,8
	tstl	_camdebug
	jeql	L103
	.data	1
L105:

	.byte	0x20,0x73,0x74,0x61,0x72,0x74,0x65,0x64
	.byte	0x20,0x63,0x61,0x6d,0x6f,0x70,0x65,0x6e
	.byte	0x20,0xa,0x0
	.text
	pushl	$L105
	calls	$1,_printf
L103:
	bicl3	$-256,4(ap),r11
	cmpl	r11,_camcnt
	jlss	L106
	movb	$19,_u+197
	jbr	L102
L106:
	addl3	r11,r11,r0
	addl2	r0,r0
	addl2	r0,r0
	addl3	$_camaddr,r0,-(sp)
	calls	$1,_ubaddr
	movl	r0,_regs
	tstl	_camdebug
	jeql	L107
	.data	1
L108:

	.byte	0x61,0x64,0x64,0x72,0x65,0x73,0x73,0x3a
	.byte	0x20,0x76,0x61,0x6c,0x75,0x65,0x28,0x63
	.byte	0x73,0x72,0x29,0x3a,0x25,0x6f,0x20,0x25
	.byte	0x6f,0x20,0x25,0x6f,0x20,0x25,0x6f,0x20
	.byte	0xa,0x0
	.text
	addl3	$774,_regs,-(sp)
	addl3	$772,_regs,-(sp)
	addl3	$770,_regs,-(sp)
	addl3	$768,_regs,-(sp)
	pushl	$L108
	calls	$5,_printf
L107:
	movl	_regs,_BASE
	tstl	_camdebug
	jeql	L109
	.data	1
L110:

	.byte	0x20,0x42,0x41,0x53,0x45,0x3a,0x20,0x25
	.byte	0x6f,0x20,0xa,0x0
	.text
	pushl	_BASE
	pushl	$L110
	calls	$2,_printf
L109:
	tstl	_camdebug
	jeql	L111
	.data	1
L112:

	.byte	0x42,0x41,0x53,0x45,0x20,0x61,0x73,0x20
	.byte	0x63,0x61,0x6c,0x63,0x75,0x6c,0x61,0x74
	.byte	0x65,0x64,0x3a,0x25,0x6f,0x20,0xa,0x0
	.text
	pushl	_BASE
	pushl	$L112
	calls	$2,_printf
	.data	1
L113:

	.byte	0x73,0x68,0x6f,0x75,0x6c,0x64,0x20,0x62
	.byte	0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
	.byte	0x20,0x20,0x3a,0x32,0x30,0x30,0x31,0x36
	.byte	0x37,0x35,0x30,0x30,0x30,0x30,0xa,0x0
	.text
	pushl	$L113
	calls	$1,_printf
L111:
	movl	_regs,r0
	clrw	768(r0)
	tstl	_camdebug
	jeql	L114
	.data	1
L115:

	.byte	0x20,0x63,0x73,0x72,0x20,0x69,0x6e,0x69
	.byte	0x74,0x69,0x61,0x6c,0x69,0x7a,0x65,0x64
	.byte	0x3a,0x20,0x25,0x6f,0x20,0x61,0x74,0x20
	.byte	0x61,0x64,0x64,0x72,0x20,0x25,0x6f,0xa
	.byte	0x0
	.text
	addl3	$768,_regs,-(sp)
	movl	_regs,r0
	movzwl	768(r0),-(sp)
	pushl	$L115
	calls	$3,_printf
	.data	1
L116:

	.byte	0x20,0x65,0x78,0x69,0x74,0x20,0x63,0x61
	.byte	0x6d,0x6f,0x70,0x65,0x6e,0x20,0xa,0x0
	.text
	pushl	$L116
	calls	$1,_printf
L114:
	.stabs	"dev",0x40,0,4,11
L102:
	ret
	.set	L.R1,0x800
	.set	L.SO1,0x0
L117:	.data
	.text
	.align	2
	.globl	_camclose
_camclose:
	.word	L.R2
	subl2	$L.SO2,sp
	.stabs	"camclose",0x24,0,113,_camclose
L118:
	ret
	.set	L.R2,0x0
	.set	L.SO2,0x0
L119:	.data
	.text
	.align	2
	.globl	_camread
_camread:
	.word	L.R3
	subl2	$L.SO3,sp
	.stabs	"camread",0x24,0,118,_camread
L120:
	ret
	.set	L.R3,0x0
	.set	L.SO3,0x0
L121:	.data
	.text
	.align	2
	.globl	_camwrite
_camwrite:
	.word	L.R4
	subl2	$L.SO4,sp
	.stabs	"camwrite",0x24,0,123,_camwrite
L122:
	ret
	.set	L.R4,0x0
	.set	L.SO4,0x0
L123:	.data
	.text
	.align	2
	.globl	_camioctl
_camioctl:
	.word	L.R5
	subl2	$L.SO5,sp
	.stabs	"camioctl",0x24,0,129,_camioctl
	.stabs	"dev",0xa0,0,4,4
	.stabs	"cmd",0xa0,0,4,8
	.stabs	"usr_buf",0xa0,0,34,12
	tstl	_camdebug
	jeql	L128
	.data	1
L129:

	.byte	0x20,0x73,0x74,0x61,0x72,0x74,0x69,0x6e
	.byte	0x67,0x20,0x63,0x61,0x6d,0x69,0x6f,0x63
	.byte	0x74,0x6c,0x20,0xa,0x0
	.text
	pushl	$L129
	calls	$1,_printf
	.data	1
L130:

	.byte	0x20,0x64,0x65,0x76,0x3d,0x20,0x25,0x6f
	.byte	0x20,0x63,0x6d,0x64,0x3d,0x20,0x25,0x64
	.byte	0x20,0x75,0x73,0x72,0x5f,0x62,0x75,0x66
	.byte	0x3d,0x20,0x25,0x6f,0x20,0x61,0x74,0x20
	.byte	0x61,0x64,0x64,0x72,0x20,0x25,0x6f,0x20
	.byte	0xa,0x0
	.text
	pushal	12(ap)
	pushl	12(ap)
	pushl	8(ap)
	pushl	4(ap)
	pushl	$L130
	calls	$5,_printf
L128:
	movl	8(ap),r0
	jbr	L132
L133:
L134:
L135:
	tstl	_camdebug
	jeql	L136
	.data	1
L137:

	.byte	0x20,0x31,0x73,0x74,0x20,0x63,0x6f,0x70
	.byte	0x79,0x69,0x6e,0x20,0x69,0x6e,0x20,0x64
	.byte	0x72,0x69,0x76,0x65,0x72,0x20,0xa,0x0
	.text
	pushl	$L137
	calls	$1,_printf
	.data	1
L138:

	.byte	0x20,0x75,0x73,0x72,0x5f,0x62,0x75,0x66
	.byte	0x20,0x25,0x6f,0x20,0xa,0x0
	.text
	pushl	12(ap)
	pushl	$L138
	calls	$2,_printf
L136:
	pushl	$20
	pushal	-20(fp)
	pushl	12(ap)
	calls	$3,_copyin
	tstl	r0
	jeql	L139
	movb	$14,_u+197
L139:
	ashl	$5,-16(fp),r0
	addl2	_regs,r0
	addl3	-12(fp),-12(fp),r1
	addl3	r1,r0,-36(fp)
	tstl	_camdebug
	jeql	L140
	.data	1
L141:

	.byte	0x20,0x61,0x64,0x64,0x72,0x65,0x73,0x73
	.byte	0x20,0x6f,0x66,0x20,0x64,0x65,0x76,0x69
	.byte	0x63,0x65,0x3a,0x20,0x25,0x6f,0x20,0xa
	.byte	0x0
	.text
	pushl	-36(fp)
	pushl	$L141
	calls	$2,_printf
L140:
	tstl	_camdebug
	jeql	L142
	.data	1
L143:

	.byte	0x20,0x63,0x61,0x6d,0x69,0x6f,0x63,0x74
	.byte	0x6c,0x64,0x72,0x69,0x76,0x65,0x72,0x3a
	.byte	0x20,0x25,0x64,0x20,0x25,0x64,0x0
	.text
	pushl	-12(fp)
	pushl	-16(fp)
	pushl	$L143
	calls	$3,_printf
L142:
	movl	8(ap),r0
	jbr	L145
L146:
	tstl	_camdebug
	jeql	L147
	.data	1
L148:

	.byte	0x73,0x74,0x61,0x72,0x74,0x65,0x64,0x20
	.byte	0x43,0x41,0x4d,0x52,0x45,0x41,0x44,0x20
	.byte	0xa,0x0
	.text
	pushl	$L148
	calls	$1,_printf
L147:
	movl	_regs,r0
	movl	_regs,r1
	bicw3	$-63481,768(r1),r2
	cvtbw	-20(fp),r1
	bicw2	$-8,r1
	bisw3	r1,r2,768(r0)
	tstl	_camdebug
	jeql	L149
	.data	1
L150:

	.byte	0x73,0x65,0x74,0x20,0x72,0x65,0x67,0x73
	.byte	0x2d,0x3e,0x63,0x73,0x72,0x20,0x3d,0x20
	.byte	0x25,0x6f,0x20,0xa,0x0
	.text
	movl	_regs,r0
	movzwl	768(r0),-(sp)
	pushl	$L150
	calls	$2,_printf
L149:
	ashl	$5,-16(fp),r0
	addl2	_regs,r0
	addl3	-12(fp),-12(fp),r1
	addl2	r1,r0
	movzwl	(r0),-28(fp)
	tstl	_camdebug
	jeql	L151
	.data	1
L152:

	.byte	0x69,0x6e,0x20,0x63,0x61,0x6d,0x72,0x65
	.byte	0x61,0x64,0x28,0x64,0x72,0x69,0x76,0x65
	.byte	0x72,0x29,0x20,0x64,0x61,0x74,0x61,0x6c
	.byte	0x6f,0x3d,0x25,0x6f,0x20,0xa,0x0
	.text
	pushl	-28(fp)
	pushl	$L152
	calls	$2,_printf
L151:
	movl	_regs,r0
	movzwl	770(r0),-32(fp)
	ashl	$16,-32(fp),-8(fp)
	addl2	-28(fp),-8(fp)
	jbr	L144
L153:
	tstl	_camdebug
	jeql	L154
	.data	1
L155:

	.byte	0x20,0x63,0x61,0x6d,0x77,0x72,0x69,0x74
	.byte	0x65,0x28,0x64,0x72,0x69,0x76,0x65,0x72
	.byte	0x29,0x20,0x73,0x74,0x61,0x72,0x74,0x20
	.byte	0xa,0x0
	.text
	pushl	$L155
	calls	$1,_printf
	.data	1
L156:

	.byte	0x20,0x63,0x6f,0x6e,0x74,0x65,0x6e,0x74
	.byte	0x73,0x20,0x6f,0x66,0x20,0x62,0x75,0x66
	.byte	0x66,0x65,0x72,0x31,0x3a,0xa,0x0
	.text
	pushl	$L156
	calls	$1,_printf
	.data	1
L157:

	.byte	0x62,0x75,0x66,0x66,0x65,0x72,0x31,0x2e
	.byte	0x46,0x20,0x25,0x6f,0xa,0x0
	.text
	cvtbl	-20(fp),-(sp)
	pushl	$L157
	calls	$2,_printf
	.data	1
L158:

	.byte	0x62,0x75,0x66,0x66,0x65,0x72,0x31,0x2e
	.byte	0x4e,0x20,0x25,0x64,0xa,0x0
	.text
	pushl	-16(fp)
	pushl	$L158
	calls	$2,_printf
	.data	1
L159:

	.byte	0x62,0x75,0x66,0x66,0x65,0x72,0x31,0x2e
	.byte	0x41,0x20,0x25,0x64,0xa,0x0
	.text
	pushl	-12(fp)
	pushl	$L159
	calls	$2,_printf
	.data	1
L160:

	.byte	0x62,0x75,0x66,0x66,0x65,0x72,0x31,0x2e
	.byte	0x64,0x61,0x74,0x61,0x20,0x25,0x6f,0xa
	.byte	0x0
	.text
	pushl	-8(fp)
	pushl	$L160
	calls	$2,_printf
	.data	1
L161:

	.byte	0x62,0x75,0x66,0x66,0x65,0x72,0x31,0x2e
	.byte	0x51,0x20,0x25,0x6f,0xa,0x0
	.text
	movzwl	-4(fp),-(sp)
	pushl	$L161
	calls	$2,_printf
L154:
	movl	_regs,r0
	movl	_regs,r1
	bicw3	$-63481,768(r1),r2
	cvtbw	-20(fp),r1
	bicw2	$-8,r1
	bisw3	r1,r2,768(r0)
	tstl	_camdebug
	jeql	L162
	.data	1
L163:

	.byte	0x63,0x61,0x6d,0x77,0x72,0x69,0x74,0x65
	.byte	0x20,0x73,0x65,0x74,0x20,0x72,0x65,0x67
	.byte	0x73,0x2d,0x3e,0x63,0x73,0x72,0x20,0x3d
	.byte	0x20,0x25,0x6f,0x20,0xa,0x0
	.text
	movl	_regs,r0
	movzwl	768(r0),-(sp)
	pushl	$L163
	calls	$2,_printf
	.data	1
L164:

	.byte	0x70,0x75,0x74,0x20,0x74,0x68,0x65,0x20
	.byte	0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x69
	.byte	0x6e,0x74,0x6f,0x20,0x74,0x68,0x65,0x20
	.byte	0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72
	.byte	0x73,0x20,0xa,0x0
	.text
	pushl	$L164
	calls	$1,_printf
	.data	1
L165:

	.byte	0x62,0x75,0x66,0x66,0x65,0x72,0x31,0x2e
	.byte	0x64,0x61,0x74,0x61,0x20,0x25,0x6f,0x20
	.byte	0x61,0x74,0x20,0x25,0x6f,0x0
	.text
	pushal	-8(fp)
	pushl	-8(fp)
	pushl	$L165
	calls	$3,_printf
L162:
	movl	_regs,r0
	extzv	$16,$16,-8(fp),r1
	movw	r1,770(r0)
	tstl	_camdebug
	jeql	L166
	.data	1
L167:

	.byte	0x20,0x64,0x61,0x74,0x61,0x68,0x69,0x3d
	.byte	0x20,0x25,0x6f,0x20,0xa,0x0
	.text
	movl	_regs,r0
	movzwl	770(r0),-(sp)
	pushl	$L167
	calls	$2,_printf
	.data	1
L168:

	.byte	0x20,0x77,0x72,0x69,0x74,0x69,0x6e,0x67
	.byte	0x20,0x74,0x6f,0x20,0x61,0x64,0x64,0x72
	.byte	0x65,0x73,0x73,0x20,0x25,0x6f,0x20,0xa
	.byte	0x0
	.text
	pushl	-36(fp)
	pushl	$L168
	calls	$2,_printf
L166:
	ashl	$5,-16(fp),r0
	addl2	_regs,r0
	addl3	-12(fp),-12(fp),r1
	addl2	r1,r0
	bicw3	$-65536,-8(fp),(r0)
	tstl	_camdebug
	jeql	L169
	.data	1
L170:

	.byte	0x20,0x77,0x72,0x69,0x74,0x74,0x65,0x6e
	.byte	0x20,0x74,0x6f,0x20,0x61,0x64,0x64,0x72
	.byte	0x65,0x73,0x73,0x20,0x25,0x6f,0xa,0x0
	.text
	pushl	-36(fp)
	pushl	$L170
	calls	$2,_printf
L169:
	jbr	L144
L171:
	movl	_regs,r0
	bicw2	$-63488,768(r0)
	movl	-36(fp),-40(fp)
	movb	-20(fp),*-40(fp)
	tstl	_camdebug
	jeql	L172
	.data	1
L173:

	.byte	0x20,0x63,0x64,0x65,0x76,0x69,0x63,0x65
	.byte	0x3d,0x20,0x25,0x6f,0x20,0x61,0x74,0x20
	.byte	0x61,0x64,0x64,0x72,0x65,0x73,0x73,0x3d
	.byte	0x20,0x25,0x6f,0x20,0xa,0x0
	.text
	pushal	-40(fp)
	pushl	-40(fp)
	pushl	$L173
	calls	$3,_printf
L172:
	movl	_regs,r0
	bicw2	$-63488,768(r0)
	movl	_regs,r0
	movzwl	768(r0),r0
	bicl2	$-129,r0
	extzv	$7,$25,r0,r1
	movw	r1,-4(fp)
	jbr	L144
L145:
	casel	r0,$1,$2
L174:
	.word	L146-L174
	.word	L153-L174
	.word	L171-L174
L175:
L144:
	movl	_regs,r0
	movzwl	768(r0),r0
	bicl2	$-129,r0
	extzv	$7,$25,r0,r1
	movw	r1,-4(fp)
	pushl	$20
	pushl	12(ap)
	pushal	-20(fp)
	calls	$3,_copyout
	tstl	r0
	jeql	L176
	movb	$14,_u+197
L176:
	jbr	L131
L177:
L178:
L179:
L180:
	movl	8(ap),r0
	jbr	L182
L183:
	movl	_regs,r0
	movzwl	768(r0),-24(fp)
	jbr	L181
L184:
	movl	_regs,r0
	movzwl	772(r0),-24(fp)
	jbr	L181
L185:
	movl	_regs,r0
	movzwl	774(r0),-24(fp)
	jbr	L181
L186:
	movl	_regs,r0
	movzwl	782(r0),-24(fp)
	jbr	L181
L182:
	casel	r0,$4,$3
L187:
	.word	L183-L187
	.word	L185-L187
	.word	L184-L187
	.word	L186-L187
L188:
L181:
	pushl	$4
	pushl	12(ap)
	pushal	-24(fp)
	calls	$3,_copyout
	tstl	r0
	jeql	L189
	movb	$14,_u+197
L189:
	jbr	L131
L190:
	pushl	$4
	pushal	-24(fp)
	pushl	12(ap)
	calls	$3,_copyin
	tstl	r0
	jeql	L191
	movb	$14,_u+197
L191:
	movl	_regs,r0
	movw	-24(fp),768(r0)
	jbr	L131
L132:
	casel	r0,$1,$7
L192:
	.word	L133-L192
	.word	L134-L192
	.word	L135-L192
	.word	L177-L192
	.word	L179-L192
	.word	L178-L192
	.word	L180-L192
	.word	L190-L192
L193:
L131:
	.stabs	"cdevice",0x80,0,34,40
	.stabs	"device",0x80,0,45,36
	.stabs	"datahi",0x80,0,14,32
	.stabs	"datalo",0x80,0,14,28
	.stabs	"buffer2",0x80,0,8,24
	.stabs	"buffer1",0x80,0,8,20
L124:
	ret
	.set	L.R5,0x0
	.set	L.SO5,0x28
L194:	.data
	.text
	.align	2
	.globl	_cam0int
_cam0int:
	.word	L.R6
	subl2	$L.SO6,sp
	.stabs	"cam0int",0x24,0,276,_cam0int
L196:
	ret
	.set	L.R6,0x0
	.set	L.SO6,0x0
L197:	.data
	.text
L198:	.stabs	"camac.c",0x94,0,279,L198
